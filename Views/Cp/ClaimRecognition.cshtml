@using System.Data
@using HACCP.Libs
@using HACCP.Libs.Views

@{
    Layout = null;
    ViewData["Title"] = "ClaimRecognition";
}

<style>
    #ClaimRecognition textarea.form-control {
        height: 35px;
    }
</style>

<script id="ClaimRecognitionJs">
    var ClaimRecognition_dbState = "init";
    var ClaimRecognition_focusedRow = null;

    //전자서명 관련 변수
    var ClaimRecognition_signGubun = "";
    var ClaimRecognition_pEmp_cd = "";
    var ClaimRecognition_IsLoginUserCheck = "@ViewBag.IsLoginUserCheck";
    var ClaimRecognition_userCd = sessionStorage.getItem("loginCD");
    var ClaimRecognition_userNm = sessionStorage.getItem("loginNM");
    var ClaimRecognition_ElecData = null; //전자서명 lookup 데이터
    var sign_seq = "";

    $(function () {
        $("#ClaimRecognitionForm input[name=select_S][value='0']").prop("checked", true);
        $("#ClaimRecognitionForm select[name=claim_status_S]").val("3"); //판정완료

        setDatePicker("#ClaimRecognition .datepicker");

        ClaimRecognitionSearch();
    });

    //상단 라디오 버튼 변경시 조회
    function ClaimRecognitionByRadio() {
        ClaimRecognitionSearch();
    }

    //조회
    function ClaimRecognitionSearch() {
        var form = $('#ClaimRecognitionForm')[0];
        var data = new FormData(form);

        $.ajax({
            type: 'POST',
            async: false,
            contentType: false,
            processData: false,
            url: '/Cp/ClaimRecognition_GridSelect',
            data: data,
            success: function (result) {

                if (result != "") {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }
                    if (json.length > 0) {

                        $("#ClaimRecognition_Grid").dxDataGrid("option", "dataSource", json);
                        //$("#ClaimRecognition_Grid").dxDataGrid("option", "focusedRowIndex", -1);
                        $("#ClaimRecognition_Grid").dxDataGrid("option", "focusedRowIndex", 0);
                    } else {

                        $("#ClaimRecognition_Grid").dxDataGrid("option", "dataSource", []);
                        $("#ClaimRecognition_Grid").dxDataGrid("option", "focusedRowIndex", -1);
                        //조사목록 그리드
                        $("#ClaimRecognition_RightGrid").dxDataGrid("option", "dataSource", []);
                        $("#ClaimRecognition_RightGrid").dxDataGrid("instance").option("focusedRowKey", "");
                    }

                } else {
                    $("#ClaimRecognition_Grid").dxDataGrid("option", "dataSource", []);
                    $("#ClaimRecognition_Grid").dxDataGrid("option", "focusedRowIndex", -1);
                    //조사목록 그리드
                    $("#ClaimRecognition_RightGrid").dxDataGrid("option", "dataSource", []);
                    $("#ClaimRecognition_RightGrid").dxDataGrid("instance").option("focusedRowKey", "");
                }
                ClaimRecognition_dbState = "search";
            }
        })

    }

    //입력
    function ClaimRecognitionInput() {

    }

    //수정
    function ClaimRecognitionEdit() {

    }

    //삭제
    function ClaimRecognitionDelete() {

        if (ClaimRecognition_focusedRow_S != null) {

            if (ClaimRecognition_focusedRow_S.data.sign_yn != "1") {
                alert("삭제할 데이터가 없습니다."); return;
            }

            var ok = confirm("취소하시겠습니까?");
            if (ok) {

                if (ClaimRecognition_focusedRow_S.data.sign_set_dt_seq == "1") {
                    if (ClaimRecognition_focusedRow_S.data.next_sign_yn == "1") {
                        alert("검토자 서명이 완료된 상태입니다."); return;
                    }
                } else if (ClaimRecognition_focusedRow_S.data.sign_set_dt_seq == "2") {
                    if (ClaimRecognition_focusedRow_S.data.next_sign_yn == "1") {
                        alert("승인자 서명이 완료된 상태입니다."); return;
                    }
                }

                 ClaimRecognition_signGubun = "Delete";
                 ClaimRecognition_DoSign(); //전자서명 팝업
            }
        } else {
            alert("삭제할 데이터가 없습니다."); 
        }

    }

    //저장
    function ClaimRecognitionSave() {

    }

    //취소
    function ClaimRecognitionUndo() {

    }

    //프린트
    function ClaimRecognitionPrint() {

        if (ClaimRecognition_focusedRow != null) {
            var btnType;
            btnType = $(event.target).closest('.dx-button').attr('id');

            var report = new ReportHelper();

            report.addParam({
                objFile: { path: "Cp", RptFileName: "ClaimReportCR1" },
                objSp: { SpName: "SP_ClaimRecognition_Y", gubun: "RP", reportParam: "claim_id:" + ClaimRecognition_focusedRow.data.claim_id },
                objEtcInfo: { subParam: "" },
                objTblNm: { tblName: "" }
            });

            if (btnType.indexOf('Preview') > -1) {
                report.preview();
            } else if (btnType.indexOf('Print') > -1) {
                report.print();
            }
        } else {
            alert("불만사항을 선택하세요");
        }
    }

    //엑셀
    function ClaimRecognitionExcel() {

    }

    //포커스 로우 우측 폼에 매핑
    function ClaimRecognition_DataSetting() {
        if (ClaimRecognition_focusedRow != null) {
            var data = ClaimRecognition_focusedRow.data;
            $("#ClaimRecognitionForm_Right textarea[name='claim_content']").val(data.claim_content);//불만내용
            $("#ClaimRecognitionForm_Right input[name='claim_emp_nm']").val(data.claim_emp_nm);//보고자
            $("#ClaimRecognitionForm_Right input[name='receive_emp_nm']").val(data.receive_emp_nm);//의뢰자
            $("#ClaimRecognitionForm_Right input[name='claim_title']").val(data.claim_title);//불만제목

            $("#ClaimRecognitionForm_Right textarea[name='result_opinion']").val(data.result_opinion);//조사결과
            $("#ClaimRecognitionForm_Right textarea[name='plan_opinion']").val(data.plan_opinion);//대책
            $("#ClaimRecognitionForm_Right input[name='judge_date']").val(data.judge_date);//조사일자
            $("#ClaimRecognitionForm_Right input[name='judge_emp_nm']").val(data.judge_emp_nm);//조사자(이름)
            $("#ClaimRecognitionForm_Right input[name='judge_type_nm']").val(data.judge_type_nm);//조사판정
            $("#ClaimRecognitionForm_Right input[name='claim_type_nm']").val(data.claim_type_nm);//불만구분
            $("#ClaimRecognitionForm_Right input[name='judge_opinion']").val(data.judge_opinion);//조사의견

            $("#ClaimRecognitionForm_Right input[name='dept_nm1']").val(data.dept_nm1);//관련부서1(이름
            $("#ClaimRecognitionForm_Right input[name='dept_nm2']").val(data.dept_nm2);//관련부서2(이름)
            $("#ClaimRecognitionForm_Right input[name='result_file1_nm']").val(data.result_file1_nm);//첨부파일1
            $("#ClaimRecognitionForm_Right input[name='result_file2_nm']").val(data.result_file2_nm);//첨부파일2
            $("#ClaimRecognitionForm_Right input[name='remark']").val(data.remark);//비고

        } else {
            $("#ClaimRecognitionForm_Right")[0].reset();

        }
    }

    //상세 그리드 조회
    function ClaimRecognition_GridSelect1() {
        if (ClaimRecognition_focusedRow != null) {
            $.ajax({
                type: 'POST',
                async: false,
                url: '/Cp/ClaimRecognition_GridSelect1',
                data: {
                    claim_id: ClaimRecognition_focusedRow.data.claim_id
                },
                success: function (result) {

                    if (result != "") {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }
                        if (json.length > 0) {
                            $("#ClaimRecognition_RightGrid").dxDataGrid("option", "dataSource", json);
                            $("#ClaimRecognition_RightGrid").dxDataGrid("option", "focusedRowIndex", 0);
                        } else {
                            $("#ClaimRecognition_RightGrid").dxDataGrid("option", "dataSource", []);
                            $("#ClaimRecognition_RightGrid").dxDataGrid("instance").option("focusedRowKey", "");
                        }

                    } else {
                        $("#ClaimRecognition_RightGrid").dxDataGrid("option", "dataSource", []);
                        $("#ClaimRecognition_RightGrid").dxDataGrid("instance").option("focusedRowKey", "");
                    }
                }
            })
        }

    }


    //전자서명

    //전자서명 팝업 입력폼 초기화
    function ClaimRecognition_clearSignInput() {
        $('#ClaimRecognition_SignForm')[0].reset();
        $("#ClaimRecognition_ConfirmForm input[name='dept_nm']").val("");
        $("#ClaimRecognition_ConfirmForm input[name='emp_nm']").val("");
    }


    //유효 ID 체크
    function ClaimRecognition_IDValidation() {
        var check = true;

        var data = new FormData($('#ClaimRecognition_SignForm')[0]);
        data.set("gubun", "S");

        $.ajax({
            type: 'POST',
            async: false,
            url: '/Comm/IDValidation',
            data: data,
            contentType: false,
            processData: false,
            success: function (result) {

                if (result.length <= 0) {
                    alert("권한이 없는 사용자이거나 잘못된 ID,PW 입니다.");
                    check = false;
                    return;
                }

                ClaimRecognition_pEmp_cd = JSON.parse(result)[0].emp_cd;

                $("#ClaimRecognition_ConfirmForm input[name='dept_nm']").val(JSON.parse(result)[0].dept_nm);
                $("#ClaimRecognition_ConfirmForm input[name='emp_nm']").val(JSON.parse(result)[0].emp_nm);
                $("#ClaimRecognition_ConfirmForm input[name='emp_cd']").val(JSON.parse(result)[0].emp_cd);
            }
        });

        setTimeout(function () {
            var popup = $("#ClaimRecognition_Popup").dxPopup("instance");
            popup.hide();
        }, 1000);


        return check;
    }


    //전자서명 팝업 띄우기
    function ClaimRecognition_DoSign() {
        if (ClaimRecognition_focusedRow != null) {
            var popup = $("#ClaimRecognition_Popup").dxPopup("instance");
            popup.option("contentTemplate", $("#ClaimRecognition_checkSignPopupTemplate"));
            popup.show();
        }
    }


    //대리자 권한 체크
    function ClaimRecognition_GetRepresentativeAuthority() {
        console.log(ClaimRecognition_focusedRow);

        var sign_history_id = "";
        var confirm_emp_cd = "";

        switch (ClaimRecognition_focusedRow_S.data.sign_set_dt_seq) {
            case "1":
                sign_history_id = ClaimRecognition_focusedRow.data.confirm_emp_id0;
                break;
            case "2":
                sign_history_id = ClaimRecognition_focusedRow.data.confirm_emp_id1;
                break;
            case "3":
                sign_history_id = ClaimRecognition_focusedRow.data.confirm_emp_id2;
                break;
        }

        $.ajax({
            type: 'POST',
            url: '/Cp/ClaimRecognition_GetRepresentativeAuthority',
            async: false,
            data: {
                sign_history_id: sign_history_id
            },
            success: function (result) {
                if (result.length > 0) {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    confirm_emp_cd = json.messege;
                }
            }
        });
        return confirm_emp_cd;
    }


    //대리자 권한 조회
    function ClaimRecognition_GetRepresentativeYN(emp_cd, sign_set_dt_seq) {
        var check = false;

        $.ajax({
            type: 'POST',
            url: '/Cp/ClaimRecognition_GetRepresentativeYN',
            async: false,
            data: {
                emp_cd: emp_cd,
                sign_set_dt_seq: sign_set_dt_seq
            },
            success: function (result) {
                if (result.length > 0) {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }


                    if (json.messege.length > 0) {
                        confirm_emp_cd = json.messege;
                        check = true;
                    }
                }
            }
        });

        return check;

    }


    //전자서명 삭제
    function ClaimRecognition_DeleteSign() {

        $.ajax({
            type: 'POST',
            url: '/Cp/ClaimRecognition_DeleteSign',
            async: false,
            data: {
                claim_id: ClaimRecognition_focusedRow.data.claim_id,
                delgubun: Number(ClaimRecognition_focusedRow_S.data.sign_set_dt_seq) - 1
            },
            success: function (result) {
                if (result.length > 0) {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    ClaimRecognitionSearch();

                }
            }
        });
    }


    //전자서명 팝업 서명제출
    function ClaimRecognition_SignSubmit() {

        //유효한 ID인지 확인
        var checkUser = ClaimRecognition_IDValidation();
        if (checkUser) {

            if (ClaimRecognition_focusedRow_S != null) {
                //1. 상단 삭제 버튼으로 전자서명 이루어질 때
                if (ClaimRecognition_signGubun == "Delete") {

                    //전자서명자와 일치여부를 확인
                    //서명 책임자와 서명자가 일치하지 않으면 대리자 권한을 체크
                    var confirm_emp_cd = ClaimRecognition_GetRepresentativeAuthority();

                    if (confirm_emp_cd != ClaimRecognition_pEmp_cd) {
                        alert("최종서명자와 일치하지 않습니다."); return;
                    } else {
                        ClaimRecognition_DeleteSign();
                    }

                    //ClaimRecognition_LookupSetting();

                    //2. 하단 전자서명 버튼으로 전자서명 이루어질 때
                } else if (ClaimRecognition_signGubun == "SignClick") {

                    var validation_type = "2";
                    var representative_yn = "N";
                    var sign_set_dt_seq = ClaimRecognition_focusedRow_S.data.sign_set_dt_seq;

                    if (ClaimRecognition_IsLoginUserCheck == "Y" && ClaimRecognition_userCd != ClaimRecognition_pEmp_cd) {
                        alert("로그인 사용자와 서명자가 일치하지 않습니다."); return;
                    }

                    //서명 책임자와 서명자가 일치하지 않으면 대리자 권한을 체크
                    if (ClaimRecognition_focusedRow_S.data.responsible_emp_cd != ClaimRecognition_pEmp_cd) {
                        var yn = ClaimRecognition_GetRepresentativeYN(ClaimRecognition_pEmp_cd, sign_set_dt_seq);
                        if (yn == false) {
                            alert("서명 권한이 없습니다."); return;
                        }
                        representative_yn = "Y";

                    }

                    //전자서명 자료를 저장
                    ClaimRecognition_InsSignInfo(ClaimRecognition_pEmp_cd, validation_type, representative_yn, sign_set_dt_seq);
                }
            }
        }
    }


    function ClaimRecognitionESInfo() {

        if (ClaimRecognition_focusedRow != null) {
            $.ajax({
                type: 'POST',
                url: '/Cp/ClaimRecognitionESInfo',
                data: {
                    claim_id: ClaimRecognition_focusedRow.data.claim_id,
                    sign_set_cd: '1045'
                },
                success: function (result) {
                    var json = JSON.parse(result);


                    if (json == "") {
                        $("#ClaimRecognitionSignGrid").dxDataGrid("option", "dataSource", []);
                        $("#ClaimRecognitionSignGrid").dxDataGrid("option", "focusedRowIndex", -1);

                    } else {
                        $("#ClaimRecognitionSignGrid").dxDataGrid("option", "dataSource", json);
                        $("#ClaimRecognitionSignGrid").dxDataGrid("option", "focusedRowIndex", -1);
                    }
                }
            });
        } else {
            $("#ClaimRecognitionSignGrid").dxDataGrid("option", "dataSource", []);
            $("#ClaimRecognitionSignGrid").dxDataGrid("option", "focusedRowIndex", -1);
        }
       
    }

    //전자서명 초기화 (서명의미, 책임자)
    function ClaimRecognition_LookupSearchInit(){
        $('#ClaimRecognitionSignForm input[name="test_sign_set_nm"]').val("");
        $("#ClaimRecognitionSignForm #consider_cd").empty();
        $('#ClaimRecognitionSignForm input[name="responsible_emp_nm"]').val("");
        $('#ClaimRecognitionSignForm input[name="responsible_authority"]').val("");
    }

    //전자서명 초기화(서명정보)
    function ClaimRecognition_LookupDataInit() {

        $('#ClaimRecognitionSignForm input[name="sign_emp_nm"]').val("");
        $('#ClaimRecognitionSignForm input[name="sign_emp_authority"]').val("");
        $('#ClaimRecognitionSignForm input[name="sign_time"]').val("");
        $("#ClaimRecognitionSignForm #sign_image").attr("src", null);
    }

    //그리드 전자서명
    function ClaimRecognition_Sign_Check(e) {
        if (e.columnIndex == 3) {
            if (ClaimRecognition_focusedRow != null) {
                var status = ClaimRecognition_focusedRow.data.claim_status;

                if (Number(status) < 3) {
                    alert("전자서명을 할 수 없는 상태입니다."); return;
                }

                ClaimRecognition_signGubun = "SignClick";
                ClaimRecognition_SetES(e.data);
                //ClaimRecognition_DoSign();
            }
        }
    }


    //전자서명 버튼 클릭 > 전자서명 유효성 체크
    function ClaimRecognition_SetES(_data) {
        //sign_seq = _data.sign_set_dt_seq;

        if (_data.sign_yn == "1") {
            alert("이미 서명하였습니다."); return;
        }

        if (_data.prev_sign_yn == "0") {
            alert("앞단계의 서명이 모두 완료된 후 서명할 수 있습니다.");

            return;
        }

        //전자서명으로 서명자를 확인
        ClaimRecognition_DoSign();// ClaimRecognition_SignSubmit 에서 이후 로직 수행
    }

    //전자서명 데이터 저장
    function ClaimRecognition_InsSignInfo(sign_emp_cd, sign_type, representative_yn, sign_set_dt_seq) {
        $.ajax({
            type: 'POST',
            url: '/Cp/ClaimRecognition_InsSignInfo',
            async: false,
            data: {
                sign_emp_cd: sign_emp_cd,
                sign_type: sign_type,
                representative_yn: representative_yn,
                sign_set_dt_seq: sign_set_dt_seq,
                claim_id: ClaimRecognition_focusedRow.data.claim_id,
                remark: $("#ClaimRecognitionForm_Right input[name='remark']").val()
            },
            success: function (result) {
                if (result.length > 0) {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }
                    var sign_history_id = ""
                    sign_history_id = json.messege;

                    if (sign_history_id.length > 0) {
                        alert("정상 처리되었습니다.");
                    } else {
                        alert("인증에 실패했습니다.");
                    }

                    var popup = $("#ClaimRecognition_Popup").dxPopup("instance");
                    popup.hide();

                    ClaimRecognitionSearch();
                    //ClaimRecognition_ElecSearchData(sign_set_dt_seq);

                }
            }
        });
    }

    //그리드 이벤트
    //메인 그리드 포커스 변경
    function ClaimRecognition_OnFocusedRowChanged(e) {
        if (!e.row || !e.row.data) {
            ClaimRecognition_focusedRow = null;
        } else {
            ClaimRecognition_focusedRow = e.row;
        }

        ClaimRecognition_DataSetting();
        ClaimRecognition_GridSelect1();
        //ClaimRecognition_LookupSetting();
        ClaimRecognitionESInfo();
    }

    function ClaimRecognition_OnFocusedRowChanged_S(e) {
        if (!e.row || !e.row.data) {
            ClaimRecognition_focusedRow_S = null;
        } else {
            ClaimRecognition_focusedRow_S = e.row;
        }
    }

    function ClaimRecognition_SetInitFocus() {
        $("#ClaimRecognitionSignGrid").dxDataGrid("instance").option("focusedRowIndex", 0);
    }

    //파일 열기
    function ClaimRecognition_DownloadAttatchedFile(num) {
        if (ClaimRecognition_focusedRow != null) {

            var doc_file_id = (num == "1") ? ClaimRecognition_focusedRow.data.result_file1 : ClaimRecognition_focusedRow.data.result_file2;
            if (doc_file_id == "" || doc_file_id == null) return;
            document.location.assign('/Cp/ClaimRecognition_OpenFile?doc_file_id=' + doc_file_id);

            //$.ajax({
            //    type: 'POST',
            //    url: '/Cp/ClaimRecognition_OpenFile',
            //    async: false,
            //    data: {
            //        doc_file_id: doc_file_id
            //    },
            //    success: function (result) {
            //        if (result.length > 0) {
            //            var json = JSON.parse(result);

            //            if (json.hasOwnProperty('sessionLoss')) {
            //                alert("세션이 만료되었습니다.");
            //                sessionStorage.clear();
            //                location.replace("/Comm/Login");
            //            }

            //            //alert(json.messege);
            //        }
            //    }
            //});
        }
    }

</script>

<div id="ClaimRecognition" autoresize="Y">
    @*<h4 class="divTitle">처리 결과 승인</h4>*@

    @using (Html.DevExtreme().NamedTemplate("ClaimRecognition_checkSignPopupTemplate"))
    {
        <h6>전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

        <form id="ClaimRecognition_SignForm">

            <div class="input-wrapper">
                <label class="col-3">아이디</label>
                <input type="text" class="col-8 form-control" name="txt_ID">

                <label class="col-3">비밀번호</label>
                <input type="password" class="col-8 form-control" name="txt_Pass">
            </div>

        </form>
        <div class="align-content-end">
            <button class="btn btn-secondary" onclick="ClaimRecognition_SignSubmit()">확인</button>
        </div>

        <br />
        <hr />

        <form id="ClaimRecognition_ConfirmForm">

            <label class="col-3">부서</label>
            <input type="text" class="col-8 form-control" name="dept_nm" readonly />
            <label class="col-3">성명</label>
            <input type="text" class="col-8 form-control" name="emp_nm" readonly />
            <input type="hidden" name="emp_cd" />
        </form>

    }


    @(Html.DevExtreme().Popup()
            .ID("ClaimRecognition_Popup")
            .Width(500)
            .Height(420)
            .ShowTitle(true)
            .Title("작업자 인증")
            .OnHidden("ClaimRecognition_clearSignInput")
            .Visible(false)
            .DragEnabled(true)
            .CloseOnOutsideClick(false)
        )

    <div id="ClaimRecognitionTop" class="mainTop row">
        <div class="col-8">
            <form id="ClaimRecognitionForm">
                <div class="input-wrapper">
                    <div class="col-5 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">기간구분</span>
                        </div>
                        <label class="p-1"></label>
                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="0" id="select_S0_re" name="select_S" onchange="ClaimRecognitionByRadio()" />
                        </div>
                        <span class="form-control-sm"><label for="select_S0_re">발생일자</label></span>

                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="1" id="select_S1_re" name="select_S" onchange="ClaimRecognitionByRadio()" />
                        </div>
                        <span class="form-control-sm"><label for="select_S1_re">접수일자</label></span>

                        <input type="text" class="form-control datepicker text-center" name="Sdate_S" value="@DateTime.Today.AddYears(-1).ToShortDateString()">
                        <label class="p-1">~</label>
                        <input type="text" class="form-control input-sm datepicker text-center" name="Edate_S" value="@DateTime.Today.ToShortDateString()">
                    </div>

                    <div class="input-group input-group-sm col-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">검색구분</span>
                        </div>
                        <select class="form-control" name="select_gubun_S">
                            <option value="0">품목</option>
                            <option value="1">제조번호</option>
                            <option value="2">거래처</option>
                            <option value="3">보고자</option>
                            <option value="4">불만종류</option>
                        </select>
                        <input class="form-control" type="text" name="searchtext_S" />
                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">진행상태</span>
                        </div>
                        <select class="form-control" name="claim_status_S">
                            @foreach (DataRow row in ((DataTable)ViewBag.claim_status).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>
                </div>
            </form>
        </div>

        <div class="CRUD-btn col-4">
            @{ Html.SetToolbar(0, true, "Search;Delete;Preview;Print"); }
            @*@(Html.DevExtreme().Toolbar()
                    .ID("ClaimRecognition_Toolbar")
                      .Items(items =>
                      {
                          items.Add()
                              .Widget(w => w
                                  .Button()
                                  .Type(ButtonType.Default)
                                  .StylingMode(ButtonStylingMode.Contained)
                                  .ID("ClaimRecognitionSearch")
                                  .Icon("search")
                                  .Text("조회")
                                  .OnClick("ClaimRecognitionSearch")
                              )
                              .Location(ToolbarItemLocation.After);
                      })
                      .Items(items =>
                      {
                          items.Add()
                              .Widget(w => w
                              .Button()
                              .Type(ButtonType.Default)
                              .StylingMode(ButtonStylingMode.Contained)
                              .ID("ClaimRecognitionDelete")
                              .Icon("trash")
                              .Text("삭제")
                              .OnClick("ClaimRecognitionDelete")
                              )
                              .Location(ToolbarItemLocation.After);
                      })
            )*@
        </div>
    </div>

    <div class="row">
        <div class="col-8">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("ClaimRecognition_Grid")
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                    .Height(900)
                    .ShowBorders(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .FocusedRowEnabled(true)
                    .FocusedRowIndex(0)
                    .KeyExpr("claim_no")
                    .Columns(c =>
                    {
                        c.Add().DataField("claim_no").Caption("불만번호");
                        c.Add().DataField("item_nm").Caption("품목");
                        c.Add().DataField("lot_no").Caption("제조번호");
                        c.Add().DataField("cust_nm").Caption("거래처");
                        c.Add().DataField("claim_date").Caption("발생일자");
                        c.Add().DataField("receive_date").Caption("접수일자");
                        c.Add().DataField("claim_status_nm").Caption("진행상태");
                    })
                    .OnFocusedRowChanged("ClaimRecognition_OnFocusedRowChanged")
                )
            </div>
        </div>

        <div class="col-4">
            <div class="box">
                @*<ul class="nav nav-tabs" id="ClaimRecognition_menutab">
                        <li class="nav-item item1">
                            <a class="nav-link active" onclick="menutab('ClaimRecognition_menutab', 'ClaimRecognitionRightDiv', 1); ">처리결과</a>
                        </li>
                        <li class="nav-item item2">
                            <a class="nav-link" onclick="menutab('ClaimRecognition_menutab', 'ClaimRecognitionRightDiv', 2); ">처리승인</a>
                        </li>
                    </ul>*@

                <div id="ClaimRecognitionRightDiv">

                    <!-- 처리결과 -->
                    <div id="ClaimRecognitionRightDiv_1">
                        <form id="ClaimRecognitionForm_Right">
                            <div class="divName">
                                <p>결과승인</p>
                            </div>
                            <div class="input-wrapper">
                                <label class="col-2">불만제목</label>
                                <div class="input-group col-9">
                                    <input type="text" class="form-control" name="claim_title" readonly />
                                </div>
                            </div>

                            <div class="input-wrapper">
                                <label class="col-2">불만내용</label>
                                <div class="input-group col-9">
                                    <textarea class="form-control" cols="100" rows="3" name="claim_content" readonly></textarea>
                                </div>
                            </div>

                            <div class="input-wrapper margin-bottom">
                                <label class="col-2">의뢰자</label>
                                <div class="input-group col-3">
                                    <input type="text" class="form-control" name="receive_emp_nm" readonly />
                                </div>
                                <label class="col-3">보고자</label>
                                <div class="input-group col-3">
                                    <input type="text" class="form-control" name="claim_emp_nm" readonly />
                                </div>
                            </div>

                            <div class="margin-bottom">
                                @(Html.DevExtreme().DataGrid()
                                    .ID("ClaimRecognition_RightGrid")
                                    .Selection(s => s.Mode(SelectionMode.Single))
                                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                                    .Height(130)
                                    .ShowBorders(true)
                                    .ShowColumnLines(true)
                                    .ShowRowLines(true)
                                    .ColumnAutoWidth(true)
                                    .AllowColumnResizing(true)
                                    .KeyExpr("claim_dt_id")
                                    .Columns(c =>
                                    {
                                        c.Add().DataField("claim_nm").Caption("조사목록").AllowEditing(false);

                                        c.Add().DataField("judge_value").Caption("결과값")
                                        .DataType(GridColumnDataType.Boolean)
                                        .CalculateCellValue(@"function(rowData) { return (rowData.judge_value == ""Y"" || rowData.judge_value == true); }");
                                    })
                                )
                            </div>

                            <div class="input-wrapper">
                                <label class="col-2">조사결과</label>
                                <div class="input-group col-9">
                                    <textarea class="form-control" name="result_opinion" readonly></textarea>
                                </div>
                            </div>
                            <div class="input-wrapper">
                                <label class="col-2">대책</label>
                                <div class="input-group col-9">
                                    <textarea class="form-control" name="plan_opinion" readonly></textarea>
                                </div>
                            </div>
                            <div class="input-wrapper">
                                <label class="col-2">조사일자</label>
                                <div class="input-group col-3">
                                    <input type="text" class="form-control" name="judge_date" readonly />
                                </div>
                                <label class="col-3">조사자</label>
                                <div class="input-group col-3">
                                    <input type="text" class="form-control" name="judge_emp_nm" readonly />
                                </div>
                            </div>

                            <div class="input-wrapper">
                                <label class="col-2">조사판정</label>
                                <div class="input-group col-3">
                                    <input type="text" class="form-control" name="judge_type_nm" readonly />
                                </div>
                                <label class="col-3">불만구분</label>
                                <div class="input-group col-3">
                                    <input type="text" class="form-control" name="claim_type_nm" readonly />
                                </div>
                            </div>

                            <div class="input-wrapper">
                                <label class="col-2">조사의견</label>
                                <div class="input-group col-9">
                                    <input type="text" class="form-control" name="judge_opinion" readonly />
                                </div>
                            </div>

                            <div class="input-wrapper">
                                <label class="col-2">관련부서1</label>
                                <div class="input-group col-9">
                                    <input type="text" class="form-control" name="dept_nm1" readonly />
                                </div>
                            </div>

                            <div class="input-wrapper">
                                <label class="col-2">관련부서2</label>
                                <div class="input-group col-9">
                                    <input type="text" class="form-control" name="dept_nm2" readonly />
                                </div>
                            </div>

                            <div class="input-wrapper">
                                <label class="col-2">첨부파일1</label>
                                <div class="input-group col-8">
                                    <input type="text" class="form-control" name="result_file1_nm" readonly />
                                </div>
                                <button type="button" class="btn btn-secondary" id="ClaimRecognition_OpenFile1" onclick="ClaimRecognition_DownloadAttatchedFile('1')">열기</button>
                                @*<button type="button" onclick="ClaimRecognition_DownloadAttatchedFile('1')" id="ClaimRecognition_OpenFile1">열기</button>*@
                            </div>

                            <div class="input-wrapper">
                                <label class="col-2">첨부파일2</label>
                                <div class="input-group col-8">
                                    <input type="text" class="form-control" name="result_file2_nm" readonly />
                                </div>
                                <button type="button" class="btn btn-secondary" id="ClaimRecognition_OpenFile2" onclick="ClaimRecognition_DownloadAttatchedFile('2')">열기</button>
                                @*<button type="button" onclick="ClaimRecognition_DownloadAttatchedFile('2')" id="ClaimRecognition_OpenFile2">열기</button>*@
                            </div>

                            <div class="input-wrapper margin-bottom">
                                <label class="col-2">비고</label>
                                <div class="input-group col-9">
                                    <input type="text" class="form-control" name="remark" />
                                </div>
                            </div>
                        </form>
                    </div>

                    <!-- 처리승인 -->
                    <div id="ClaimRecognitionRightDiv_2">

                        <div class="divName mb-0">
                            <p>전자 서명 정보</p>
                        </div>
                        <div id="ClaimRecognitionSignDiv">
                            <div>
                                @(Html.DevExtreme().DataGrid()
                                .ID("ClaimRecognitionSignGrid")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .HoverStateEnabled(true)
                                .Scrolling( scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                                .FocusedRowEnabled(true)
                                .FocusedRowIndex(0)
                                .Height(150)
                                .OnCellClick("ClaimRecognition_Sign_Check")
                                .KeyExpr("sign_set_dt_id")
                                .Columns(columns =>
                                {
                                    columns.Add().DataField("displayfield").Caption("구분");
                                    columns.Add().DataField("sign_emp_nm").Caption("서명자");
                                    columns.Add().DataField("sign_time").Width(185).Caption("서명일자");
                                    columns.Add().DataField("sign_image").Caption("서명")
                                    .AllowFiltering(false)
                                    .AllowSorting(false)
                                    .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                })
                                .OnFocusedRowChanged("ClaimRecognition_OnFocusedRowChanged_S")
                                .OnContentReady("ClaimRecognition_SetInitFocus")
                            )
                            </div>
                        </div>

                        @*<form id="ClaimRecognitionSignForm">
            <div class="divName">
                <p>전자 서명 정보</p>
            </div>
            <div class="input-wrapper">
                <label class="col-2">서명의미</label>
                <div class="input-group col-6">
                    <input type="text" class="form-control" name="test_sign_set_nm" readonly />
                </div>
                <div class="input-group col-3">
                    <select class="form-control" id="consider_cd" name="consider_cd" onchange="ClaimRecognition_LookupChange()">
                    </select>
                </div>
            </div>

            <div class="input-wrapper">
                <label class="col-2">책임자</label>
                <div class="input-group col-3">
                    <input type="text" class="form-control" name="responsible_emp_nm" readonly />
                </div>
                <div class="input-group col-6">
                    <input type="text" class="form-control" name="responsible_authority" readonly />
                </div>
            </div>

            <div class="input-wrapper">
                <label class="col-2">서명정보</label>
                <div class="input-group col-3">
                    <input type="text" class="form-control" name="sign_emp_nm" readonly />
                </div>
                <div class="input-group col-6">
                    <input type="text" class="form-control" name="sign_emp_authority" readonly />
                </div>
            </div>

            <div class="input-wrapper">
                <label class="col-2"></label>
                <div class="input-group col-9">
                    <input type="text" class="form-control" name="sign_time" id="sign_time" readonly />
                </div>
            </div>

            <div class="input-wrapper">
                <label class="col-2"></label>
                <div class="input-group form-control col-9" style="height:60px;">
                    <img id="sign_image" />
                </div>
            </div>
            <button type="button" class="btn btn-secondary" onclick="ClaimRecognition_SignClick()" style="margin-left:75%;">전자서명</button>
        </form>*@
                    </div>

                </div>

                @*<div class="divName-sm">
                        <p>전자 서명 정보</p>
                    </div>*@
            </div>
        </div>
    </div>
</div>
