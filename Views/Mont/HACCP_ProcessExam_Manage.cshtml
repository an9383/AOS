@*CCP공정검사 관리*@
@using System.Data;
@using HACCP.Libs;
@using HACCP.Libs.Views;

@{
    //*********************************************************
    // ▣ 페이지 공통 정의
    //*********************************************************

    var mainGrid = Html.Raw(Json.Encode(ViewBag.mainGrid.Data));

    Layout = null;
}

@{
    string[] gridKey = { "s1_v_order_no", "s1_process_cd" };
}

<script id="HACCP_ProcessExam_ManageJs">
        // 0.공통변수 설정
        // 0.1. form변수
        // global변수는 절대 사용하지 않는다.

        // 0.2 UtilView 객체 공통설정
        // global변수는 절대 사용하지 않는다.


        // 1. 화면 Load 영역
        $(function () {

            // 1.1. 좌측 Grid 바인딩
            if (@mainGrid) {
                $("#HACCP_ProcessExam_ManageGrid").dxDataGrid("instance").option("dataSource", JSON.parse(@mainGrid));
                $("#HACCP_ProcessExam_ManageGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#HACCP_ProcessExam_ManageGrid").dxDataGrid("instance").option("focusedRowIndex", 0);
            }

            //1.5.3 공통객체
            //datepicker
            setDatePicker("#HACCP_ProcessExam_Manage .datepicker");

            // 화면 resize
            //screenResize();
        });


        // 3. 툴바영역
        //조회
        function HACCP_ProcessExam_ManageSearch() {
            gridReset("HACCP_ProcessExam_ManageGrid");

            $.ajax({
                type: 'POST',
                url: '/Mont/HACCP_ProcessExam_ManageSearch',
                data: {
                    sDate: $("#HACCP_ProcessExam_ManageSearchForm #s_start_date").val(),
                    eDate: $("#HACCP_ProcessExam_ManageSearchForm #s_end_date").val()
                },
                success: function (result) {
                    if (result <= 0) {

                        return;
                    }

                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }


                    $("#HACCP_ProcessExam_ManageGrid").dxDataGrid("instance").option("dataSource", json);
                    $("#HACCP_ProcessExam_ManageGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                    $("#HACCP_ProcessExam_ManageGrid").dxDataGrid("instance").option("focusedRowIndex", 0);

                    //HACCP_ProcessExam_ManageOrderSearch(json[0].s_workroom_cd);
                }
            })

        }


        // 작업실별 제조번호 조회
        function HACCP_ProcessExam_ManageOrderSearch() {
            gridReset("HACCP_ProcessExam_ManageOrderGrid");

            var data;
            if (arguments.length > 0) {

                data = arguments[0];

            } else {
                var grid = $("#HACCP_ProcessExam_ManageGrid").dxDataGrid("instance");

                if (grid.option("focusedRowIndex") >= 0) {

                    data = getGridRowByKey("HACCP_ProcessExam_ManageGrid", grid.option("focusedRowKey")).s_workroom_cd;

                } else {
                    return;
                }
            }


            $.ajax({
                type: 'POST',
                url: '/Mont/HACCP_ProcessExam_ManageOrderSearch',
                data: {
                    sDate: $("#HACCP_ProcessExam_ManageSearchForm #s_start_date").val(),
                    eDate: $("#HACCP_ProcessExam_ManageSearchForm #s_end_date").val(),
                    workroom_cd: data
                },
                success: function (result) {
                    if (result <= 0) {

                        return;
                    }

                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }


                    $("#HACCP_ProcessExam_ManageOrderGrid").dxDataGrid("instance").option("dataSource", json);
                    $("#HACCP_ProcessExam_ManageOrderGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                    $("#HACCP_ProcessExam_ManageOrderGrid").dxDataGrid("instance").option("focusedRowIndex", 0);

                    //HACCP_ProcessExam_ManageProcessSearch(json[0].s1_v_order_no, json[0].s1_order_proc_id);
                }
            })
        }


        // 제조번호 별 공점검사 조회
        function HACCP_ProcessExam_ManageProcessSearch() {
            gridReset("HACCP_ProcessExam_ManageProcessGrid");

            var _order_no;
            var _order_proc_id;

            if (arguments.length > 0) {
                _order_no = arguments[0];
                _order_proc_id = arguments[1];
            } else {
                var grid = $("#HACCP_ProcessExam_ManageOrderGrid").dxDataGrid("instance");

                if (grid.option("focusedRowIndex") >= 0) {
                    var data = getGridRowByKey("HACCP_ProcessExam_ManageOrderGrid", grid.option("focusedRowKey"));

                    _order_no = data.order_no;
                    _order_proc_id = data.order_proc_id;
                } else {
                    return;
                }
            }


            $.ajax({
                type: 'POST',
                url: '/Mont/HACCP_ProcessExam_ManageProcessSearch',
                data: {
                    order_no: _order_no,
                    order_proc_id: _order_proc_id
                },
                success: function (result) {
                    if (result <= 0) {

                        return;
                    }

                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }


                    $("#HACCP_ProcessExam_ManageProcessGrid").dxDataGrid("instance").option("dataSource", json);
                    $("#HACCP_ProcessExam_ManageProcessGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                    $("#HACCP_ProcessExam_ManageProcessGrid").dxDataGrid("instance").option("focusedRowIndex", 0);

                    //toHACCP_ProcessExam_ManageOrderProcessExamSearch(json[0].s_workroom_cd);
                }
            })
        }


        // 공정검사별 작업정보 조회
        function HACCP_ProcessExam_ManageWorkDataSearch() {
            gridReset("HACCP_ProcessExam_ManageWorkDataGrid");

            var _order_no;
            var _order_proc_id;
            var _process_exam_cd;
            var _order_process_exam_qty;

            if (arguments.length > 0) {

                _order_no = arguments[0];
                _order_proc_id = arguments[1];
                _process_exam_cd = arguments[2];
                _order_process_exam_qty = arguments[3];

            } else {
                var grid = $("#HACCP_ProcessExam_ManageProcessGrid").dxDataGrid("instance");

                if (grid.totalCount() > 0) {
                    var data = getGridRowByKey("HACCP_ProcessExam_ManageProcessGrid", grid.option("focusedRowKey"));

                    _order_no = data.order_no;
                    _order_proc_id = data.order_proc_id;
                    _process_exam_cd = data.process_exam_cd;
                    _order_process_exam_qty = data.order_process_exam_qty;

                } else {
                    return;
                }

            }


            var workDataGrid = $("#HACCP_ProcessExam_ManageWorkDataGrid").dxDataGrid("instance");
            if (_order_process_exam_qty > 5) {

                for (var i = 6; i <= _order_process_exam_qty; i++) {
                    workDataGrid.addColumn({caption: "data" + i, dataField: "data" + i});
                }
            } else {
                var columnCount = workDataGrid.columnCount();

                for (var i = 6; i <= columnCount - 3; i++) {
                    workDataGrid.deleteColumn("data" + i);
                }
            }


            $.ajax({
                type: 'POST',
                url: '/Mont/HACCP_ProcessExam_ManageWorkDataSearch',
                data: {
                    order_no: _order_no,
                    order_proc_id: _order_proc_id,
                    process_exam_cd: _process_exam_cd
                },
                success: function (result) {
                    if (result <= 0) {

                        return;
                    }

                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }


                    $("#HACCP_ProcessExam_ManageWorkDataGrid").dxDataGrid("instance").option("dataSource", json);
                    $("#HACCP_ProcessExam_ManageWorkDataGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                    $("#HACCP_ProcessExam_ManageWorkDataGrid").dxDataGrid("instance").option("focusedRowIndex", 0);

                    workDataGrid.repaint();
                    UtilView.screenResize("HACCP_ProcessExam_Manage");
                }
            })
        }


        //#region grid선택 시
        // 상단 좌측 그리드 선택 시
        function HACCP_ProcessExam_ManageGridSelect() {
            var grid = $("#HACCP_ProcessExam_ManageGrid").dxDataGrid("instance");

            if (grid.totalCount() > 0) {
                var data = getGridRowByKey("HACCP_ProcessExam_ManageGrid", grid.option("focusedRowKey"));

                HACCP_ProcessExam_ManageOrderSearch(data.s_workroom_cd);
            }
        }


        function HACCP_ProcessExam_ManageOrderGridSelect() {
            var grid = $("#HACCP_ProcessExam_ManageOrderGrid").dxDataGrid("instance");

            if (grid.totalCount() <= 0) {

            } else {
                var data;

                if ((typeof grid.option("focusedRowKey") === "undefined" || grid === "") && grid.option("dataSource").length != 0) {

                    var tempRowKey = {
                        s1_v_order_no: grid.option("dataSource")[0].s1_v_order_no,
                        s1_process_cd: grid.option("dataSource")[0].s1_process_cd
                    }

                    data = getGridRowByKey('HACCP_ProcessExam_ManageOrderGrid', tempRowKey);

                    $("#HACCP_ProcessExam_ManageOrderGrid").dxDataGrid("instance").option("focusedRowIndex", 0);

                } else {

                    data = getGridRowByKey('HACCP_ProcessExam_ManageOrderGrid', grid.option("focusedRowKey"));
                }

                if (data.hasOwnProperty("items")) return;

                HACCP_ProcessExam_ManageProcessSearch(data.s1_v_order_no, data.s1_order_proc_id);
            }

        }


        function HACCP_ProcessExam_ManageProcessGridSelect() {
            var grid = $("#HACCP_ProcessExam_ManageProcessGrid").dxDataGrid("instance");

            if (grid.totalCount() > 0) {
                var data = getGridRowByKey("HACCP_ProcessExam_ManageProcessGrid", grid.option("focusedRowKey"));

                HACCP_ProcessExam_ManageWorkDataSearch(data.s2_order_no, data.s2_order_proc_id, data.s2_process_exam_cd, data.s2_order_process_exam_qty);
            }
        }

        //#endregion


        function gridReset(gridName) {

            $("#" + gridName).dxDataGrid("instance").option("dataSource", []);
            $("#" + gridName).dxDataGrid("instance").option("focusedRowIndex", 0);
            $("#" + gridName).dxDataGrid("instance").option("focusedRowEnabled", false);
            $("#" + gridName).dxDataGrid("instance").option("focusedRowKey", "");
    }

    //#region CCP 미리보기 및 인쇄
    function HACCP_ProcessExam_ManagePrint() {
        if ($("#HACCP_ProcessExam_ManageOrderGrid").dxDataGrid("instance").option("focusedRowIndex") < 0) {
            alert("미리보기 및 인쇄할 대상이 없습니다.");
            return;
        }

        var btnType;
        btnType = $(event.target).closest('.dx-button').attr('id');

        var grid = $("#HACCP_ProcessExam_ManageOrderGrid").dxDataGrid("instance");
        var data = getGridRowByKey("HACCP_ProcessExam_ManageOrderGrid", grid.option("focusedRowKey"));

        var order_no = data.s1_v_order_no;
        var item_cd = data.s1_item_cd;
        var process_cd = data.ccp_cd;
        var lot_no = data.lot_no;
        var HaccpCode = data.HaccpCode;
        var CCP_gubun = data.ccp_cd;    //설비종류에 따라 공정 분류
        var index_key = CCP_gubun + "-" + order_no;
        var sign_set_cd = "9402";


        //if (data.ccp_cd == null || data.ccp_cd == "") {// || data.ccp_cd.indexOf("90") != "0") {
        //    alert("해당 공정의 리포트가 없습니다.");
        //    return;
        //}

        var table_no = "";
        var report = new ReportHelper();

        if (data.ccp_cd.indexOf("90") == "0") {
            if (CCP_gubun == "906") {
                table_no = "901";
            }
            else {
                table_no = process_cd;
            }

            var CCP_TblName = "CCP_" + table_no + "_H,CCP_" + table_no + "_M,CCP_" + table_no + "_E,CCP_" + table_no + "_D,CCP_" + table_no + "_S";

            report.addParam({
                objFile: { path: "CCP", RptFileName: "rpt_CCP_" + table_no },
                objSp: { SpName: "SP_CCP_Monitoring", gubun: CCP_gubun, reportParam: "HaccpCode:" + HaccpCode + ";order_no:" + order_no + ";process_cd:" + process_cd + ";item_cd:" + item_cd + ";lot_no:" + lot_no + ";index_key:" + index_key + ";sign_set_cd:" + sign_set_cd },
                objEtcInfo: { subParam: "" },
                objTblNm: { tblName: CCP_TblName }
            });
        }
        else if (data.ccp_cd.indexOf("215") == "0") { //타정
            report.addParam({
                objFile: { path: "WorkSheetManage", RptFileName: "ProcessExamReport_Graph360" },
                objSp: { SpName: "SP_CP_DAILY", gubun: "Graph_360", reportParam: "P_WO_NO:" + order_no },
                objEtcInfo: { subParam: "", viewerName: "" },
                objTblNm: { tblName: "ProcessExamReport_Graph2_H,ProcessExamReport_Graph2_M,ProcessExamReport_Graph2_S,ProcessExamReport_Graph2_T" },
                objSub: { subRptName: "" }
            });
        }
        else if (data.ccp_cd.indexOf("221") == "0") { //코팅
                report.addParam({
                    objFile: { path: "WorkSheetManage", RptFileName: "ProcessExamReport_Graph350" },
                    objSp: { SpName: "SP_CP_DAILY", gubun: "Graph_350", reportParam: "P_WO_NO:" + order_no },
                    objEtcInfo: { subParam: "", viewerName: "" },
                    objTblNm: { tblName: "ProcessExamReport_Graph2_H,ProcessExamReport_Graph2_M,ProcessExamReport_Graph2_S,ProcessExamReport_Graph2_T" },
                    objSub: { subRptName: "" }
                });
        }
        else if (data.s1_process_cd.indexOf("385") == "0") { //포장(스틱포장)
            report.addParam({
                objFile: { path: "WorkSheetManage", RptFileName: "ProcessExamReport_Graph2" },
                objSp: { SpName: "SP_CP_DAILY", gubun: "Graph_380", reportParam: "P_WO_NO:" + data.s1_order_no + ";p_po_no:" + order_no },
                objEtcInfo: { subParam: "", viewerName: "" },
                objTblNm: { tblName: "ProcessExamReport_Graph2_H,ProcessExamReport_Graph2_M,ProcessExamReport_Graph2_S,ProcessExamReport_Graph2_T" },
                objSub: { subRptName: "" }
            });
        }
        else if (data.s1_process_cd.indexOf("38") == "0") { //포장공정 (스틱포장 외)
            report.addParam({
                objFile: { path: "WorkSheetManage", RptFileName: "ProcessCheckReport" },
                objSp: { SpName: "SP_CP_DAILY", gubun: "Normal", reportParam: "p_wo_no:" + data.s1_order_no + ";grouping_cd:%" },
                objEtcInfo: { subParam: "", viewerName: "" },
                objTblNm: { tblName: "ProcessCheckReport_H,ProcessCheckReport_M" },
                objSub: { subRptName: "" }
            });
        }
        else {
            //공정 리포트 (그 외 제조공정)
            report.addParam({
                objFile: { path: "WorkSheetManage", RptFileName: "ProcessCheckReport" },
                objSp: { SpName: "SP_CP_DAILY", gubun: "Normal", reportParam: "p_wo_no:" + order_no + ";grouping_cd:%" },
                objEtcInfo: { subParam: "", viewerName: "" },
                objTblNm: { tblName: "ProcessCheckReport_H,ProcessCheckReport_M" },
                objSub: { subRptName: "" }
            });
        }

        if (btnType.indexOf('Preview') > -1) {
            report.preview();
        } else if (btnType.indexOf('Print') > -1) {
            report.print();
        }
    }
    //#endregion
</script>

<!-- $Contents Wrapper-->
<div id="HACCP_ProcessExam_Manage" autoresize="Y">

    <!-- $title  -->
    @*<h4 class="divTitle float-left" style="margin-right:10px;margin-left:10px;">고장신고</h4>*@
    <div id="HACCP_ProcessExam_Manage_Top" class="mainTop row">
        <!-- $검색폼-->
        <div class="col-8">
            <form id="HACCP_ProcessExam_ManageSearchForm">
                <input hidden="hidden" />   <!-- form submit 방지-->
                <div class="input-wrapper" @*style="border:1px blue solid;"*@>
                    <div class="input-group input-group-sm col-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">작업일자</span>
                        </div>
                        <input type="text" class="form-control col-5 datepicker" name="s_start_date" id="s_start_date" value="@DateTime.Today.AddMonths(-1).ToShortDateString()" />
                        <label class="p-1">~</label>
                        <input type="text" class="form-control col-5 datepicker" name="s_end_date" id="s_end_date" value="@DateTime.Today.ToShortDateString()" />
                    </div>

                </div>

            </form>
        </div>
        <!-- $CRUD버튼-->
        <div class="CRUD-btn col-4">
            @* === CRUD 버튼 === *@
            @*@{ Html.RenderAction("SetToolbar", "Uc", new { toolbarIndex = 0, isUnAuthBtnRemove = false, visibleBtns = "*" }); }*@
            @{Html.SetToolbar(0, true, "Search;Preview;Print;");}

        </div>
    </div>

    <!-- $Contents Main-->
    <div class="row">
        <div id="HACCP_ProcessExam_ManageLeftUpDiv" class="col-3 pr-0 pb-1">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("HACCP_ProcessExam_ManageGrid")
                    .ShowBorders(true)
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .Height(400)
                    .ShowColumnLines(true)
                    .HoverStateEnabled(true)
                    .ColumnAutoWidth(true)
                    .SearchPanel(s => s.Visible(true))
                    .KeyExpr("s_workroom_cd")
                    .Columns(c =>
                    {
                        c.Add().DataField("s_workroom_cd").Caption("작업실코드");
                        c.Add().DataField("s_workroom_nm").Caption("작업실명");
                    })
                //.OnSelectionChanged("newsSelectionChanged")
                    .OnFocusedRowChanged("HACCP_ProcessExam_ManageGridSelect")
                )
            </div>
        </div>

        <div id="HACCP_ProcessExam_ManageRightUpDiv" class="col-9 pb-1">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("HACCP_ProcessExam_ManageOrderGrid")
                    .ShowBorders(true)
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .Height(400)
                    .ShowColumnLines(true)
                    .HoverStateEnabled(true)
                    .ColumnAutoWidth(true)
                    .SearchPanel(s => s.Visible(true))
                    .KeyExpr(gridKey)
                    .Columns(c =>
                    {
                        c.Add().DataField("s1_v_order_no").Caption("제조번호").Width("10%");
                        c.Add().DataField("s1_item_cd").Caption("제품코드").Width("10%");
                        c.Add().DataField("s1_item_nm").Caption("제품명").Width("35%");
                        c.Add().DataField("s1_process_nm").Caption("공정명").Width("25%");
                        c.Add().DataField("s1_order_proc_start_time").Caption("공정시작일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd").Width("10%");
                        c.Add().DataField("s1_order_proc_end_time").Caption("공정종료일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd").Width("10%");

                        c.Add().DataField("s1_process_cd").Caption("process 코드").Visible(false);
                    })
                    //.OnSelectionChanged("newsSelectionChanged")
                    .OnFocusedRowChanged("HACCP_ProcessExam_ManageOrderGridSelect")
                )
            </div>
        </div>
    </div>

    <div class="row">
        <div id="HACCP_ProcessExam_ManageLeftDownDiv" class="col-5 pr-0">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("HACCP_ProcessExam_ManageProcessGrid")
                    .ShowBorders(true)
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .Height(900)
                    .ShowColumnLines(true)
                    .HoverStateEnabled(true)
                    .ColumnAutoWidth(true)
                    .KeyExpr("s2_process_exam_cd")
                    .Columns(c =>
                    {
                        c.Add().DataField("s2_common_part_nm").Caption("공정검사명");
                        c.Add().DataField("s2_order_process_exam_standard").Caption("기준값");
                        c.Add().DataField("s2_order_process_exam_min").Caption("최소값");
                        c.Add().DataField("s2_order_process_exam_max").Caption("최대값");
                        c.Add().DataField("s2_order_process_exam_period").Caption("검사주기");
                        c.Add().DataField("s2_order_process_exam_qty").Caption("검사수량");
                        c.Add().DataField("s2_exam_remark").Caption("검사기준");
                    })
                    //.OnSelectionChanged("newsSelectionChanged")
                    .OnFocusedRowChanged("HACCP_ProcessExam_ManageProcessGridSelect")
                )
            </div>
        </div>



        <div id="HACCP_ProcessExam_ManageRightDownDiv" class="col-7">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("HACCP_ProcessExam_ManageWorkDataGrid")
                    .ShowBorders(true)
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .Height(900)
                    .ShowColumnLines(true)
                    .HoverStateEnabled(true)
                    .ColumnAutoWidth(true)
                    .KeyExpr("row_num")
                    .Columns(c =>
                    {
                        c.Add().DataField("s3_order_work_data_seq").Caption("순번");
                        c.Add().DataField("s3_order_work_data_date").Caption("공정시작일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                        c.Add().DataField("s3_confirm_time").Caption("공정종료일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                        c.Add().DataField("data1").Caption("data1");
                        c.Add().DataField("data2").Caption("data2");
                        c.Add().DataField("data3").Caption("data3");
                        c.Add().DataField("data4").Caption("data4");
                        c.Add().DataField("data5").Caption("data5");
                    })
                )
            </div>
        </div>
    </div>

</div>

