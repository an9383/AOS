@*설비 수집 데이터*@
@using System.Data;
@using HACCP.Libs
@using HACCP.Libs.Views;
@using Newtonsoft.Json;

@{
    Layout = null;

    //var EquipmentCollectMenuData = @Html.Raw(Json.Encode(ViewBag.EquipmentCollectMenuData.Data));
    //var EquipmentCollectDataAuth = @Html.Raw(Json.Encode(ViewBag.EquipmentCollectDataAuth.Data));

    //var equipPopupData = @Html.Raw(Json.Encode(ViewBag.equipPopupData.Data));
    //var departmentData = @Html.Raw(Json.Encode(ViewBag.departmentData.Data));

    //var receiptData = @Html.Raw(Json.Encode(ViewBag.receiptData.Data));


    var EquipmentCollectMenuData = Html.Raw(JsonConvert.SerializeObject(ViewBag.EquipmentCollectMenuData.Data));
    var equipPopupData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.equipPopupData.Data));
    var receiptData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.receiptData.Data));
    var selectedDB = Public_Function.selectedDB;

}


<script type="text/javascript" id="EquipmentCollectDataJs">
    var gridName = "";
    var subgridName = "";
    var _receiptData = @receiptData;
    var _ECD_CRUD_data = null;
    var selectedDBName = "@(selectedDB)";
    var _EquipmentCollectDataCRUDGubun = "";
    var _signData = null;
    var EquipmentCollectData_empCd = "";
    var EquipmentCollectData_SignGubun = "";

    $(document).ready(function () {
        EquipmentCollectData_ContentResize();

        if (@Html.Raw(Json.Encode(ViewBag.EquipmentCollectMenuData.Data)) != "") {
            $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance").option("dataSource", JSON.parse(@EquipmentCollectMenuData));
            $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
            $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance").option("focusedRowIndex", 2);
        }


        $("#EquipmentCollectDataMainContents div[id*='DataGrid']").addClass("display-none");
        $("#EquipmentCollectDataSub div[id*='DataSubGrid']").addClass("display-none");
        $("#EquipmentCollectData_Left_SearchForm #use_yn").val("Y");


        // 팝업 관련
        var popupColumns = {
            "equipment": [
                { dataField: "equip_cd", caption: "설비코드" },
                { dataField: "equip_nm", caption: "설비명" },
            ]
        };

        createPopup("EquipSearch", "설비 조회", @equipPopupData, popupColumns.employee, "equip_cd");

        // 데이터픽업 관련
        setDatePicker("#EquipmentCollectData .datepicker");


        // 시간 관련 기본데이터 입력
        var hour = new Date().getHours();
        var min = new Date().getMinutes();
        if (hour < 10) {
            hour = "0" + hour;
        }
        if (min < 10) {
            min = "0" + min;
        }
        var nowTime = hour + ":" + min;

        $("#EquipmentCollectData_Right_SearchForm #s_start_time").val("00:00");
        $("#EquipmentCollectData_Right_SearchForm #s_end_time").val(nowTime);


        if (Object.keys(_receiptData).length != 0) {

            $("#EquipmentCollectData_Right_SearchForm #equip_type2").val(_receiptData.equip_type);

            $("#EquipmentCollectData_Right_SearchForm #s_start_date").val((_receiptData.start_date).substring(0, 10));
            $("#EquipmentCollectData_Right_SearchForm #s_start_time").val((_receiptData.start_date).substring(11, 16));
            $("#EquipmentCollectData_Right_SearchForm #s_end_date").val((_receiptData.end_date).substring(0, 10));
            $("#EquipmentCollectData_Right_SearchForm #s_end_time").val((_receiptData.end_date).substring(11, 16));

            gridName = toGridNameCheck(_receiptData.equip_type);

            $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance").option("focusedRowKey", _receiptData.equip_cd);
            _receiptData = new Object();
        }
    });

    function EquipmentCollectDataValidationCheck() {
        //수정 권한 체크


    }

    function EquipmentCollectDataEditCheck(nowEdit) {

        if (nowEdit) {
            $("#EquipmentCollectData_1Search").dxButton().parent().parent().addClass("display-none");
            $("#EquipmentCollectData_1Edit").dxButton().parent().parent().addClass("display-none");
            $("#EquipmentCollectData_1Excel").dxButton().parent().parent().addClass("display-none");
            $("#EquipmentCollectData_1Undo").dxButton().parent().parent().removeClass("display-none");

            $("#EquipmentCollectDataMenuGrid").dxDataGrid("option", "disabled", true);
            if (subgridName) {
                $("#" + subgridName).dxDataGrid("option", "disabled", true);
            }

            var editing = {
                allowUpdating: true,
                mode: 'row'
            }
            $("#" + gridName).dxDataGrid("option", "editing", editing);
        }
        else {
            $("#EquipmentCollectData_1Search").dxButton().parent().parent().removeClass("display-none");
            $("#EquipmentCollectData_1Edit").dxButton().parent().parent().removeClass("display-none");
            $("#EquipmentCollectData_1Excel").dxButton().parent().parent().removeClass("display-none");
            $("#EquipmentCollectData_1Undo").dxButton().parent().parent().addClass("display-none");

            $("#EquipmentCollectDataMenuGrid").dxDataGrid("option", "disabled", false);
            if (subgridName) {
                $("#" + subgridName).dxDataGrid("option", "disabled", false);
            }

            var editing = {
                allowAdding: false,
                allowUpdating: false,
                allowDeleting: false
            }
            $("#" + gridName).dxDataGrid("option", "editing", editing);
        }
    }

    function EquipmentCollectDataSearch() {

        $.ajax({
            type: 'POST',
            url: '/Mont/EquipMenuSearch',
            data: {
                equip_use_gb: $("#EquipmentCollectData_Left_SearchForm #use_yn").val(),
                plant_cd: $("#EquipmentCollectData_Left_SearchForm #s_plantData").val()
            },

            async: false,
            success: function (result) {
                if (result <= 0) {

                    return;
                }

                var json = JSON.parse(result);

                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }


                gridReset("EquipmentCollectDataMenuGrid");
                EquipmentCollectDataEditCheck(false);

                $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance").option("dataSource", json);
                $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance").option("focusedRowIndex", 2);

                toEquipmentCollectDataMenuSelect(json[0]);
                //EquipmentCollectDataMenuSelect();
            }
        });
    }


    function EquipmentCollectData_1Search() {
        var grid = $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance");
        var equip_cd = "";

        if (grid.totalCount() > 0) {
            var data = getGridRowByKey("EquipmentCollectDataMenuGrid", grid.option("focusedRowKey"));


            if (data.equip_type == "10") { //온습도는 작업실 코드로 검색
                equip_cd = $("#EquipmentCollectData_Right_SearchForm #workroom_cd").val();
            }
            else {
                equip_cd = $("#EquipmentCollectData_Right_SearchForm #equip_cd").val();
            }

            var _data3 = new Object();

            _data3.equip_cd = equip_cd;
            _data3.equip_type = $("#EquipmentCollectData_Right_SearchForm #equip_type2").val();
            _data3.s_date = $("#EquipmentCollectData_Right_SearchForm #s_start_date").val();
            _data3.e_date = $("#EquipmentCollectData_Right_SearchForm #s_end_date").val();
            _data3.s_time = $("#EquipmentCollectData_Right_SearchForm #s_start_time").val();
            _data3.e_time = $("#EquipmentCollectData_Right_SearchForm #s_end_time").val();

            EquipmentCollectDataSelectData(_data3);
        }
    }


    function EquipmentCollectData_1Edit() {
        EquipmentCollectEditData();

    }

    function EquipmentCollectData_1Undo() {
        EquipmentCollectDataEditCheck(false);
        EquipmentCollectData_1Search();
    }

    // to Excel
    async function EquipmentCollectData_1Excel() {

        var grid = $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance");

        if (grid.totalCount() > 0) {
            var data = getGridRowByKey("EquipmentCollectDataMenuGrid", grid.option("focusedRowKey"));

            if (data.hasOwnProperty("key")) {
                //gridName = toGridNameCheck2(data.key);

            } else {
                gridName = toGridNameCheck(data.equip_type2);
                //gridName = toGridNameCheck(data.equip_type2) == "" ? gridName : toGridNameCheck(data.equip_type2);

            }


            var subGrid = $("#" + gridName).dxDataGrid("instance");

            if (subGrid.totalCount() <= 0) {
                alert("대상 목록이 없습니다");

                return;
            }


            await
                $("#" + gridName).dxDataGrid({
                    export: {
                        enabled: true
                    }
                });

            await $("#" + gridName +  " div[title='모든 데이터 추출']").click();

            await
                $("#" + gridName).dxDataGrid({
                    export: {
                        enabled: false
                    }
                });
        }
    }


    function EquipmentCollectData_1Print() {

    }

    function EquipmentCollectDataSelectData(data) {

        $.ajax({
            type: 'POST',
            url: '/Mont/EquipDataCountCheck',
            data: data,
            async: false,
            success: function (result) {
                var check = false;
                if (result > 10000) {
                    if (confirm("총 " + result + "개의 데이터를 조회합니다. 조회하시겠습니까?")) {
                        check = true;
                    }
                } else {
                    check = true;
                }

                if (check) {
                    DevExpress.ui.notify({ message: result + "개의 데이터를 조회하였습니다.", height: "120", position: "top center" }, "info", 600);
                } else {
                    DevExpress.ui.notify({ message: "조회를 취소하였습니다.", height: "120", position: "top center" }, "info", 600);

                    return;
                }

                gridName = toGridNameCheck(data.equip_type);
                //gridName = toGridNameCheck($("#EquipmentCollectData_Right_SearchForm #equip_type2").val()) == "" ? gridName : toGridNameCheck($("#EquipmentCollectData_Right_SearchForm #equip_type2").val());

                $("#EquipmentCollectDataMainContents div[id*='DataGrid']").addClass("display-none");

                if (gridName) {
                    $("#EquipmentCollectDataMainContents div[id*='" + gridName + "']").removeClass("display-none");
                    gridReset(gridName);

                    $("#EquipmentCollectDataSub div[id*='DataSubGrid']").addClass("display-none");
                    if (subgridName) {
                        $("#EquipmentCollectDataSub div[id*='" + subgridName + "']").removeClass("display-none");
                    }
                }


                if (gridName == "DryDataGrid") {
                    if (data.equip_type == "4") {
                        $("#" + gridName).dxDataGrid("instance").columnOption("EDR_TEMP2", "visible", false);
                        $("#" + subgridName).dxDataGrid("instance").columnOption("EDR_TEMP2", "visible", false);
                        $("#" + gridName).dxDataGrid("instance").columnOption("EDR_TEMP", "caption", "온도");
                        $("#" + subgridName).dxDataGrid("instance").columnOption("EDR_TEMP", "caption", "온도");
                    }
                    else if (data.equip_type == "14") {
                        $("#" + gridName).dxDataGrid("instance").columnOption("EDR_TEMP2", "visible", true);
                        $("#" + subgridName).dxDataGrid("instance").columnOption("EDR_TEMP2", "visible", true);
                        $("#" + gridName).dxDataGrid("instance").columnOption("EDR_TEMP", "caption", "입구온도");
                        $("#" + subgridName).dxDataGrid("instance").columnOption("EDR_TEMP", "caption", "입구온도");
                    }
                }

                $.ajax({
                    type: 'POST',
                    url: '/Mont/EquipDataSearch',
                    data: data,
                    async: false,
                    success: function (result) {
                        if (result <= 0) {

                            return;
                        }

                        var json = JSON.parse(result);

                        //if (json.hasOwnProperty('sessionLoss')) {
                        //    alert("세션이 만료되었습니다.");
                        //    sessionStorage.clear();
                        //    location.replace("/Comm/Login");
                        //}

                        $("#" + gridName).dxDataGrid("instance").option("dataSource", json);
                        $("#" + gridName).dxDataGrid("instance").option("focusedRowEnabled", true);
                        $("#" + gridName).dxDataGrid("instance").option("focusedRowIndex", 0);
                        EquipmentCollectDataEditCheck(false);

                        var pData = EquipmentSetParam(json[0], "");


                        SelectATData(pData);
                    }
                });

            }
        });
    }

    // 좌측 그리드 선택 시
    function EquipmentCollectDataMenuSelect() {
        $("#EquipmentCollectData_Right_SearchForm #workroom_cd").val("");
        $("#EquipmentCollectData_Right_SearchForm #workroom_nm").val("");
        $("#EquipmentCollectData_Right_SearchForm #equip_type2").val("");
        $("#EquipmentCollectData_Right_SearchForm #equip_cd").val("");
        $("#EquipmentCollectData_Right_SearchForm #equip_nm").val("");


        var grid = $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance");

        if (grid.totalCount() > 0) {
            var data = getGridRowByKey("EquipmentCollectDataMenuGrid", grid.option("focusedRowKey"));

            if (data.hasOwnProperty("key")) {

                //EquipKeyDataSearch(data);

                return;
            }


            $("#EquipmentCollectData_Right_SearchForm #workroom_cd").val(data.workroom_cd);
            $("#EquipmentCollectData_Right_SearchForm #workroom_nm").val(data.workroom_nm);
            if (data.equip_type2 == null) {
                $("#EquipmentCollectData_Right_SearchForm #equip_type2").val(0);
            } else {
                $("#EquipmentCollectData_Right_SearchForm #equip_type2").val(data.equip_type2);
            }


            if (data.equip_type != "10") { //온습도
                $("#EquipmentCollectData_Right_SearchForm #equip_cd").val(data.equip_cd);
                $("#EquipmentCollectData_Right_SearchForm #equip_nm").val(data.equip_nm);
            }

            gridName = toGridNameCheck(data.equip_type2);
            //gridName = toGridNameCheck(data.equip_type2) == "" ? gridName : toGridNameCheck(data.equip_type2);


            var _data2 = new Object();

            _data2.equip_cd = data.equip_cd;
            _data2.equip_type = data.equip_type2;
            _data2.s_date = $("#EquipmentCollectData_Right_SearchForm #s_start_date").val();
            _data2.e_date = $("#EquipmentCollectData_Right_SearchForm #s_end_date").val();
            _data2.s_time = $("#EquipmentCollectData_Right_SearchForm #s_start_time").val();
            _data2.e_time = $("#EquipmentCollectData_Right_SearchForm #s_end_time").val();


            EquipmentCollectDataSelectData(_data2);

        }
    }


    function EquipKeyDataSearch(data) {

        //console.log("EquipKeyDataSearch1: gridName=" + gridName + ", subgridName=" + subgridName);

        if (gridName) {
            $("#EquipmentCollectDataMainContents div[id*='DataGrid']").addClass("display-none");
            $("#EquipmentCollectDataMainContents div[id*='" + gridName + "']").removeClass("display-none");
            gridReset(gridName);

            $("#EquipmentCollectDataSub div[id*='DataSubGrid']").addClass("display-none");
            if (subgridName) {
                $("#EquipmentCollectDataSub div[id*='" + subgridName + "']").removeClass("display-none");

            }
        }


        var type_cd = "";
        switch (data.key) {
            case "기계":
                type_cd = "1"
                break;
            case "기구":
                type_cd = "2"
                break;
            case "제조설비":
                type_cd = "3"
                break;
            case "시험기기":
                type_cd = "4"
                break;
            case "온습도계":
                type_cd = "5"
                break;
            case "저울":
                type_cd = "6"
                break;
            case "기타설비":
                type_cd = "7"
                break;
            case "작업실":
                type_cd = "10"
                break;
        }

        if (type_cd != "10") {
            $("#EquipmentCollectData_Right_SearchForm #equip_type2").val(type_cd);
        }

        $.ajax({
            type: 'POST',
            url: '/Mont/EquipKeyDataSearch',
            data: {
                equip_type_nm: data.key,
                s_date: $("#EquipmentCollectData_Right_SearchForm #s_start_date").val(),
                e_date: $("#EquipmentCollectData_Right_SearchForm #s_end_date").val(),
                s_time: $("#EquipmentCollectData_Right_SearchForm #s_start_time").val(),
                e_time: $("#EquipmentCollectData_Right_SearchForm #s_end_time").val()
            },
            success: function (result) {
                if (result <= 0) {

                    return;
                }

                var json = JSON.parse(result);

                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                gridName = toGridNameCheck2(data.key);

                //console.log("EquipKeyDataSearch2: gridName=" + gridName + ", subgridName=" + subgridName);

                $("#EquipmentCollectDataMainContents div[id*='DataGrid']").addClass("display-none");
                $("#EquipmentCollectDataMainContents div[id*='" + gridName + "']").removeClass("display-none");

                $("#" + gridName).dxDataGrid("instance").option("dataSource", json);
                $("#" + gridName).dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#" + gridName).dxDataGrid("instance").option("focusedRowIndex", 0);

                $("#EquipmentCollectDataSub div[id*='DataSubGrid']").addClass("display-none");
                if (subgridName) {
                    $("#EquipmentCollectDataSub div[id*='" + subgridName + "']").removeClass("display-none");

                }

            }
        })

    }


        // 좌측 그리드 조회 시
    function toEquipmentCollectDataMenuSelect(data) {

        $("#EquipmentCollectData_Right_SearchForm #workroom_cd").val(data.workroom_cd);
        $("#EquipmentCollectData_Right_SearchForm #workroom_nm").val(data.workroom_nm);
        $("#EquipmentCollectData_Right_SearchForm #equip_type2").val(data.equip_type2);

        if (data.equip_type != "10") { //온습도는 설비코드가 없음. 작업실코드임
            $("#EquipmentCollectData_Right_SearchForm #equip_cd").val(data.equip_cd);
            $("#EquipmentCollectData_Right_SearchForm #equip_nm").val(data.equip_nm);
        }

        var equip_cd = "";


        if (data != null && data != undefined) {

            if (data.equip_type == "10") { //온습도는 작업실 코드로 검색
                equip_cd = data.workroom_cd;
            }
            else {
                equip_cd = data.equip_cd;
            }

            var _data = new Object();

            _data.equip_cd = equip_cd;
            _data.equip_type = data.equip_type2;
            _data.s_date = $("#EquipmentCollectData_Right_SearchForm #s_start_date").val();
            _data.e_date = $("#EquipmentCollectData_Right_SearchForm #s_end_date").val();
            _data.s_time = $("#EquipmentCollectData_Right_SearchForm #s_start_time").val();
            _data.e_time = $("#EquipmentCollectData_Right_SearchForm #s_end_time").val();

            EquipmentCollectDataSelectData(_data);

        }
    }


    // 설비 팝업
    function EquipSearch() {
        $("#EquipmentCollectData #EquipSearchPopup").dxPopup("instance").show();
    }


    // 설비 팝업 로우 더블클릭
    function EquipSearchRowDblClick(selectedItems) {
        $("#EquipmentCollectData_Right_SearchForm #equip_cd").val(selectedItems.data.equip_cd);
        $("#EquipmentCollectData_Right_SearchForm #equip_nm").val(selectedItems.data.equip_nm);

        var popup = $("#EquipmentCollectData #EquipSearchPopup").dxPopup("instance");

        popup.hide();
    }


    // 설비분류별 그리드명 체크
    function gridNameCheck() {
        var _gridName = "";
        var _subgridName = "";
        var grid = $("#EquipmentCollectDataMenuGrid").dxDataGrid("instance");

        if (grid.totalCount() > 0) {
            var data = getGridRowByKey("EquipmentCollectDataMenuGrid", grid.option("focusedRowKey"));

            var equip_type = data.equip_type2;
            // type >> SC041
            // 0 = 기타 , 1 = 금속검출기, 2 = X-ray검사기, 3 = 중량선별기, 4 = 건조기, 5 = 살균기, 6 = 농추기, 7 = 포장기, 8 = 유량기, 9 = 익스프레스머신, 10 = 작업실(환경)
            //14 = 유동층 건조기
            // EXPRESSIVEDataGrid

            //console.log("gridNameCheck: " + equip_type);

            switch (equip_type) {
                case "1":
                    _gridName = "MetalDataGrid";
                    _subgridName = "MetalDataSubGrid";
                    break;
                case "2":
                    _gridName = "XrayDataGrid";
                    _subgridName = "XrayDataSubGrid";
                    break;
                case "3":
                    _gridName = "WeightDataGrid";
                    _subgridName = "WeightDataSubGrid";
                    break;
                case "4":
                    _gridName = "DryDataGrid";
                    _subgridName = "DryDataSubGrid";
                    break;
                case "5":
                    _gridName = "SterilizerDataGrid";
                    _subgridName = "SterilizerDataSubGrid";
                    break;
                case "7":
                    _gridName = "PackDataGrid";
                    _subgridName = "PackDataSubGrid";
                    break;
                case "8":
                    _gridName = "FlowmeterDataGrid";
                    _subgridName = "FlowmeterDataSubGrid";
                    break;
                case "9":
                    _gridName = "ExpressiveDataGrid";
                    _subgridName = "ExpressiveDataSubGrid";
                    break;
                case "10":
                    _gridName = "EnvironmentDataGrid";
                    _subgridName = "EnvironmentDataSubGrid";
                    break;
                case "14":
                    _gridName = "DryDataGrid";
                    _subgridName = "DryDataSubGrid";
                    break;
                default:
                    _gridName = "ETCDataGrid";
                    _subgridName = "ETCDataSubGrid";
                    break;

            }

            subgridName = _subgridName;
            return _gridName;
        }
    }


    // 설비분류별 그리드명 체크
    function toGridNameCheck(equip_type) {
        var _gridName = "";
        var _subgridName = "";

        // type >> SC041
        // 0 = 기타 , 1 = 금속검출기, 2 = X-ray검사기, 3 = 중량선별기, 4 = 건조기, 5 = 살균기, 6 = 농추기, 7 = 포장기, 8 = 유량기, 9 = 익스프레스머신, 10 = 작업실(환경)

        //console.log("toGridNameCheck: " + equip_type);
        switch (equip_type) {
            case "1":
                _gridName = "MetalDataGrid";
                _subgridName = "MetalDataSubGrid";
                break;
            case "2":
                _gridName = "XrayDataGrid";
                _subgridName = "XrayDataSubGrid";
                break;
            case "3":
                _gridName = "WeightDataGrid";
                _subgridName = "WeightDataSubGrid";
                break;
            case "4":
                _gridName = "DryDataGrid";
                _subgridName = "DryDataSubGrid";
                break;
            case "5":
                _gridName = "SterilizerDataGrid";
                _subgridName = "SterilizerDataSubGrid";
                break;
            case "7":
                _gridName = "PackDataGrid";
                _subgridName = "PackDataSubGrid";
                break;
            case "8":
                _gridName = "FlowmeterDataGrid";
                _subgridName = "FlowmeterDataSubGrid";
                break;
            case "9":
                _gridName = "ExpressiveDataGrid";
                _subgridName = "ExpressiveDataSubGrid";
                break;
            case "10":
                _gridName = "EnvironmentDataGrid";
                _subgridName = "EnvironmentDataSubGrid";
                break;
            case "14":
                _gridName = "DryDataGrid";
                _subgridName = "DryDataSubGrid";
                break;
            default:
                _gridName = "ETCDataGrid";
                _subgridName = "ETCDataSubGrid";
                break;

        }

        subgridName = _subgridName;
        return _gridName;
    }


    // 설비분류별 그리드명2 체크
    function toGridNameCheck2(equip_type_nm) {
        var _gridName = "";
        var _subgridName = "";

        // type >> SC041
        // 0 = 기타 , 1 = 금속검출기, 2 = X-ray검사기, 3 = 중량선별기, 4 = 건조기, 5 = 살균기, 6 = 농추기, 7 = 포장기, 8 = 유량기, 9 = 익스프레스머신, 10 = 작업실(환경)

        //console.log("toGridNameCheck2: " + equip_type_nm);

        switch (equip_type_nm) {
            case "금속검출기":
                _gridName = "MetalDataGrid"
                _subgridName = "MetalDataSubGrid";
                break;
            case "X-Ray검사기":
                _gridName = "XrayDataGrid"
                _subgridName = "XrayDataSubGrid";
                break;
            case "중량선별기":
                _gridName = "WeightDataGrid"
                _subgridName = "WeightDataSubGrid";
                break;
            case "전기건조기":
                _gridName = "DryDataGrid"
                _subgridName = "DryDataSubGrid";
                break;
            case "유동층건조기":
                _gridName = "DryDataGrid"
                _subgridName = "DryDataSubGrid";
                break;
            case "살균기":
                _gridName = "SterilizerDataGrid";
                _subgridName = "SterilizerDataSubGrid";
                break;
            case "포장기":
                _gridName = "PackDataGrid"
                _subgridName = "PackDataSubGrid";
                break;
            case "유량계":
                _gridName = "FlowmeterDataGrid";
                _subgridName = "FlowmeterDataSubGrid";
                break;
            case "익스프레스머신":
                _gridName = "ExpressiveDataGrid";
                _subgridName = "ExpressiveDataSubGrid";
                break;
            case "작업실":
                _gridName = "EnvironmentDataGrid";
                _subgridName = "EnvironmentDataSubGrid";
                break;
            default:
                _gridName = "ETCDataGrid";
                _subgridName = "ETCDataSubGrid";
                break;
        }

        subgridName = _subgridName;

        return _gridName;
    }

    function gridReset(_gridName) {

        //DAMUM 제외
        if (selectedDBName != "RTEGMS_DAMUM") {
            if (_gridName == "FlowmeterDataGrid" || _gridName == "ExpressiveDataGrid" || _gridName == "SterilizerDataGrid") {
                //console.log("컨텐츠 없는 그리드 :" + _gridName + ", Sub:" + subgridName);
                return;
            }
        }


        if (_gridName != null && _gridName != undefined) {
            $("#" + _gridName).dxDataGrid("instance").option("dataSource", []);
            $("#" + _gridName).dxDataGrid("instance").option("focusedRowIndex", 0);
            //$("#" + _gridName).dxDataGrid("instance").option("focusedRowEnabled", false);
            //$("#" + _gridName).dxDataGrid("instance").option("focusedRowKey", "");

            EquipmentCollectDataEditCheck(false);
        }

        if (subgridName != null && subgridName != undefined) {
            $("#" + subgridName).dxDataGrid("instance").option("dataSource", []);
            $("#" + subgridName).dxDataGrid("instance").option("focusedRowIndex", 0);

            $('.foo').css({ 'height': 'auto' });
            //$("#" + subgridName).dxDataGrid("instance").option("focusedRowEnabled", false);
            //$("#" + subgridName).dxDataGrid("instance").option("focusedRowKey", "");
        }

        //$("#ECDSubGrid").dxDataGrid("instance").option("dataSource", []);
        //$("#ECDSubGrid").dxDataGrid("instance").option("focusedRowIndex", 0);
        //$("#ECDSubGrid").dxDataGrid("instance").option("focusedRowEnabled", false);

    }


    function EquipmentCollectData_ContentResize() {
        var topPoint1 = document.getElementById("EquipmentCollectData_Left_Top").getBoundingClientRect().bottom;
        var content_max_height_H = window.innerHeight - (topPoint1 + 1) - 20;
        var content_max_height_B = 200;
        var content_max_height = window.innerHeight - (topPoint1 + 1) - 20 - content_max_height_B;

        document.getElementById("EquipmentCollectDataMenuGrid").style.height = content_max_height_H + "px";

        document.getElementById("MetalDataGrid").style.height = content_max_height + "px";
        document.getElementById("XrayDataGrid").style.height = content_max_height + "px";
        document.getElementById("WeightDataGrid").style.height = content_max_height + "px";
        document.getElementById("DryDataGrid").style.height = content_max_height + "px";
        document.getElementById("SterilizerDataGrid").style.height = content_max_height + "px";
        document.getElementById("PackDataGrid").style.height = content_max_height + "px";
        document.getElementById("FlowmeterDataGrid").style.height = content_max_height + "px";
        document.getElementById("ExpressiveDataGrid").style.height = content_max_height + "px";
        document.getElementById("EnvironmentDataGrid").style.height = content_max_height + "px";
        document.getElementById("ETCDataGrid").style.height = content_max_height + "px";


    }

    //데이터 수정기능
    function EquipmentCollectEditData(e) {
        if (!gridName) {
            return;
        }
        EquipmentCollectDataEditCheck(true);

    }

    //변경데이터 가져오기
    function EquipmentCollectDataChangeSelect(e) {

        if (!gridName) {
            return;
        }

        var pData = EquipmentSetParam(e.row.data, "");

        SelectATData(pData);

    }

    //수정된 내용 저장
    function EquipmentCollectEditUpdate(data) {

        if (!gridName) {
            return;
        }

        _ECD_CRUD_data = null;
        _ECD_CRUD_data = data.data;

        //변경사유 팝업
        var remarkPopup = $("#ATChangeRemarkPopup").dxPopup("instance");
        remarkPopup.option("contentTemplate", $("#ATChangeRemarkPopupTemplate"));
        remarkPopup.show();

        $('.foo').css({ 'height': 'auto' });

    }

    //수정된 내용 저장
    function ATChangeRemarkPopupClick() {
        var remark = $("#ATChangeRemarkForm textarea[name=audit_remark]").val();

        var remarkPopup = $("#ATChangeRemarkPopup").dxPopup("instance");

        var pParam = EquipmentSetParam(_ECD_CRUD_data, remark);

        remarkPopup.hide();

        console.log(pParam);

        GridUpdate(pParam);
    }

    ////수정된 내용 저장
    //async function ATChangeRemarkPopupClick() {
    //    var remark = $("#ATChangeRemarkForm textarea[name=audit_remark]").val();

    //    var remarkPopup = $("#ATChangeRemarkPopup").dxPopup("instance");

    //    var pParam = EquipmentSetParam(_ECD_CRUD_data, remark);
    //    var msg = false;

    //    msg = await EquipmentCollectData_SignSubmit(false);
    //    remarkPopup.hide();

    //    if (msg == true) {
    //        GridUpdate(pParam);
    //    }
    //}


    function GridUpdate(data) {

        $.ajax({
            type: 'POST',
            url: '/Mont/EquipDataUpdate',
            data: {
                edata: data//JSON.stringify(data)
            },
            success: function (result) {
                if (result <= 0) {

                    return;
                }

                //alert(result);
                //EquipmentCollectData_1Search();
                var signGridData = SetSignParam(_ECD_CRUD_data, 1, result); //작성자 서명
                EquipmentCollectDataSignPopup(signGridData);

            }
        });
    }

    function SelectATData(data) {

        $("#" + subgridName).dxDataGrid("instance").option("dataSource", []);
        $("#" + subgridName).dxDataGrid("instance").option("focusedRowIndex", 0);
        //$("#" + subgridName).dxDataGrid("instance").option("focusedRowEnabled", false);

        if (gridName == "DryDataGrid") {
            if (data.equip_type == "4") {
                $("#" + gridName).dxDataGrid("instance").columnOption("EDR_TEMP2", "visible", false);
                $("#" + subgridName).dxDataGrid("instance").columnOption("EDR_TEMP2", "visible", false);
                $("#" + gridName).dxDataGrid("instance").columnOption("EDR_TEMP", "caption", "온도");
                $("#" + subgridName).dxDataGrid("instance").columnOption("EDR_TEMP", "caption", "온도");
            }
            else if (data.equip_type == "14") {
                $("#" + gridName).dxDataGrid("instance").columnOption("EDR_TEMP2", "visible", true);
                $("#" + subgridName).dxDataGrid("instance").columnOption("EDR_TEMP2", "visible", true);
                $("#" + gridName).dxDataGrid("instance").columnOption("EDR_TEMP", "caption", "입구온도");
                $("#" + subgridName).dxDataGrid("instance").columnOption("EDR_TEMP", "caption", "입구온도");
            }
        }

        $.ajax({
            type: 'POST',
            url: '/Mont/EquipSelectATData',
            data: {
                edata: data//JSON.stringify(data)
            },
            success: function (result) {
                if (result <= 0) {

                    return;
                }

                var json = JSON.parse(result);

                if (json.length > 0) {
                    $("#" + subgridName).dxDataGrid("instance").option("dataSource", json);
                    //$("#" + subgridName).dxDataGrid("instance").option("focusedRowEnabled", true);
                    $("#" + subgridName).dxDataGrid("instance").option("focusedRowIndex", 0);
                }

            }
        });
    }


    // 인풋 초기화
    function clearATChangeRemark() {
        $('#ATChangeRemarkForm')[0].reset();
        $("#ATChangeRemarkForm textarea[name='audit_remark']").val("변경사유: ");
    }


    //#region 전자서명 기능

    function get_sign_index_header() {
        var header = "";

        switch (gridName) {
            case "MetalDataGrid":
                header = "EMD";
                break;
            case "XrayDataGrid":
                header = "EQX";
                break;
            case "WeightDataGrid":
                header = "EQW";
                break;
            case "DryDataGrid":
                header = "EDR";
                break;
            case "SterilizerDataGrid":
                header = "ETZ";
                break;
            case "PackDataGrid":
                header = "EQP";
                break;
            case "FlowmeterDataGrid":
                header = "EFM";
                break;
            case "ExpressiveDataGrid":
                header = "EEM";
                break;
            case "EnvironmentDataGrid":
                header = "EQT";
                break;
            default:
                header = "OWD"; //order_work_data
                break;
        }

        return header;
    }

    function get_index_key(signData) {
        var index_key = "";

        if (signData == null || signData == undefined || signData == "")
            return;

        if (signData.audit_id == undefined) {

            console.log("audit_id: " + signData.audit_id);

        }

        switch (gridName) {
            case "MetalDataGrid":
                index_key = "EMD-" + signData.EMD_IDX + "-" + signData.audit_id;
                break;
            case "XrayDataGrid":
                index_key = "EQX-" + signData.EQX_IDX + "-" + signData.audit_id;
                break;
            case "WeightDataGrid":
                index_key = "EQW-" + signData.EQW_IDX + "-" + signData.audit_id;
                break;
            case "DryDataGrid":
                index_key = "EDR-" + signData.EDR_IDX + "-" + signData.audit_id;
                break;
            case "SterilizerDataGrid":
                index_key = "ETZ-" + signData.ETZ_IDX + "-" + signData.audit_id;
                break;
            case "PackDataGrid":
                index_key = "EQP-" + signData.EQP_IDX + "-" + signData.audit_id;
                break;
            case "FlowmeterDataGrid":
                index_key = "EFM-" + signData.EFM_IDX + "-" + signData.audit_id;
                break;
            case "ExpressiveDataGrid":
                index_key = "EEM-" + signData.EEM_IDX + "-" + signData.audit_id;
                break;
            case "EnvironmentDataGrid":
                index_key = "EQT-" + signData.EQT_IDX + "-" + signData.audit_id;
                break;
            default:
                index_key = "OWD-" + signData.audittrail_id; //order_work_data
                break;
        }

        return index_key;

    }

    function SetSignParam(signData, seq, audit_id) {

        var data = new (Object);
        if (seq == "1") { //작성자
            data.sign_emp_cd = signData.signer;
            data.sign_time = signData.signer_sign_time;
            data.prev_sign_yn = "";
            if (signData.confirmer != null && signData.confirmer != undefined && signData.confirmer != "") {
                data.next_sign_yn = "Y";
            }
            else {
                data.next_sign_yn = "";
            }
        }
        else if (seq == "2") {//확인자
            data.sign_emp_cd = signData.confirmer;
            data.sign_time = signData.confirmer_sign_time;
            if (signData.signer != null && signData.signer != undefined && signData.signer != "") {
                data.prev_sign_yn = "Y";
            }
            else {
                data.prev_sign_yn = "";
            }
            data.next_sign_yn = "";
        }

        if (signData.audit_id == undefined) {
            signData.audit_id = audit_id;
        }

        data.sign_set_dt_seq = seq;
        data.sign_set_cd = "9402";
        data.index_key = get_index_key(signData);

        //console.log("SetSignParam");
        //console.log(signData);
        //console.log(data);

        return data;
    }

    //그리드에서 클릭
    function EquipmentCollectData_SignClick(e) {

        var signGridData = null;

        if (e.data == undefined) {
            return;
        }


        //작성자 (변경자)
        if (e.column.dataField == "_sign_image") {
            signGridData = SetSignParam(e.data, 1);
        }
        //확인자 (confirmer)
        else if (e.column.dataField == "_confirmer_sign_image") {
            signGridData = SetSignParam(e.data, 2);
        }

        if (signGridData != null) {
            EquipmentCollectDataSignPopup(signGridData);
        }
    }

    //전자서명 팝업
    function EquipmentCollectDataSignPopup(data) {

        _signData = null;
        _signData = data;

        var popup = $("#EquipmentCollectDataPopup").dxPopup("instance");
        popup.option("contentTemplate", $("#EquipmentCollectDataSignPopupTemplate"));

        var sign_emp_nm = data.sign_emp_cd;
        var sign_time = data.sign_time;
        EquipmentCollectData_SignSeq = data.sign_set_dt_seq; //1. 작성자 2. 확인자


        //1.서명 정보가 있을 경우
        if ((sign_emp_nm != "" && sign_emp_nm != null) || (sign_time != "" && sign_time != null)) {
            //다음단계 서명 확인
            if (data.next_sign_yn == "Y") {
                alert("다음 단계의 서명이 되어있어 취소할 수 없습니다.");
                return;
            }

            var ok = confirm("전자서명을 취소하시겠습니까?");

            if (ok) {
                EquipmentCollectData_SignGubun = "cancel";
                //서명 팝업 창 띄우기
                popup.show();
            }
        }
        //2.서명 정보가 없을 경우
        else {
            if (data.sign_set_dt_seq > 1) {
                //이전단계 서명 확인
                if (data.prev_sign_yn != "Y") {
                    alert("이전단계 서명이 완료되지 않았습니다.");
                    return;
                }
            }
            EquipmentCollectData_SignGubun = "update";
            //서명 팝업 창 띄우기
            popup.show();
        }
    }

    //전자서명 폼 -> ID, PW 입력 확인
    function EquipmentCollectData_SignSubmit() {
        var data = new FormData();

        //$('#EquipmentCollectData_SignForm_AT')[0].reset();
        var id_text = $("#EquipmentCollectData_Signform input[name='txt_ID']").val();
        var pw_text = $("#EquipmentCollectData_Signform input[name='txt_Pass']").val();
        data.append("txt_ID", id_text);
        data.append("txt_Pass", pw_text);


        //유효 ID 여부 확인
        var checkUser = EquipmentCollectData_IDValidation(data);
        if (checkUser) {

            //console.log("EquipmentCollectData_SignGubun: " + EquipmentCollectData_SignGubun);

            //취소
            if (EquipmentCollectData_SignGubun == "cancel") {
                if (EquipmentCollectDataAuthorityCheck(id_text)) {
                    if (EquipmentCollectData_SignCancel()) {
                        alert("전자서명이 취소되었습니다.");
                        EquipmentCollectDataMenuSelect();
                    } else {
                        return false;
                    }
                } else {
                    alert("권한이 없는 사용자거나 잘못된 ID,PW 입니다.");
                }
            }

            //등록
            if (EquipmentCollectData_SignGubun == "update") {
                var representative_yn = "N";

                if (EquipmentCollectDataAuthorityCheck(id_text)) {
                    representative_yn = "Y";
                } else {
                    alert("권한이 없는 사용자이거나 잘못된 ID,PW 입니다.");
                    return false;
                }

                _signData.sign_emp_cd = id_text;
                if (EquipmentCollectData_SignSave(representative_yn)) {
                    alert("서명을 저장하였습니다.");
                    EquipmentCollectDataMenuSelect();
                } else {
                    alert("전자서명 도중 오류가 발생했습니다.");
                    return false;
                }

            }
        }
        setTimeout(function () {
            var popup = $("#EquipmentCollectDataPopup").dxPopup("instance");
            popup.hide();
            $("#EquipmentCollectData_Confirmform input[name='dept_nm']").val("");
            $("#EquipmentCollectData_Confirmform input[name='emp_nm']").val("");
        }, 1000);

        return true;
    }

    //유효 ID Validation
    function EquipmentCollectData_IDValidation() {
        var check = false;

        //로그인 user 정보
        var data = new FormData($("#EquipmentCollectData_Signform")[0]);
        data.set("gubun", "S");

        $.ajax({
            type: 'POST',
            async: false,
            url: '/Comm/IDValidation',
            data: data,
            contentType: false,
            processData: false,
            success: function (result) {

                if (result.length <= 0) {
                    alert("잘못된 ID,PW 입니다.");
                } else {
                    var jsonData = JSON.parse(result);

                    EquipmentCollectData_empCd = jsonData[0].emp_cd;
                    //EquipmentCollectData_empNm = jsonData[0].emp_nm;

                    //if (EquipmentCollectData_LoginUserCd != EquipmentCollectData_empCd) {
                    //    alert("로그인 사용자와 서명자가 일치하지 않습니다!");
                    //}

                    //if (EquipmentCollectData_LoginUserCd == EquipmentCollectData_empCd) {
                    //    check = true;
                    //}
                    check = true;
                    $("#EquipmentCollectData_Confirmform input[name='dept_nm']").val(jsonData[0].dept_nm);
                    $("#EquipmentCollectData_Confirmform input[name='emp_nm']").val(jsonData[0].emp_nm);
                }
            }
        });
        return check;
    }

    //서명자와 권한자 체크
    function EquipmentCollectDataAuthorityCheck(emp_cd) {
        var check = false;

        $.ajax({
            type: 'GET',
            url: '/Comm/AuthorityCheck',
            data: {
                emp_cd: emp_cd,
                sign_set_cd: _signData.sign_set_cd,
                sign_set_seq: _signData.sign_set_dt_seq
            },
            async: false,
            success: function (result) {
                if (result.length > 0) {
                    check = true;
                }
            }
        });
        return check;

    }

    //전자서명 저장
    function EquipmentCollectData_SignSave(representative_yn) {

        _signData.representative_yn = representative_yn;


        //console.log("EquipmentCollectData_SignSave");
       // console.log(_signData);

        var check = false;

        $.ajax({
            type: 'POST',
            url: '/Mont/CCP_format_SignSave',
            //data: _signData,
            data: {
                sign_emp_cd: _signData.sign_emp_cd,            //서명자코드
                sign_type: "2",                                 //2.패스워드방식
                representative_yn: _signData.representative_yn,           //대리자 유무
                index_key: _signData.index_key,          //문서별 서명코드
                sign_set_cd: _signData.sign_set_cd,                            //페이지권한코드
                sign_set_dt_seq: _signData.sign_set_dt_seq            //작성자:1 , 검토자:2, 승인자:3
            },
            async: false,
            success: function (result) {
                if (result != "") {
                    if (result == "Y") {
                        check = true;
                    }
                }
            }
        });
        return check;
    }

    //전자서명 취소
    function EquipmentCollectData_SignCancel() {
        //var index_key = get_index_key();

        var check = false;

        $.ajax({
            type: 'POST',
            async: false,
            url: '/Mont/CCP_format_SignCancel',
            //data: _signData,
            data: {
                index_key: _signData.index_key,
                sign_set_dt_seq: _signData.sign_set_dt_seq,
                sign_set_cd: _signData.sign_set_cd
            },
            success: function (result) {
                if (result != "") {

                    if (result == "Y") {
                        check = true;
                    }

                }
            }
        });
        return check;
    }

    //전자 서명 입력 초기화
    function EquipmentCollectData_clearSignInput() {
        $("#EquipmentCollectData_Signform")[0].reset();
        $("#EquipmentCollectData_Confirmform input[name='dept_nm']").val("");
        $("#EquipmentCollectData_Confirmform input[name='emp_nm']").val("");
    }
    //#endregion

    function EQX_FILE_CellPrepared(cellEllement, cellInfo) {
        var data = cellInfo.row.data;

        if (data.EQX_FILE_IDX > 0) {
            $("<div>").html("<div style='float:left; line-height: 2;'>" + (cellInfo.value ? cellInfo.value : "") + "</div><div style='float:right;' class='icon-plus'></div>")
                .appendTo(cellEllement);


            $(".icon-plus").dxButton({
                icon: "fa fa-file-image-o",
                onClick: function (e) {
                    EQX_FILE_open(data);

                }
            });
            //var button = null;
            //button = $("<button>").dxButton({
            //    icon: "fa fa-file-image-o",
            //    stylingMode: "outline"
            //});
            //button.addClass("boxtype");

            //button.on("click", function () {
            //    //console.log("My command was clicked");
            //    EQX_FILE_open(data);
            //});

            ////return icon;
            //return button;
        }

    }

    function EquipmentSetParam(data, remark) {

        if (data == null || data == undefined) {
            //console.log("param data 없음.");
            return;
        }

        var pData = null;
        var equip_cd = null;
        var equip_type2 = $("#EquipmentCollectData_Right_SearchForm #equip_type2").val();

        if (equip_type2 == "10") { //온습도는 작업실 코드로 검색
            equip_cd = $("#EquipmentCollectData_Right_SearchForm #workroom_cd").val();
        }
        else {
            equip_cd = $("#EquipmentCollectData_Right_SearchForm #equip_cd").val();
        }

        switch (gridName) {
            case "MetalDataGrid": //금속검출기

                pData = {
                    gubun: "U",
                    equip_cd: equip_cd,
                    equip_type: equip_type2,
                    IDX: data.EMD_IDX,
                    CODE: data.EMD_CODE,
                    O_DATE: data.O_DATE,
                    CNT_OK_APD: data.EMD_CNT_OK_APD,
                    CNT_NG_APD: data.EMD_CNT_NG_APD,
                    SENSITIVITY: data.EMD_SENSITIVITY,
                    PROPERTY: data.EMD_PROPERTY,
                    RESULT: data.EMD_RESULT,
                    CONFIRMED: data.EMD_CONFIRMED,
                    WORK_GU: data.EMD_WORK_GU,
                    WORK_RST: data.EMD_WORK_RST,
                    WORK_ORDER_NO: data.EMD_WORK_ORDER_NO,
                    audit_remark: remark
                };
                break;
            case "XrayDataGrid": //X-Ray검사기

                pData = {
                    gubun: "U",
                    equip_cd: equip_cd,
                    equip_type: equip_type2,
                    IDX: data.EQX_IDX,
                    CODE: data.EQX_CODE,
                    O_DATE: data.O_DATE,
                    CNT_OK_APD: data.EQX_CNT_OK_APD,
                    CNT_NG_APD: data.EQX_CNT_NG_APD,
                    FILE_IDX: data.EQX_FILE_IDX,
                    CONFIRMED: data.EQX_CONFIRMED,
                    WORK_GU: data.EQX_WORK_GU,
                    WORK_RST: data.EQX_WORK_RST,
                    WORK_ORDER_NO: data.EQX_WORK_ORDER_NO,
                    audit_remark: remark
                };
                break;
            case "WeightDataGrid": //중량선별기

                pData = {
                    gubun: "U",
                    equip_cd: equip_cd,
                    equip_type: equip_type2,
                    IDX: data.EQW_IDX,
                    CODE: data.EQW_CODE,
                    O_DATE: data.O_DATE,

                    CNT_OK: data.EQW_CNT_OK,
                    CNT_NG: data.EQW_CNT_NG,
                    CNT_OK_APD: data.EQW_CNT_OK_APD,
                    CNT_NG_APD: data.EQW_CNT_NG_APD,
                    STD_W_H: data.EQW_STD_W_H,
                    STD_W_N: data.EQW_STD_W_N,
                    STD_W_L: data.EQW_STD_W_L,
                    W1: data.EQW_W1,
                    W2: data.EQW_W2,
                    W3: data.EQW_W3,
                    W4: data.EQW_W4,
                    W5: data.EQW_W5,
                    W6: data.EQW_W6,
                    W7: data.EQW_W7,
                    W8: data.EQW_W8,
                    W9: data.EQW_W9,
                    W10: data.EQW_W10,
                    WORK_ORDER_NO: data.EQW_WORK_ORDER_NO,
                    audit_remark: remark
                };
                break;
            case "DryDataGrid": //건조기

                pData = {
                    gubun: "U",
                    equip_cd: equip_cd,
                    equip_type: equip_type2,
                    IDX: data.EDR_IDX,
                    CODE: data.EDR_CODE,
                    O_DATE: data.O_DATE,
                    TEMP: data.EDR_TEMP,
                    TEMP2: data.EDR_TEMP2,
                    CONFIRMED: data.EDR_CONFIRMED,
                    DATA_TYPE: data.EDR_DATA_TYPE,
                    WORK_GU: data.EDR_WORK_GU,
                    WORK_RST: data.EDR_WORK_RST,
                    WORK_ORDER_NO: data.EDR_WORK_ORDER_NO
                };
                break;
            case "SterilizerDataGrid": //살균기

                pData = {
                    gubun: "U",
                    equip_cd: equip_cd,
                    equip_type: equip_type2,
                    IDX: data.ETZ_IDX,
                    CODE: data.ETZ_CODE,
                    O_DATE: data.O_DATE,
                    TEMP_HOT: data.ETZ_TEMP_HOT,
                    LITER: data.ETZ_LITER,
                    LITER_APD: data.ETZ_LITER_APD,
                    LITER_SPEED: data.ETZ_LITER_SPEED,
                    CONFIRMED: data.ETZ_CONFIRMED,
                    DATA_TYPE: data.ETZ_DATA_TYPE,
                    WORK_GU: data.ETZ_WORK_GU,
                    WORK_RST: data.ETZ_WORK_RST,
                    WORK_ORDER_NO: data.ETZ_WORK_ORDER_NO,
                    audit_remark: remark
                };
                break;
            case "PackDataGrid": //포장기

                pData = {
                    gubun: "U",
                    equip_cd: equip_cd,
                    equip_type: equip_type2,
                    IDX: data.EQP_IDX,
                    CODE: data.EQP_CODE,
                    O_DATE: data.O_DATE,

                    CNT_OK: data.EQP_CNT_OK,
                    CNT_NG: data.EQP_CNT_NG,
                    CNT_OK_APD: data.EQP_CNT_OK_APD,
                    CNT_NG_APD: data.EQP_CNT_NG_APD,
                    SPEED: data.EQP_SPEED,
                    WORK_ORDER_NO: data.EQP_WORK_ORDER_NO,
                    audit_remark: remark
                };
                break;
            case "FlowmeterDataGrid": //유량계 //EFM

                pData = {
                    gubun: "U",
                    equip_cd: equip_cd,
                    equip_type: equip_type2,
                    CODE: data.EFM_CODE,
                    IDX: data.EFM_IDX,

                    LITER: data.EFM_LITER,
                    LITER_APD: data.EFM_LITER_APD,
                    CONFIRMED: data.EEM_CONFIRMED,
                    O_DATE: data.O_DATE,
                    audit_remark: remark
                };
                break;
            case "ExpressiveDataGrid": //익스프레스머신 //EEM

                pData = {
                    gubun: "U",
                    equip_cd: equip_cd,
                    equip_type: equip_type2,
                    CODE: data.EEM_CODE,
                    IDX: data.EEM_IDX,

                    WEIGHT: data.EEM_WEIGHT,
                    CONFIRMED: data.EEM_CONFIRMED,
                    O_DATE: data.O_DATE,
                    audit_remark: remark
                };
                break;
            case "EnvironmentDataGrid": //작업실

                pData = {
                    gubun: "U",
                    workroom_cd: equip_cd, //온습도는 작업실 코드로 검색 //근데 필요없을것도...EQT_CODE=작업실코드임
                    equip_type: equip_type2,
                    IDX: data.EQT_IDX,
                    CODE: data.EQT_CODE,
                    O_DATE: data.O_DATE,

                    TEMPERATURE: data.EQT_TEMPERATURE,
                    HUMIDITY: data.EQT_HUMIDITY,
                    PRESSURE: data.EQT_PRESSURE,
                    audit_remark: remark
                };
                break;
            default: //ETCDataGrid - order_work_data

                pData = {
                    gubun: "U",
                    equip_cd: equip_cd,
                    equip_type: equip_type2,
                    CODE: data.order_no,

                    CONFIRM_TIME: data.confirm_time,
                    DATA1: data.data1,
                    DATA2: data.data2,
                    DATA3: data.data3,
                    DATA4: data.data4,
                    DATA5: data.data5,
                    audit_remark: remark,
                    OWD_audittrail_id: data.audittrail_id
                };
                break;
        }
        return pData;
    }

    function EQX_FILE_open(data) {

        var file_id = data.EQX_FILE_IDX;

        if (file_id == "" || file_id == null || file_id <= 0) {
            alert("파일이 없습니다.")

            return;
        }
        //console.log("file_id: " + file_id);
        document.location.assign('/Mont/EQUIP_FileOpen?file_id=' + file_id);
    }

</script>


<div id="EquipmentCollectData">

    @* === 변경 사유 입력 팝업 === *@
    @(Html.DevExtreme().Popup()
        .ID("ATChangeRemarkPopup")
        .Width(500)
        .Height(400)
        .ShowTitle(true)
        .Title("데이터 변경사유 입력 및 작성자 서명")
        .OnHidden("clearATChangeRemark")
        .Visible(false)
        .DragEnabled(true)
        .CloseOnOutsideClick(false)
    )

    @using (Html.DevExtreme().NamedTemplate("ATChangeRemarkPopupTemplate"))
    {
        <h6 align="center">데이터를 변경하는 사유를 입력 해 주세요.</h6>

        <br />
        <form id="ATChangeRemarkForm">

            <div class="input-wrapper">
                <textarea class="form-control foo" name="audit_remark" rows="7"> 변경사유: </textarea>
            </div>
        </form>

        <br />
        <div class="align-content-end col-12" align="center">
            <button class="btn btn-secondary" type="button" onclick="ATChangeRemarkPopupClick()">확인</button>
        </div>
    }

    @using (Html.DevExtreme().NamedTemplate("ATChangeRemarkPopupTemplate_TEST"))
    {
        <h6 align="center">데이터를 변경하는 사유를 입력 해 주세요.</h6>

        <br />
        <form id="ATChangeRemarkForm">

            <div class="input-wrapper">
                <textarea class="form-control foo" name="audit_remark" rows="7"> 변경사유: </textarea>
            </div>
        </form>

        <hr />
        <h6 align="center">전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

        <br />
        <form id="EquipmentCollectData_SignForm_AT">

            <div class="input-wrapper">
                <label class="col-3">아이디</label>
                <input type="text" class="col-8 form-control" name="txt_ID">

                <label class="col-3">비밀번호</label>
                <input type="password" class="col-8 form-control" name="txt_Pass" autocomplete="off">
            </div>

        </form>
        <br />
        <div class="align-content-end col-12" align="center">
            <button class="btn btn-secondary" type="button" onclick="ATChangeRemarkPopupClick()">확인</button>
        </div>

        <br />
        <hr />

        <form id="EquipmentCollectData_ConfirmForm">

            <label class="col-3">부서</label>
            <input type="text" class="col-8 form-control" name="dept_nm" readonly />
            <label class="col-3">성명</label>
            <input type="text" class="col-8 form-control" name="emp_nm" readonly />
            <input type="hidden" name="emp_cd" />
        </form>
    }

    <!--전자서명 팝업-->
    @(Html.DevExtreme().Popup()
            .ID("EquipmentCollectDataPopup")
            .Width(500)
            .Height(420)
            .ShowTitle(true)
            .Title("작업자 인증")
            .OnHidden("EquipmentCollectData_clearSignInput")
            .Visible(false)
            .DragEnabled(true)
            .CloseOnOutsideClick(false)
        )

    @using (Html.DevExtreme().NamedTemplate("EquipmentCollectDataSignPopupTemplate"))
    {
        <h6>전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

        <form id="EquipmentCollectData_Signform">

            <div class="input-wrapper">
                <label class="col-3">아이디</label>
                <input type="text" class="col-8 form-control" name="txt_ID">

                <label class="col-3">비밀번호</label>
                <input type="password" class="col-8 form-control" name="txt_Pass" autocomplete="off">
            </div>

        </form>
        <div class="align-content-end">
            <button class="btn btn-secondary" onclick="EquipmentCollectData_SignSubmit()">확인</button>
        </div>

        <br />
        <hr />

        <form id="EquipmentCollectData_Confirmform">

            <label class="col-3">부서</label>
            <input type="text" class="col-8 form-control" name="dept_nm" readonly="readonly" />
            <label class="col-3">성명</label>
            <input type="text" class="col-8 form-control" name="emp_nm" readonly="readonly" />

        </form>

    }

    <div id="EquipSearchPopup"></div>

    <div class="row">
        <div class="left_div col-2 pr-1">
            <div id="EquipmentCollectData_Left_Top" class="mainTop row">
                <div class="col-8">
                    <form id="EquipmentCollectData_Left_SearchForm">
                        <div class="input-wrapper">
                            <div class="input-group input-group-sm">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">사용여부</span>
                                </div>
                                <select class="form-control" name="use_yn" id="use_yn">
                                    <option value="%">전체</option>
                                    <option value="Y">사용중</option>
                                    <option value="N">사용안함</option>
                                </select>
                            </div>
                        </div>

                        <div class="input-wrapper">
                            <div class="input-group input-group-sm">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">작업현장</span>
                                </div>
                                <select class="form-control" name="s_plantData" id="s_plantData">
                                    @foreach (DataRow row in ((DataTable)ViewBag.plantData_s).Rows)
                                    {
                                        <option value="@row["keyfield"]">@row["displayfield"]</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </form>
                </div>

                <div class="CRUD-btn col-4">

                    @* === CRUD 버튼 === *@
                    @*@{ Html.RenderAction("SetToolbar", "Uc", new { toolbarIndex = 0, isUnAuthBtnRemove = false, visibleBtns = "*" }); }*@
                    @{Html.SetToolbar(0, true, "Search");}

                    @*=== CRUD 버튼 ===
                        @(Html.DevExtreme().Toolbar()
                            .ID("EquipmentCollectData_LeftToolbar")
                            .Items(items =>
                            {
                                items.Add()
                                    .Widget(w => w
                                        .Button()
                                        .Type(ButtonType.Default)
                                        .StylingMode(ButtonStylingMode.Contained)
                                        .ID("EquipmentCollectData_MenuSearch")
                                        .Icon("search")
                                        .Text("조회")
                                        .OnClick("EquipmentCollectDataMenuSearch")
                                    )
                                .Location(ToolbarItemLocation.After);
                            })
                        )*@
                </div>
            </div>

            <div id="EquipmentCollectDataMenu">
                <div class="box" style="margin-bottom: 0px;">

                    @(Html.DevExtreme().DataGrid()
                            .ID("EquipmentCollectDataMenuGrid")
                            .KeyExpr("equip_cd")
                            .ShowBorders(true)
                            .Selection(s => s.Mode(SelectionMode.Single))
                            .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                            .Height(900)
                            .FocusedRowEnabled(true)
                            .ShowColumnLines(true)
                            .HoverStateEnabled(true)
                            .ColumnAutoWidth(true)
                            .SearchPanel(s => s.Visible(true))
                            .AllowColumnResizing(true)
                            .Columns(c =>
                            {
                                c.Add().DataField("plant_nm").Caption("작업현장").Width("35%").GroupIndex(0);
                                c.Add().DataField("equip_type_nm").Caption("분류").GroupIndex(1);
                                c.Add().DataField("equip_nm").Caption("설비명");

                                c.Add().DataField("plant_cd").Visible(false);
                                c.Add().DataField("workroom_cd").Visible(false);
                                c.Add().DataField("workroom_nm").Visible(false);
                                c.Add().DataField("equip_type").Visible(false);
                                c.Add().DataField("equip_cd").Visible(false);
                            })
                            .OnFocusedRowChanged("EquipmentCollectDataMenuSelect")
                        //.OnRowClick("EquipmentCollectDataMenuSelect")
                        )
                </div>
            </div>
        </div>


        <div class="right_div col-10 pl-0">
            <div id="EquipmentCollectData_Right_Top" class="mainTop row">
                <div class="col-8">
                    <form id="EquipmentCollectData_Right_SearchForm">
                        <div class="input-wrapper">
                            <div class="input-group input-group-sm col-9">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">발생일자</span>
                                </div>
                                <input type="text" class="form-control col-2 datepicker" name="s_start_date" id="s_start_date" value="@DateTime.Today.ToShortDateString()" />
                                <input type="time" class="form-control col-2" name="s_start_time" id="s_start_time">
                                <label class="p-1">~</label>
                                <input type="text" class="form-control col-2 datepicker" name="s_end_date" id="s_end_date" value="@DateTime.Today.ToShortDateString()" />
                                <input type="time" class="form-control col-2" name="s_end_time" id="s_end_time">
                            </div>

                        </div>
                        <div class="input-wrapper">
                            <div class="input-group input-group-sm col-4">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">작업실</span>
                                </div>
                                <input type="text" class="form-control col-6" name="workroom_cd" id="workroom_cd" readonly>
                                <input type="text" class="form-control col-6" name="workroom_nm" id="workroom_nm" readonly>
                            </div>

                            <div class="input-group input-group-sm col-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">설비종류</span>
                                </div>
                                <select class="form-control col-12" name="equip_type2" id="equip_type2">
                                    @foreach (DataRow row in ((DataTable)Public_Function.GetMaster("공통코드", "N", "SC041")).Rows)
                                    {
                                        <option value="@row["keyfield"]">@row["displayfield"]</option>
                                    }
                                </select>
                            </div>

                            <div class="input-group input-group-sm col-4">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">설비</span>
                                </div>
                                <input type="text" class="form-control" name="equip_cd" id="equip_cd">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" id="equip_search_btn" onclick="EquipSearch();"><i class="fa fa-search"></i></button>
                                </div>
                                <input type="text" class="form-control" name="equip_nm" id="equip_nm" readonly />
                            </div>
                        </div>
                    </form>
                </div>

                <div class="CRUD-btn col-4">
                    @*=== CRUD 버튼 ===*@
                    @{Html.SetToolbar(1, true, "Search;Edit;Undo;Excel;");}
                </div>
            </div>


            <div id="EquipmentCollectDataMain">
                <div id="EquipmentCollectDataMainContents" class="box" style="margin-bottom: 0px;">

                    @if (Public_Function.project.Equals("DAMUM"))
                    {

                        @(Html.DevExtreme().DataGrid()
                                .ID("WeightDataGrid")
                                .KeyExpr("EQW_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .HoverStateEnabled(true)
                                .AllowColumnResizing(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .ShowColumnLines(true)
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EQW_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EQW_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    //c.Add().DataField("EQW_STATUS").Caption("설비가동상태");
                                    //.CalculateCellValue(@"function(rowData)
                                    //{
                                    //    return (rowData.EMD_STATUS == ""0""? ""정지"" : rowData.EMD_STATUS == ""1""? ""가동"" : rowData.EMD_STATUS == ""2""? ""비상정지"" : """");
                                    //}");
                                    c.Add().DataField("EQW_CNT_H").Caption("누적 상한수량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_CNT_N").Caption("누적 정량수량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_CNT_L").Caption("누적 하한수량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("EQW_STD_H").Caption("상한설정")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_STD_N").Caption("기준설정")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_STD_L").Caption("하한설정")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_GRADE").Caption("등급");
                                    c.Add().DataField("EQW_WEIGHT").Caption("측정무게값")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");
                                })
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("SterilizerDataGrid")
                                .KeyExpr("ETZ_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .HoverStateEnabled(true)
                                .AllowColumnResizing(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .ShowColumnLines(true)
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("ETZ_CODE").Caption("설비코드");
                                    //c.Add().DataField("ETZ_STATUS").Caption("설비가동상태");
                                    //.CalculateCellValue(@"function(rowData)
                                    //{
                                    //    return (rowData.EMD_STATUS == ""0""? ""정지"" : rowData.EMD_STATUS == ""1""? ""가동"" : rowData.EMD_STATUS == ""2""? ""비상정지"" : """");
                                    //}");

                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("ETZ_TEMP_HOT").Caption("살균가열온도")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_TEMP_COLD").Caption("충진냉각온도")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_TEMP_DIVISION").Caption("디비젼배출")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("ETZ_STD_TEMP_HOT").Caption("표준가열온도")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_STD_TEMP_COLD").Caption("표준냉각온도")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_STD_TEMP_DIVISION").Caption("표준디비젼")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("ETZ_WORK_ORDER_NO").Caption("제조지시");

                                    c.Add().DataField("ETZ_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");


                                    c.Add().DataField("ETZ_ALARM").Visible(false);
                                    c.Add().DataField("ETZ_ALARM_DC").Visible(false);

                                })
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("PackDataGrid")
                                .KeyExpr("EQP_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .WordWrapEnabled(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EQP_CODE").Caption("설비코드");
                                    //c.Add().DataField("EQP_STATUS").Caption("설비가동상태").Alignment(HorizontalAlignment.Center);
                                    //.CalculateCellValue(@"function(rowData)
                                    //{
                                    //    return (rowData.EQP_STATUS == ""0""? ""정지"" : rowData.EQP_STATUS == ""1""? ""가동"" : rowData.EQP_STATUS == ""2""? ""비상정지"" : """");
                                    //}");

                                    c.Add().DataField("EQP_CNT_OK").Caption("OK수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_CNT_NG").Caption("NG수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_SPEED").Caption("EQP_SPEED");
                                    c.Add().DataField("EQP_ALARM_CODE").Caption("EQP_ALARM_CODE");
                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("EQP_IDX").Caption("순번").Visible(true);

                                    c.Add().DataField("EQP_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");

                                })
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("XrayDataGrid")
                                .KeyExpr("EQX_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .AllowColumnResizing(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EQX_CODE").Caption("설비코드");
                                    //c.Add().DataField("EQX_STATUS").Caption("설비가동상태");
                                    //.CalculateCellValue(@"function(rowData)
                                    //{
                                    //    return (rowData.EQX_STATUS == ""0""? ""정지"" : rowData.EQX_STATUS == ""1""? ""가동"" : rowData.EQX_STATUS == ""2""? ""비상정지"" : """");
                                    //}");

                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EQX_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("EQX_WORK_RST").Caption("작업결과 (OK, NG)");
                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQX_IDX").Caption("순번");
                                    c.Add().DataField("EQX_FILE_IDX").Caption("EQX_FILE_IDX");

                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EQX_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);


                                    c.Add().DataField("EQX_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                       .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQX_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");


                                })
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("EnvironmentDataGrid")
                                .KeyExpr("EQT_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .AllowColumnResizing(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EQT_CODE").Caption("작업실코드");
                                    c.Add().DataField("EQT_TEMPERATURE").Caption("온도");
                                    c.Add().DataField("EQT_HUMIDITY").Caption("습도");
                                    c.Add().DataField("EQT_PRESSURE").Caption("압력");
                                    c.Add().DataField("I_DATE").Caption("수신일시").Visible(true).DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("O_DATE").Caption("발생일시").Visible(true).DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQT_IDX").Caption("순번").Visible(false);
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");

                                })
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("MetalDataGrid")
                                .KeyExpr("EMD_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .AllowColumnResizing(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EMD_CODE").Caption("설비코드");
                                    //c.Add().DataField("EMD_STATUS").Caption("설비가동상태");
                                    //.CalculateCellValue(@"function(rowData)
                                    //{
                                    //    return (rowData.EMD_STATUS == ""0""? ""정지"" : rowData.EMD_STATUS == ""1""? ""가동"" : rowData.EMD_STATUS == ""2""? ""비상정지"" : """");
                                    //}");

                                    c.Add().DataField("EMD_CNT_OK").Caption("OK수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EMD_CNT_NG").Caption("NG수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EMD_SENSITIVITY").Caption("감도");
                                    c.Add().DataField("EMD_PROPERTY").Caption("물성");
                                    c.Add()
                                                 .Caption("적부 결과")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "RESULT"
                                                             ,
                                                             pTableName = "RESULT"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_RESULT")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss").Visible(true);
                                    c.Add().DataField("EMD_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EMD_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EMD_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");

                                })
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("FlowmeterDataGrid")
                                .KeyExpr("EFM_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .AllowColumnResizing(true)
                                .SearchPanel(s => s.Visible(true))
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EFM_CODE").Caption("설비코드");
                                    //c.Add().DataField("EFM_STATUS").Caption("설비가동상태");
                                    //.CalculateCellValue(@"function(rowData)
                                    //{
                                    //    return (rowData.EFM_STATUS == ""0""? ""정지"" : rowData.EFM_STATUS == ""1""? ""가동"" : rowData.EFM_STATUS == ""2""? ""비상정지"" : """");
                                    //}");
                                    c.Add().DataField("EFM_LITER").Caption("순시유량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EFM_LITER_APD").Caption("적산유량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss").Visible(true);


                                    c.Add().DataField("EFM_IDX").Caption("순번").Visible(true);


                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EFM_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                })
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("ExpressiveDataGrid")
                                .KeyExpr("EEM_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .AllowColumnResizing(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EEM_CODE").Caption("설비코드");
                                    //c.Add().DataField("EEM_STATUS").Caption("설비가동상태");
                                    //.CalculateCellValue(@"function(rowData)
                                    //{
                                    //    return (rowData.EEM_STATUS == ""0""? ""정지"" : rowData.EEM_STATUS == ""1""? ""가동"" : rowData.EEM_STATUS == ""2""? ""비상정지"" : """");
                                    //}");

                                    c.Add().DataField("EEM_WEIGHT").Caption("중량");


                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EEM_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss").Visible(true);
                                    c.Add().DataField("EEM_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");


                                })
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("ETCDataGrid")
                                .KeyExpr("audittrail_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .AllowColumnResizing(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("equip_cd").Caption("설비코드");
                                    c.Add().DataField("order_no").Caption("제조지시번호");
                                    c.Add().DataField("process_cd").Caption("공정코드");
                                    c.Add().DataField("process_nm").Caption("공정명");
                                    c.Add().DataField("order_work_data_seq").Caption("공정순번");
                                    c.Add().DataField("data1").Caption("data1");
                                    c.Add().DataField("data2").Caption("data2");
                                    c.Add().DataField("data3").Caption("data3");
                                    c.Add().DataField("data4").Caption("data4");
                                    c.Add().DataField("data5").Caption("data5");
                                    c.Add().DataField("confirm_time").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");

                                })
                            )
                    }
                    else
                    {
                        @(Html.DevExtreme().DataGrid()
                                .ID("WeightDataGrid")
                                .KeyExpr("EQW_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .HoverStateEnabled(true)
                                .AllowColumnResizing(true)
                                .ShowColumnLines(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .FilterRow(filterRow => filterRow.Visible(true)
                                    .ApplyFilter(GridApplyFilterMode.Auto)
                                )
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EQW_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EQW_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQW_CNT_OK").Caption("OK 수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_CNT_NG").Caption("NG 수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("EQW_STD_W_H").Caption("상한중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_STD_W_N").Caption("정량중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_STD_W_L").Caption("하한중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W1").Caption("1열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W2").Caption("2열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W3").Caption("3열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W4").Caption("4열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W5").Caption("5열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W6").Caption("6열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W7").Caption("7열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W8").Caption("8열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W9").Caption("9열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W10").Caption("10열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("EQW_WORK_ORDER_NO").Caption("제조지시번호").Visible(true);

                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");
                                })
                                //.OnRowDblClick("EquipmentCollectEditData")
                                .OnRowUpdated("EquipmentCollectEditUpdate")
                                .OnFocusedRowChanged("EquipmentCollectDataChangeSelect")
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("SterilizerDataGrid")
                                .KeyExpr("ETZ_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .HoverStateEnabled(true)
                                .AllowColumnResizing(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .ShowColumnLines(true)
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("ETZ_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("ETZ_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("ETZ_TEMP_HOT").Caption("살균가열온도")
                                        .Format("#,##0.#").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_LITER").Caption("순시유량")
                                        .Format("#,##0.####").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_LITER_APD").Caption("적산유량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_LITER_SPEED").Caption("유량속도")
                                        .Format("#,##0.####").DataType(GridColumnDataType.Number);

                                    c.Add()
                                                 .Caption("데이터 타입")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "DATA_TYPE"
                                                             ,
                                                             pTableName = "DATA_TYPE"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_DATA_TYPE")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add().DataField("ETZ_WORK_RST").Caption("작업결과 (OK, NG)");
                                    c.Add().DataField("ETZ_WORK_ORDER_NO").Caption("제조지시번호");

                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");

                                })
                                .OnRowUpdated("EquipmentCollectEditUpdate")
                                .OnFocusedRowChanged("EquipmentCollectDataChangeSelect")
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("PackDataGrid")
                                .KeyExpr("EQP_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .AllowColumnResizing(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .FilterRow(filterRow => filterRow.Visible(true)
                                    .ApplyFilter(GridApplyFilterMode.Auto)
                                )
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EQP_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EQP_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQP_CNT_OK").Caption("OK수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_CNT_NG").Caption("NG수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_SPEED").Caption("EQP_SPEED");

                                    c.Add().DataField("EQP_WORK_ORDER_NO").Caption("제조지시번호").Visible(true);
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");
                                })
                                //.OnRowDblClick("EquipmentCollectEditData")
                                .OnRowUpdated("EquipmentCollectEditUpdate")
                                .OnFocusedRowChanged("EquipmentCollectDataChangeSelect")
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("XrayDataGrid")
                                .KeyExpr("EQX_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .WordWrapEnabled(true)
                                //.HeaderFilter(headerFilter => headerFilter.Visible(true))
                                //.FilterRow(filterRow => filterRow.Visible(true)
                                //    .ApplyFilter(GridApplyFilterMode.Auto)
                                //)
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EQX_IDX").Caption("순번");
                                    c.Add().DataField("EQX_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("EQX_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                       .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQX_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQX_FILE_IDX").Caption("EQX_FILE_IDX");
                                    c.Add()
                                        .DataField("EQX_FILE_IDX_Open")
                                        .DataType(GridColumnDataType.String)
                                        .Caption("파일열기")
                                        .CellTemplate(new JS("EQX_FILE_CellPrepared"));

                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EQX_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EQX_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("EQX_WORK_RST").Caption("작업결과 (OK, NG)");
                                    c.Add().DataField("EQX_WORK_ORDER_NO").Caption("제조지시번호");
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");

                                })
                                //.OnRowDblClick("EquipmentCollectEditData")
                                .OnRowUpdated("EquipmentCollectEditUpdate")
                                .OnFocusedRowChanged("EquipmentCollectDataChangeSelect")
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("DryDataGrid")
                                .KeyExpr("EDR_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .WordWrapEnabled(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .FilterRow(filterRow => filterRow.Visible(true)
                                    .ApplyFilter(GridApplyFilterMode.Auto)
                                )
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EDR_IDX").Caption("순번");
                                    c.Add().DataField("EDR_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("EDR_TEMP").Caption("입구온도").Format("#,##0.##").DataType(GridColumnDataType.Number)
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.EDR_TEMP > 100) ? rowData.EDR_TEMP*0.1 : rowData.EDR_TEMP);
                                        }");
                                    c.Add().DataField("EDR_TEMP2").Caption("출구온도").Format("#,##0.##").DataType(GridColumnDataType.Number)
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.EDR_TEMP2 > 100) ? rowData.EDR_TEMP2*0.1 : rowData.EDR_TEMP2);
                                        }");

                                    c.Add()
                                                 .Caption("데이터 타입")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "DATA_TYPE"
                                                             ,
                                                             pTableName = "DATA_TYPE"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EDR_DATA_TYPE")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EDR_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EDR_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("EDR_WORK_RST").Caption("작업결과 (OK, NG)");
                                    c.Add().DataField("EDR_WORK_ORDER_NO").Caption("제조지시번호");
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");

                                })
                                //.OnRowDblClick("EquipmentCollectEditData")
                                .OnRowUpdated("EquipmentCollectEditUpdate")
                                .OnFocusedRowChanged("EquipmentCollectDataChangeSelect")
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("EnvironmentDataGrid")
                                .KeyExpr("EQT_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .AllowColumnResizing(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .FilterRow(filterRow => filterRow.Visible(true)
                                    .ApplyFilter(GridApplyFilterMode.Auto)
                                )
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EQT_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EQT_CODE").Caption("작업실코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").Visible(true).DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQT_TEMPERATURE").Caption("온도");
                                    c.Add().DataField("EQT_HUMIDITY").Caption("습도");
                                    c.Add().DataField("EQT_PRESSURE").Caption("압력");
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");

                                })
                                //.OnRowDblClick("EquipmentCollectEditData")
                                .OnRowUpdated("EquipmentCollectEditUpdate")
                                .OnFocusedRowChanged("EquipmentCollectDataChangeSelect")
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("MetalDataGrid")
                                .KeyExpr("EMD_IDX")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .AllowColumnResizing(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .FilterRow(filterRow => filterRow.Visible(true)
                                    .ApplyFilter(GridApplyFilterMode.Auto)
                                )
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("EMD_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EMD_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("EMD_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EMD_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EMD_SENSITIVITY").Caption("감도");
                                    c.Add().DataField("EMD_PROPERTY").Caption("물성");
                                    c.Add()
                                                 .Caption("적부 결과")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "RESULT"
                                                             ,
                                                             pTableName = "RESULT"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_RESULT")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add()
                                                 .Caption("데이터 타입")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "DATA_TYPE"
                                                             ,
                                                             pTableName = "DATA_TYPE"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_DATA_TYPE")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add().DataField("EMD_WORK_RST").Caption("작업결과 (OK, NG)");
                                    c.Add().DataField("EMD_WORK_ORDER_NO").Caption("제조지시번호").Visible(true);

                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");
                                })
                                //.OnRowDblClick("EquipmentCollectEditData")
                                .OnRowUpdated("EquipmentCollectEditUpdate")
                                .OnFocusedRowChanged("EquipmentCollectDataChangeSelect")

                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("FlowmeterDataGrid")
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("ExpressiveDataGrid")
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("ETCDataGrid")
                                .KeyExpr("audittrail_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(900)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .WordWrapEnabled(true)
                                .AllowColumnResizing(true)
                                .HeaderFilter(headerFilter => headerFilter.Visible(true))
                                .FilterRow(filterRow => filterRow.Visible(true)
                                    .ApplyFilter(GridApplyFilterMode.Auto)
                                )
                                .Paging(paging =>
                                {
                                    paging.Enabled(true);
                                    paging.PageSize(20);
                                })
                                .Pager(pager =>
                                {
                                    pager.ShowPageSizeSelector(true);
                                    pager.AllowedPageSizes(new[] { 10, 20, 30 });
                                    pager.ShowInfo(true);
                                })
                                .Columns(c =>
                                {
                                    c.Add().DataField("equip_cd").Caption("설비코드");
                                    c.Add().DataField("order_no").Caption("제조지시번호");
                                    c.Add().DataField("process_cd").Caption("공정코드");
                                    c.Add().DataField("process_nm").Caption("공정명");
                                    c.Add().DataField("order_work_data_seq").Caption("공정순번");
                                    c.Add().DataField("data1").Caption("data1");
                                    c.Add().DataField("data2").Caption("data2");
                                    c.Add().DataField("data3").Caption("data3");
                                    c.Add().DataField("data4").Caption("data4");
                                    c.Add().DataField("data5").Caption("data5");
                                    c.Add().DataField("confirm_time").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("change_cnt").Caption("변경여부")
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.change_cnt > 0) ? true : false);
                                        }");

                                })
                                //.OnRowDblClick("EquipmentCollectEditData")
                                .OnRowUpdated("EquipmentCollectEditUpdate")
                                .OnFocusedRowChanged("EquipmentCollectDataChangeSelect")
                            )
                    }

                </div>


                <div id="EquipmentCollectDataSub" class="box" style="margin-bottom: 0px;">

                    @if (Public_Function.project.Equals("DAMUM"))
                    {

                        @(Html.DevExtreme().DataGrid()
                                .ID("WeightDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .HoverStateEnabled(true)
                                .AllowColumnResizing(true)
                                .ColumnAutoWidth(true)
                                .ShowColumnLines(true)
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);

                                    c.Add().DataField("EQW_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EQW_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQW_CNT_OK").Caption("OK 수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_CNT_NG").Caption("NG 수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("EQW_STD_W_H").Caption("상한중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_STD_W_N").Caption("정량중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_STD_W_L").Caption("하한중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W1").Caption("1열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W2").Caption("2열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W3").Caption("3열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W4").Caption("4열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W5").Caption("5열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W6").Caption("6열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W7").Caption("7열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W8").Caption("8열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W9").Caption("9열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W10").Caption("10열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("EQW_WORK_ORDER_NO").Caption("제조지시번호").Visible(true);

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("SterilizerDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .HoverStateEnabled(true)
                                .AllowColumnResizing(true)
                                .ColumnAutoWidth(true)
                                .ShowColumnLines(true)
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);

                                    c.Add().DataField("ETZ_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("ETZ_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("ETZ_TEMP_HOT").Caption("살균가열온도")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_TEMP_COLD").Caption("충진냉각온도")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_TEMP_DIVISION").Caption("디비젼배출")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("ETZ_STD_TEMP_HOT").Caption("표준가열온도")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_STD_TEMP_COLD").Caption("표준냉각온도")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_STD_TEMP_DIVISION").Caption("표준디비젼")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add()
                                                 .Caption("데이터 타입")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "DATA_TYPE"
                                                             ,
                                                             pTableName = "DATA_TYPE"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_DATA_TYPE")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("작업결과")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_RST"
                                                             ,
                                                             pTableName = "WORK_RST"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_WORK_RST")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add().DataField("ETZ_WORK_ORDER_NO").Caption("제조지시");

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("PackDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);
                                    c.Add().DataField("EQP_CODE").Caption("설비코드");
                                    c.Add().DataField("EQP_SPEED").Caption("EQP_SPEED");
                                    c.Add().DataField("EQP_ALARM_CODE").Caption("EQP_ALARM_CODE");
                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("EQP_IDX").Caption("순번").Visible(true);

                                    c.Add().DataField("EQP_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("XrayDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);
                                    c.Add().DataField("EQX_CODE").Caption("설비코드");
                                    c.Add().DataField("EQX_CNT_OK").Caption("OK수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQX_CNT_NG").Caption("NG수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EQX_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("EQX_WORK_RST").Caption("작업결과 (OK, NG)");
                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQX_IDX").Caption("순번");
                                    c.Add().DataField("EQX_FILE_IDX").Caption("EQX_FILE_IDX");

                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EQX_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);


                                    c.Add().DataField("EQX_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                       .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQX_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("EnvironmentDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);
                                    c.Add().DataField("EQT_CODE").Caption("작업실코드");
                                    c.Add().DataField("EQT_TEMPERATURE").Caption("온도");
                                    c.Add().DataField("EQT_HUMIDITY").Caption("습도");
                                    c.Add().DataField("EQT_PRESSURE").Caption("압력");
                                    c.Add().DataField("I_DATE").Caption("수신일시").Visible(true).DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("O_DATE").Caption("발생일시").Visible(true).DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQT_IDX").Caption("순번").Visible(false);

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("MetalDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);
                                    c.Add().DataField("EMD_CODE").Caption("설비코드");
                                    c.Add().DataField("EMD_CNT_OK").Caption("OK수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EMD_CNT_NG").Caption("NG수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EMD_SENSITIVITY").Caption("감도");
                                    c.Add().DataField("EMD_PROPERTY").Caption("물성");
                                    c.Add()
                                                 .Caption("적부 결과")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "RESULT"
                                                             ,
                                                             pTableName = "RESULT"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_RESULT")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss").Visible(true);
                                    c.Add().DataField("EMD_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EMD_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EMD_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("FlowmeterDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);
                                    c.Add().DataField("EFM_CODE").Caption("설비코드");
                                    c.Add().DataField("EFM_LITER").Caption("순시유량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EFM_LITER_APD").Caption("적산유량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss").Visible(true);


                                    c.Add().DataField("EFM_IDX").Caption("순번").Visible(true);


                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EFM_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("ExpressiveDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);
                                    c.Add().DataField("EEM_CODE").Caption("설비코드");

                                    c.Add().DataField("EEM_WEIGHT").Caption("중량");


                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EEM_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("I_DATE").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss").Visible(true);
                                    c.Add().DataField("EEM_IDX").Caption("순번").Visible(true);


                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )
                        @(Html.DevExtreme().DataGrid()
                                .ID("ETCDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);
                                    c.Add().DataField("equip_cd").Caption("설비코드");
                                    c.Add().DataField("order_no").Caption("제조지시번호");
                                    c.Add().DataField("process_cd").Caption("공정코드");
                                    c.Add().DataField("process_nm").Caption("공정명");
                                    c.Add().DataField("order_work_data_seq").Caption("공정순번");
                                    c.Add().DataField("data1").Caption("data1");
                                    c.Add().DataField("data2").Caption("data2");
                                    c.Add().DataField("data3").Caption("data3");
                                    c.Add().DataField("data4").Caption("data4");
                                    c.Add().DataField("data5").Caption("data5");
                                    c.Add().DataField("confirm_time").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )
                    }
                    else
                    {
                        @(Html.DevExtreme().DataGrid()
                                .ID("WeightDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .HoverStateEnabled(true)
                                .AllowColumnResizing(true)
                                .ShowColumnLines(true)
                                .ColumnAutoWidth(true)
                                .OnCellClick("EquipmentCollectData_SignClick")
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add()
                                        .DataField("_sign_image")
                                        .Name("sign_image")
                                        .Caption("서명")
                                        .Width(100)
                                        .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                    c.Add().DataField("confirmer_nm").Caption("확인자");
                                    c.Add().DataField("_confirmer_sign_image").Caption("서명").Alignment(HorizontalAlignment.Center)
                                            .AllowFiltering(false)
                                            .AllowSorting(false)
                                            .Width(100)
                                            .CellTemplate(@<text>
                                                    <div>
                                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                                    </div>
                                                </text>);
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);
                                    c.Add().DataField("EQW_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EQW_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQW_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("EQW_STD_W_H").Caption("상한중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_STD_W_N").Caption("정량중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_STD_W_L").Caption("하한중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W1").Caption("1열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W2").Caption("2열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W3").Caption("3열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W4").Caption("4열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W5").Caption("5열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W6").Caption("6열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W7").Caption("7열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W8").Caption("8열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W9").Caption("9열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQW_W10").Caption("10열중량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);

                                    c.Add().DataField("EQW_WORK_ORDER_NO").Caption("제조지시번호").Visible(true);
                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("SterilizerDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .HoverStateEnabled(true)
                                .AllowColumnResizing(true)
                                .ColumnAutoWidth(true)
                                .ShowColumnLines(true)
                                .OnCellClick("EquipmentCollectData_SignClick")
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add()
                                        .DataField("_sign_image")
                                        .Name("sign_image")
                                        .Caption("서명")
                                        .Width(100)
                                        .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                    c.Add().DataField("confirmer_nm").Caption("확인자");
                                    c.Add().DataField("_confirmer_sign_image").Caption("서명").Alignment(HorizontalAlignment.Center)
                                            .AllowFiltering(false)
                                            .AllowSorting(false)
                                            .Width(100)
                                            .CellTemplate(@<text>
                                                    <div>
                                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                                    </div>
                                                </text>);
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);

                                    c.Add().DataField("ETZ_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("ETZ_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("ETZ_TEMP_HOT").Caption("살균가열온도")
                                        .Format("#,##0.#").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_LITER").Caption("순시유량")
                                        .Format("#,##0.####").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_LITER_APD").Caption("적산유량")
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("ETZ_LITER_SPEED").Caption("유량속도")
                                        .Format("#,##0.####").DataType(GridColumnDataType.Number);

                                    c.Add()
                                                 .Caption("데이터 타입")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "DATA_TYPE"
                                                             ,
                                                             pTableName = "DATA_TYPE"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_DATA_TYPE")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("ETZ_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add().DataField("ETZ_WORK_RST").Caption("작업결과 (OK, NG)");
                                    c.Add().DataField("ETZ_WORK_ORDER_NO").Caption("제조지시번호");

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("PackDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .OnCellClick("EquipmentCollectData_SignClick")
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add()
                                        .DataField("_sign_image")
                                        .Name("sign_image")
                                        .Caption("서명")
                                        .Width(100)
                                        .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                    c.Add().DataField("confirmer_nm").Caption("확인자");
                                    c.Add().DataField("_confirmer_sign_image").Caption("서명").Alignment(HorizontalAlignment.Center)
                                            .AllowFiltering(false)
                                            .AllowSorting(false)
                                            .Width(100)
                                            .CellTemplate(@<text>
                                                    <div>
                                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                                    </div>
                                                </text>);
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);

                                    c.Add().DataField("EQP_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EQP_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQP_CNT_OK").Caption("OK수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_CNT_NG").Caption("NG수량")
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQP_SPEED").Caption("EQP_SPEED");

                                    c.Add().DataField("EQP_WORK_ORDER_NO").Caption("제조지시번호").Visible(true);
                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("XrayDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .OnCellClick("EquipmentCollectData_SignClick")
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add()
                                        .DataField("_sign_image")
                                        .Name("sign_image")
                                        .Caption("서명")
                                        .Width(100)
                                        .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                    c.Add().DataField("confirmer_nm").Caption("확인자");
                                    c.Add().DataField("_confirmer_sign_image").Caption("서명").Alignment(HorizontalAlignment.Center)
                                            .AllowFiltering(false)
                                            .AllowSorting(false)
                                            .Width(100)
                                            .CellTemplate(@<text>
                                                    <div>
                                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                                    </div>
                                                </text>);

                                    c.Add().DataField("EQX_IDX").Caption("순번");
                                    c.Add().DataField("EQX_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("EQX_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                       .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQX_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                        .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EQX_FILE_IDX").Caption("EQX_FILE_IDX");
                                    c.Add()
                                        .DataField("EQX_FILE_IDX_Open")
                                        .DataType(GridColumnDataType.String)
                                        .Caption("파일열기")
                                        .CellTemplate(new JS("EQX_FILE_CellPrepared"));

                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EQX_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EQX_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("EQX_WORK_RST").Caption("작업결과 (OK, NG)");
                                    c.Add().DataField("EQX_WORK_ORDER_NO").Caption("제조지시번호");

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("DryDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .OnCellClick("EquipmentCollectData_SignClick")
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add()
                                        .DataField("_sign_image")
                                        .Name("sign_image")
                                        .Caption("서명")
                                        .Width(100)
                                        .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                    c.Add().DataField("confirmer_nm").Caption("확인자");
                                    c.Add().DataField("_confirmer_sign_image").Caption("서명").Alignment(HorizontalAlignment.Center)
                                            .AllowFiltering(false)
                                            .AllowSorting(false)
                                            .Width(100)
                                            .CellTemplate(@<text>
                                                    <div>
                                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                                    </div>
                                                </text>);
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);

                                    c.Add().DataField("EDR_IDX").Caption("순번");
                                    c.Add().DataField("EDR_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("EDR_TEMP").Caption("입구온도").Format("#,##0.##").DataType(GridColumnDataType.Number)
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.EDR_TEMP > 100) ? rowData.EDR_TEMP*0.1 : rowData.EDR_TEMP);
                                        }");
                                    c.Add().DataField("EDR_TEMP2").Caption("출구온도").Format("#,##0.##").DataType(GridColumnDataType.Number)
                                    .CalculateCellValue(@"function(rowData)
                                        {
                                            return ((rowData.EDR_TEMP2 > 100) ? rowData.EDR_TEMP2*0.1 : rowData.EDR_TEMP2);
                                        }");

                                    c.Add()
                                                 .Caption("데이터 타입")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "DATA_TYPE"
                                                             ,
                                                             pTableName = "DATA_TYPE"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EDR_DATA_TYPE")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EDR_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EDR_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add().DataField("EDR_WORK_RST").Caption("작업결과 (OK, NG)");
                                    c.Add().DataField("EDR_WORK_ORDER_NO").Caption("제조지시번호");

                                })
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("EnvironmentDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .OnCellClick("EquipmentCollectData_SignClick")
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add()
                                        .DataField("_sign_image")
                                        .Name("sign_image")
                                        .Caption("서명")
                                        .Width(100)
                                        .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                    c.Add().DataField("confirmer_nm").Caption("확인자");
                                    c.Add().DataField("_confirmer_sign_image").Caption("서명").Alignment(HorizontalAlignment.Center)
                                            .AllowFiltering(false)
                                            .AllowSorting(false)
                                            .Width(100)
                                            .CellTemplate(@<text>
                                                    <div>
                                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                                    </div>
                                                </text>);
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);

                                    c.Add().DataField("EQT_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EQT_CODE").Caption("작업실코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").Visible(true).DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");
                                    c.Add().DataField("EQT_TEMPERATURE").Caption("온도");
                                    c.Add().DataField("EQT_HUMIDITY").Caption("습도");
                                    c.Add().DataField("EQT_PRESSURE").Caption("압력");

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("MetalDataSubGrid")
                                .KeyExpr("audit_id")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .OnCellClick("EquipmentCollectData_SignClick")
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add()
                                        .DataField("_sign_image")
                                        .Name("sign_image")
                                        .Caption("서명")
                                        .Width(100)
                                        .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                    c.Add().DataField("confirmer_nm").Caption("확인자");
                                    c.Add().DataField("_confirmer_sign_image").Caption("서명").Alignment(HorizontalAlignment.Center)
                                            .AllowFiltering(false)
                                            .AllowSorting(false)
                                            .Width(100)
                                            .CellTemplate(@<text>
                                                    <div>
                                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                                    </div>
                                                </text>);
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);

                                    c.Add().DataField("EMD_IDX").Caption("순번").Visible(true);
                                    c.Add().DataField("EMD_CODE").Caption("설비코드");
                                    c.Add().DataField("O_DATE").Caption("발생일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                    c.Add().DataField("EMD_CNT_OK_APD").Caption("OK 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EMD_CNT_NG_APD").Caption("NG 누적수량").Visible(true)
                                            .Format("#,##0").DataType(GridColumnDataType.Number);
                                    c.Add().DataField("EMD_SENSITIVITY").Caption("감도");
                                    c.Add().DataField("EMD_PROPERTY").Caption("물성");
                                    c.Add()
                                                 .Caption("적부 결과")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "RESULT"
                                                             ,
                                                             pTableName = "RESULT"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_RESULT")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("데이터 확인")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "PR006"
                                                             ,
                                                             pTableName = "PR006"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_CONFIRMED")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);

                                    c.Add()
                                                 .Caption("데이터 타입")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "DATA_TYPE"
                                                             ,
                                                             pTableName = "DATA_TYPE"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_DATA_TYPE")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add()
                                                 .Caption("작업구분")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_WORK_GU")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                    c.Add().DataField("EMD_WORK_RST").Caption("작업결과 (OK, NG)");
                                    c.Add().DataField("EMD_WORK_ORDER_NO").Caption("제조지시번호").Visible(true);

                                    c.Add()
                                                 .Caption("데이터 타입")
                                                 .Lookup(lookup => lookup
                                                     .DataSource(d => d.WebApi()
                                                         .RouteName("Comm")
                                                         .LoadAction("GetCommon")
                                                         .LoadMethod("GET")
                                                         .LoadParams(new
                                                         {
                                                             pGubun = "공통코드"
                                                             ,
                                                             pDiv = "D"
                                                             ,
                                                             pStrWhere = "WORK_GU"
                                                             ,
                                                             pTableName = "WORK_GU"
                                                         }
                                                     ).Key("keyfield"))
                                                     .ValueExpr("keyfield")
                                                     .DisplayExpr("displayfield")
                                                     ).DataField("EMD_DATA_TYPE")
                                                     .DataType(GridColumnDataType.String)
                                                     .Alignment(HorizontalAlignment.Center);
                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )

                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("FlowmeterDataSubGrid")
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("ExpressiveDataSubGrid")
                            )

                        @(Html.DevExtreme().DataGrid()
                                .ID("ETCDataSubGrid")
                                .KeyExpr("audit_id")

                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
                                .Height(200)
                                .FocusedRowEnabled(true)
                                .ShowColumnLines(true)
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .OnCellClick("EquipmentCollectData_SignClick")
                                .Columns(c =>
                                {
                                    c.Add().DataField("audit_timestamp").Caption("변경일").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd");
                                    c.Add().DataField("audit_remark").Caption("변경사유").Width(100);
                                    c.Add().DataField("emp_nm").Caption("변경자");
                                    c.Add()
                                        .DataField("_sign_image")
                                        .Name("sign_image")
                                        .Caption("서명")
                                        .Width(100)
                                        .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                    c.Add().DataField("confirmer_nm").Caption("확인자");
                                    c.Add().DataField("_confirmer_sign_image").Caption("서명").Alignment(HorizontalAlignment.Center)
                                            .AllowFiltering(false)
                                            .AllowSorting(false)
                                            .Width(100)
                                            .CellTemplate(@<text>
                                                    <div>
                                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                                    </div>
                                                </text>);
                                    c.Add().DataField("equip_cd").Caption("설비코드");
                                    c.Add().DataField("order_no").Caption("제조지시번호");
                                    c.Add().DataField("process_cd").Caption("공정코드");
                                    c.Add().DataField("process_nm").Caption("공정명");
                                    c.Add().DataField("order_work_data_seq").Caption("공정순번");
                                    c.Add().DataField("data1").Caption("data1");
                                    c.Add().DataField("data2").Caption("data2");
                                    c.Add().DataField("data3").Caption("data3");
                                    c.Add().DataField("data4").Caption("data4");
                                    c.Add().DataField("data5").Caption("data5");
                                    c.Add().DataField("confirm_time").Caption("수신일시").DataType(GridColumnDataType.DateTime).Format("yyyy-MM-dd HH:mm:ss");

                                })
                                .MasterDetail(md => md.Enabled(true)
                                                .Template(@<text>
                                                            <div class="col-12">
                                                                <textarea class="form-control foo" style="height:auto" rows="5" readonly><%- data.audit_remark %></textarea>
                                                            </div>
                                                        </text>)
                                )
                            )
                    }


                </div>
            </div>
        </div>
    </div>

</div>
