@using System.Data
@using HACCP.Libs
@using HACCP.Libs.Views

@{
    var pagePrefix = ViewContext.RouteData.Values["action"].ToString();
    var pageControllerNm = ViewContext.RouteData.Values["controller"].ToString();

    ViewBag.Title = pagePrefix;
    Layout = null;

    var today = DateTime.Now.Date;
}

@*제조용수 시험 스케줄 승인*@

<script id="@(pagePrefix)Js">

    _waterTestScheduleConfirmCRUDStatus = "";
    _waterTestScheduleConfirmSignData = "";
    _waterTestScheduleConfirmSignGubun = "";

    $(function () {

        $('#WaterTestScheduleConfirm .datepicker').datepicker({
            format: "yyyy-mm-dd",	//데이터 포맷 형식(yyyy : 년 mm : 월 dd : 일 )
            clearBtn: false, //날짜 선택한 값 초기화 해주는 버튼 보여주는 옵션 기본값 false 보여주려면 true
            templates: {
                leftArrow: '&laquo;',
                rightArrow: '&raquo;'
            }, //다음달 이전달로 넘어가는 화살표 모양 커스텀 마이징
            todayHighlight: true,	//오늘 날짜에 하이라이팅 기능 기본값 :false
            weekStart: 0,//달력 시작 요일 선택하는 것 기본값은 0인 일요일
            language: "ko"	//달력의 언어 선택, 그에 맞는 js로 교체해줘야한다.
        });

        WaterTestScheduleConfirmEditCheck(false, "N");

        $("#WaterTestScheduleConfirmSearchForm input[name=start_date]").datepicker("update", '@today.AddMonths(1 - today.Month).AddDays(1 - today.Day).ToShortDateString()');
        $("#WaterTestScheduleConfirmSearchForm input[name=end_date]").datepicker("update", '@today.AddMonths(12 - today.Month).AddDays(31 - today.Day).ToShortDateString()');

        WaterTestScheduleConfirmSearch();

    });

    // 수정중인지 체크
    function WaterTestScheduleConfirmEditCheck(nowEdit, status) {

        UtilView.setActiveElementToolbar(nowEdit
            , "WaterTestScheduleConfirmToolbar"
            , "WaterTestScheduleConfirm"
        );

        UtilView.setActiveElementGrids(nowEdit, "WaterTestScheduleConfirmGrid");
        UtilView.setActiveElementGrids(nowEdit, "WaterTestScheduleGrid");
        UtilView.setActiveElementGrids(nowEdit, "WaterTestScheduleMatchGrid");

        $("#WaterTestScheduleConfirmWriteForm select[name=confirm_status]").readonly(true);

        $("#WaterTestScheduleConfirmWriteForm input[name=gubun]").val(status);

        if (nowEdit) {
            $("#WaterTestScheduleConfirmWriteForm input").prop("disabled", false);
            $("#WaterTestScheduleConfirmWriteForm input[name=confirm_no]").prop("readonly", true);

            $("#WaterTestScheduleButtonDiv button").prop("disabled", true);
        } else {
            $("#WaterTestScheduleConfirmWriteForm input").prop("disabled", true);
            $("#WaterTestScheduleConfirmWriteForm input[name=confirm_no]").prop("readonly", false);

            $("#WaterTestScheduleButtonDiv button").prop("disabled", false);
        }

        _waterTestScheduleConfirmCRUDStatus = status;
    }

    // 마스터 그리드 포커스 변경
    function WaterTestScheduleConfirmFocusChanged() {

        UtilView.setDataGridFormBind("WaterTestScheduleConfirmGrid", "WaterTestScheduleConfirmWriteForm");

        var grid = $("#WaterTestScheduleConfirmGrid").dxDataGrid("instance");
        var gridData = getGridRowByKey("WaterTestScheduleConfirmGrid", grid.option("focusedRowKey"));

        $.ajax({
            type: 'GET',
            url: '/ManufactureWaterMng/WaterTestScheduleConfirmSelectDetail',
            dataType: "json",
            data: {
                confirm_no: gridData.confirm_no,
                start_date: gridData.start_date,
                end_date: gridData.end_date
            },
            async: false,
            success: function (result) {

                try {
                    var jsonData = JSON.parse(result[0]);
                    $("#WaterTestScheduleConfirmSignTable").dxDataGrid("option", "dataSource", jsonData);
                }
                catch (e) {
                    $("#WaterTestScheduleConfirmSignTable").dxDataGrid("option", "dataSource", []);
                }

                try {
                    var jsonData = JSON.parse(result[1]);
                    $("#WaterTestScheduleMatchGrid").dxDataGrid("option", "dataSource", jsonData);
                }
                catch (e) {
                    $("#WaterTestScheduleMatchGrid").dxDataGrid("option", "dataSource", []);
                }

                try {
                    var jsonData = JSON.parse(result[2]);
                    $("#WaterTestScheduleGrid").dxDataGrid("option", "dataSource", jsonData);
                }
                catch (e) {
                    $("#WaterTestScheduleGrid").dxDataGrid("option", "dataSource", []);
                }
            }
        })
    }

    // 제조용수 시험 스케줄 추가 삭제(하단 중열 버튼)
    function WaterTestSchedule(gubun) {

        var grid = $("#WaterTestScheduleConfirmGrid").dxDataGrid("instance");

        if (!grid.option("focusedRowKey")) {
            return;
        }

        var gridData = getGridRowByKey("WaterTestScheduleConfirmGrid", grid.option("focusedRowKey"));

        if (gridData.confirm_status === "02") {
            alert("승인된 자료는 수정할 수 없습니다.");
            return;
        }

        var gridData = getGridRowByKey("WaterTestScheduleConfirmGrid", grid.option("focusedRowKey"));

        var data = {
            gubun: gubun,
            confirm_no: gridData.confirm_no
        };

        switch (gubun) {
            case "IA":
                data.start_date = gridData.start_date;
                data.end_date = gridData.end_date;
                break;

            case "IS":
                grid = $("#WaterTestScheduleGrid").dxDataGrid("instance");

                if (!grid.option("focusedRowKey")) {
                    return;
                }

                //var gridData2 = getGridRowByKey("WaterTestScheduleGrid", grid.option("focusedRowKey"));

                //data.water_gb = gridData2.water_gb;
                //data.pointer_cd = gridData2.point_cd;
                //data.schedule_date = gridData2.schedule_date;

                var gridData2 = grid.getSelectedRowsData();

                data.waterTestSchedules = JSON.stringify(gridData2);

                break;

            case "DA":

                break;

            case "DS":
                grid = $("#WaterTestScheduleMatchGrid").dxDataGrid("instance");

                if (!grid.option("focusedRowKey")) {
                    return;
                }

                //var gridData3 = getGridRowByKey("WaterTestScheduleMatchGrid", grid.option("focusedRowKey"));

                //data.water_gb = gridData3.water_gb;
                //data.pointer_cd = gridData3.point_cd;
                //data.schedule_date = gridData3.schedule_date;

                var gridData3 = grid.getSelectedRowsData();

                data.waterTestSchedules = JSON.stringify(gridData3);

                break;
        }

        $.ajax({
            type: 'POST',
            url: '/ManufactureWaterMng/WaterTestScheduleConfirmScheduleTRX',
            dataType: "json",
            data: data,
            async: false,
            success: function (result) {
                alert(result.message);
                WaterTestScheduleConfirmFocusChanged();
            }
        })
    }


    //#region 툴바 클릭 이벤트 관련

    // 조회
    function WaterTestScheduleConfirmSearch() {

        $.ajax({
            type: 'GET',
            url: '/ManufactureWaterMng/WaterTestScheduleConfirmSelect',
            dataType: "json",
            data: {
                start_date: $("#WaterTestScheduleConfirmSearchForm input[name=start_date]").val(),
                end_date: $("#WaterTestScheduleConfirmSearchForm input[name=end_date]").val()
            },
            async: false,
            success: function (result) {

                try {
                    var jsonData = JSON.parse(result);

                    var grid = $("#WaterTestScheduleConfirmGrid").dxDataGrid("instance");

                    grid.option("dataSource", jsonData);

                    if (!grid.option("focusedRowKey")) {
                        grid.option("focusedRowIndex", 0);
                    } else {
                        WaterTestScheduleConfirmFocusChanged();
                    }
                }
                catch (e) {
                    $("#WaterTestScheduleConfirmGrid").dxDataGrid("option", "dataSource", []);
                    $("#WaterTestScheduleConfirmGrid").dxDataGrid("option", "focusedRowKey", "");

                    $("#WaterTestScheduleConfirmWriteForm")[0].reset();
                    $("#WaterTestScheduleConfirmSignTable").dxDataGrid("option", "dataSource", []);
                    $("#WaterTestScheduleMatchGrid").dxDataGrid("option", "dataSource", []);
                    $("#WaterTestScheduleGrid").dxDataGrid("option", "dataSource", []);
                }
            }
        })

    }

    // 입력
    function WaterTestScheduleConfirmInput() {
        $("#WaterTestScheduleConfirmWriteForm")[0].reset();
        $("#WaterTestScheduleConfirmWriteForm input[name=start_date]").datepicker("update", '@today.AddMonths(1 - today.Month).AddDays(1 - today.Day).ToShortDateString()');
        $("#WaterTestScheduleConfirmWriteForm input[name=end_date]").datepicker("update", '@today.AddMonths(12 - today.Month).AddDays(31 - today.Day).ToShortDateString()');

        $("#WaterTestScheduleConfirmWriteForm select[name=confirm_status]").val("01");
        $("#WaterTestScheduleConfirmSignTable").dxDataGrid("option", "dataSource", []);
        $("#WaterTestScheduleMatchGrid").dxDataGrid("option", "dataSource", []);
        WaterTestScheduleConfirmEditCheck(true, "I");
    }

    // 수정
    function WaterTestScheduleConfirmEdit() {

        var grid = $("#WaterTestScheduleConfirmGrid").dxDataGrid("instance");

        if (!grid.option("focusedRowKey")) {
            alert("수정할 항목이 없습니다.");
            return;
        }

        var gridData = getGridRowByKey("WaterTestScheduleConfirmGrid", grid.option("focusedRowKey"));

        if (gridData.confirm_status === "02") {
            alert("승인된 자료는 수정할 수 없습니다.");
            return;
        }

        WaterTestScheduleConfirmEditCheck(true, "U");
    }

    // 삭제
    function WaterTestScheduleConfirmDelete() {

        var grid = $("#WaterTestScheduleConfirmGrid").dxDataGrid("instance");

        if (!grid.option("focusedRowKey")) {
            alert("삭제할 항목이 없습니다.");
            return;
        }

        var gridData = getGridRowByKey("WaterTestScheduleConfirmGrid", grid.option("focusedRowKey"));

        if (gridData.confirm_status === "02") {
            alert("승인된 자료는 삭제할 수 없습니다.");
            return;
        }

        if (!confirm("삭제하시겠습니까?")) {
            return;
        }

        var grid = $("#WaterTestScheduleMatchGrid").dxDataGrid("instance");

        if (grid.totalCount() > 0) {
            alert("승인된 자료를 삭제한 후 작업하십시요.");
            return;
        }

        WaterTestScheduleConfirmEditCheck(true, "D");
        WaterTestScheduleConfirmSave();
    }

    // 저장
    function WaterTestScheduleConfirmSave() {
        if (!UtilView.checkValidForm("WaterTestScheduleConfirmWriteForm")) {
            return;
        }

        $("#WaterTestScheduleConfirmWriteForm select[name=confirm_status]").readonly(false);

        var form = $('#WaterTestScheduleConfirmWriteForm')[0];
        var formData = new FormData(form);

        UtilView.dataGridTRX(formData, () => WaterTestScheduleConfirmSearch());
        WaterTestScheduleConfirmEditCheck(false, "N");
    }

    // 취소
    function WaterTestScheduleConfirmUndo() {
        WaterTestScheduleConfirmEditCheck(false, "N");
        WaterTestScheduleConfirmFocusChanged();
    }

    // 외부파일
    function WaterTestScheduleConfirmExcel() {
        gridExportToExcel("WaterTestScheduleMatchGrid", "제조용수_시험_스케줄_승인_" + '@DateTime.Now.ToShortDateString()');
    }

    //#endregion


    //#region 전자서명 관련

    // 전자서명
    function WaterTestScheduleConfirmSign(e) {

        if (_waterTestScheduleConfirmCRUDStatus != "N") {
            return;
        }

        _waterTestScheduleConfirmSignData = e.data;

        if (e.columnIndex == 3) {

            _waterTestScheduleConfirmSignGubun = "U";

            if (e.data.prev_sign_yn == "0") {
                alert("먼저 앞 단계 승인이 필요합니다.");
                return;
            }

            if (e.data.sign_yn == "1") {

                if (e.data.next_sign_yn == "1") {
                    alert("이미 다음 단계가 승인 되어 있습니다.\n먼저 다음 단계 승인을 삭제(취소)해주세요. ");
                    return;
                } else {
                    if (confirm("이미 승인 되었습니다. 서명을 삭제하시겠습니까?")) {
                        _waterTestScheduleConfirmSignGubun = "D";
                    } else {
                        return;
                    }
                }
            }

            //if (e.data.sign_yn == "1") {

            //    if (confirm("이미 승인 되었습니다. 서명을 삭제하시겠습니까?")) {
            //        _waterTestScheduleConfirmSignGubun = "D";
            //    } else {
            //        return;
            //    }
            //}

            var popup = $("#WaterTestScheduleConfirmSignPopup").dxPopup("instance");
            popup.option("contentTemplate", $("#WaterTestScheduleConfirmSignPopupTemplate"));
            popup.show();

        }
    }

    // 전자서명 입력
    function WaterTestScheduleConfirmSignSubmit() {

        var data = new FormData($('#WaterTestScheduleConfirmSignForm')[0]);

        data.set("gubun", "S");

        $.ajax({
            type: 'POST',
            url: '/Comm/IDValidation',
            data: data,
            contentType: false,
            processData: false,
            success: function (result) {

                if (result.length <= 0) {

                    alert("잘못된 ID,PW 입니다.");
                    return;
                }

                var jsonData = JSON.parse(result)[0];

                var isOK = false;

                if (_waterTestScheduleConfirmSignData.responsible_emp_cd !== jsonData.emp_cd) {

                    $.ajax({
                        type: 'GET',
                        url: '/Comm/DelegateCheck',
                        data: {
                            emp_cd: jsonData.emp_cd,
                            sign_set_cd: "1031",
                            sign_set_seq: _waterTestScheduleConfirmSignData.sign_set_seq
                        },
                        async: false,
                        success: function (result) {

                            if (result.length > 0) {
                                isOK = true;
                            } else {
                                isOK = false;
                            }
                        }
                    });
                } else {
                    isOK = true;
                }

                if (!isOK) {
                    alert("권한이 없는 사용자입니다.");
                    return;
                }

                var grid = $("#WaterTestScheduleConfirmGrid").dxDataGrid("instance");

                var paramData = {
                    gubun: _waterTestScheduleConfirmSignGubun,
                    emp_cd: jsonData.emp_cd,
                    sign_type: "2",
                    confirm_no: grid.option("focusedRowKey"),
                    sign_set_dt_id: _waterTestScheduleConfirmSignData.sign_set_dt_id
                };

                $.ajax({
                    type: 'POST',
                    url: '/ManufactureWaterMng/WaterTestScheduleConfirmSignTRX',
                    data: paramData,
                    success: function (result) {

                        alert(result.message);

                        WaterTestScheduleConfirmSearch();
                    }
                });

                _waterTestScheduleConfirmSignGubun = "";

                var popup = $("#WaterTestScheduleConfirmSignPopup").dxPopup("instance");
                popup.hide();
            }
        });
    }

    // 전자서명 인풋 초기화
    function ClearWaterTestScheduleConfirmSignInput() {
        $('#WaterTestScheduleConfirmSignForm')[0].reset();
    }

    //#endregion

</script>

<div id="@(pagePrefix)" page-ctrl-name="@(pageControllerNm)" autoresize="Y">

    @(Html.DevExtreme().Popup()
        .ID("WaterTestScheduleConfirmSignPopup")
        .Width(400)
        .Height(200)
        .ShowTitle(true)
        .Title("작업자 인증")
        .OnHidden("ClearWaterTestScheduleConfirmSignInput")
        .Visible(false)
        .DragEnabled(true)
        .CloseOnOutsideClick(false)
    )

    @using (Html.DevExtreme().NamedTemplate("WaterTestScheduleConfirmSignPopupTemplate"))
    {
        <h6>전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

        <form id="WaterTestScheduleConfirmSignForm" class="mb-1">

            <div class="input-wrapper mb-1">
                <label class="col-3">아이디</label>
                <input type="text" class="col-8 form-control" name="txt_ID">
            </div>
            <div class="input-wrapper">
                <label class="col-3">비밀번호</label>
                <input type="password" class="col-8 form-control" name="txt_Pass">
            </div>
        </form>
        <div class="align-end-only">
            <button class="btn btn-secondary" onclick="WaterTestScheduleConfirmSignSubmit()">확인</button>
        </div>
    }

    <div class="mainTop row">

        <div class="col-8">

            <form id="@(pagePrefix)SearchForm">

                <div class="input-wrapper">

                    <div class="input-group input-group-sm col-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text">시작일자</span>
                        </div>
                        <input type="text" class="form-control datepicker text-center" name="start_date" autocomplete="off">
                        <label class="col-1 form-text"> ~ </label>
                        <input type="text" class="form-control input-sm datepicker text-center" name="end_date" autocomplete="off">
                    </div>

                </div>

            </form>

        </div>

        <!-- $CRUD버튼-->
        <div class="CRUD-btn col-4">
            @* === CRUD 버튼 === *@
            @{Html.SetToolbar(0, true, "Search;Input;Edit;Delete;Save;Undo;Excel");}
        </div>

    </div>

    <div class="row mb-0">

        <div class="col-7 pr-1 mb-1">
            <div class="box mb-0">

                @(Html.DevExtreme().DataGrid()
                    .ID("WaterTestScheduleConfirmGrid")
                    .KeyExpr("confirm_no")
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .Height(250)
                    .ShowBorders(true)
                    .FocusedRowEnabled(true)
                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                    .ShowColumnLines(true)
                    .HoverStateEnabled(true)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .Columns(c =>
                    {
                        c.Add().DataField("confirm_no").Caption("승인번호");
                        c.Add().DataField("start_date").Caption("시작일자");
                        c.Add().DataField("end_date").Caption("종료일자");
                        c.Add().DataField("confirm_status_nm").Caption("상태");
                    })
                    .OnFocusedRowChanged("WaterTestScheduleConfirmFocusChanged")
                )

            </div>
        </div>

        <div class="col-5 pl-0 mb-1">

            <div class="box mb-0">

                <div class="divName mb-1">
                    <p>승인 정보</p>
                </div>

                <div class="row">

                    <div class="menuDiv col-5">

                        <form id="WaterTestScheduleConfirmWriteForm">

                            <input name="gubun" hidden="hidden" />

                            <div class="mb-1">

                                <div class="input-wrapper">
                                    <label class="col-4">승인번호</label>
                                    <div class="input-group col-7">
                                        <input type="text" class="form-control" name="confirm_no" autocomplete="off" readonly="readonly" />
                                    </div>
                                </div>

                                <div class="input-wrapper">
                                    <label class="col-4">시작일자</label>
                                    <div class="input-group col-7">
                                        <input type="text" class="form-control datepicker required" name="start_date" autocomplete="off" />
                                    </div>
                                </div>

                                <div class="input-wrapper">
                                    <label class="col-4">종료일자</label>
                                    <div class="input-group col-7">
                                        <input type="text" class="form-control datepicker required" name="end_date" autocomplete="off" />
                                    </div>
                                </div>

                                <div class="input-wrapper">
                                    <label class="col-4">상태</label>
                                    <div class="input-group col-7">
                                        <select class="form-control" name="confirm_status">
                                            @foreach (DataRow row in ((DataTable)Public_Function.GetMaster("공통코드", "D", "WT001")).Rows)
                                            {
                                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                                            }
                                        </select>
                                    </div>
                                </div>

                            </div>

                        </form>
                    </div>

                    <div class="col-7">

                        @(Html.DevExtreme().DataGrid()
                            .ID("WaterTestScheduleConfirmSignTable")
                            .ShowBorders(true)
                            .ShowColumnLines(true)
                            .ShowRowLines(true)
                            .FocusedRowEnabled(true)
                            .FocusedRowIndex(0)
                            .KeyExpr("sign_set_dt_id")
                            .OnCellClick("WaterTestScheduleConfirmSign")
                            .Height(205)
                            .Selection(s => s.Mode(SelectionMode.Single))
                            .Columns(columns =>
                            {
                                columns.Add()
                                    .DataField("displayfield")
                                    .Width("15%")
                                    .Caption("구분");
                                columns.Add()
                                    .DataField("sign_emp_nm")
                                    .Width("20%")
                                    .Caption("서명자");
                                columns.Add()
                                    .DataField("sign_time")
                                    .Caption("서명일자");
                                columns.Add()
                                    .AllowFiltering(false)
                                    .AllowSorting(false)
                                    .DataField("sign_image")
                                    .Name("sign_image")
                                    .Caption("서명")
                                    .Width("25%")
                                    .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                })
                            )

                    </div>

                </div>

            </div>

        </div>

        <div class="col-3">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("WaterTestScheduleGrid")
                    .KeyExpr("id")
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .Height(900)
                    .ShowBorders(true)
                    .FocusedRowEnabled(true)
                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                    .Selection(selection => selection.Mode(SelectionMode.Multiple))
                    .ShowColumnLines(true)
                    .HoverStateEnabled(true)
                    .ColumnAutoWidth(true)
                    .Columns(c =>
                    {
                        c.Add().DataField("water_gb_nm").Caption("구분");
                        c.Add().DataField("point_nm").Caption("포인트");
                        c.Add().DataField("remark").Caption("루프");
                        c.Add().DataField("schedule_date").Caption("일자");
                    })
                )
            </div>
        </div>

        <div id="WaterTestScheduleButtonDiv" class="col-1" style="padding-top:65px;">

            <button class="btn btn-sm btn-primary addBtn" onclick="WaterTestSchedule('IA')">
                <i class="fa fa-angle-double-right"></i>
                <span>&nbsp;전체</span>
            </button>

            <button class="btn btn-sm btn-primary addBtn" onclick="WaterTestSchedule('IS')">
                <i class="fa fa-angle-right"></i>
                <span>&nbsp;선택</span>
            </button>

            <button class="btn btn-sm btn-danger addBtn" onclick="WaterTestSchedule('DA')">
                <i class="fa fa-angle-double-left"></i>
                <span>&nbsp;전체</span>
            </button>

            <button class="btn btn-sm btn-danger addBtn" onclick="WaterTestSchedule('DS')">
                <i class="fa fa-angle-left"></i>
                <span>&nbsp;선택</span>
            </button>

        </div>

        <div class="col-8">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("WaterTestScheduleMatchGrid")
                    .KeyExpr("id")
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .Height(900)
                    .ShowBorders(true)
                    .FocusedRowEnabled(true)
                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                    .Selection(selection => selection.Mode(SelectionMode.Multiple))
                    .Export(export => export.Enabled(true))
                    .ShowColumnLines(true)
                    .HoverStateEnabled(true)
                    .Columns(c =>
                    {
                        c.Add().DataField("water_gb_nm").Caption("구분");
                        c.Add().DataField("point_nm").Caption("포인트");
                        c.Add().DataField("remark").Caption("루프");
                        c.Add().DataField("schedule_date").Caption("일자");
                        c.Add().DataField("schedule_status_nm").Caption("상태");
                        c.Add().DataField("test_no").Caption("의뢰번호");
                        c.Add().DataField("schedule_result").Caption("결과");
                    })
                    .OnToolbarPreparing("HideToolbarButton")
                )
            </div>
        </div>

    </div>

</div>