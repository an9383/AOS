@using System.Data
@using HACCP.Libs.Views

@{
    //*********************************************************
    // ▣ 페이지 공통 정의
    //*********************************************************

    //1. 페이지 접두어 지정
    var pagePrefix = ViewContext.RouteData.Values["action"].ToString();
    var pageControllerNm = ViewContext.RouteData.Values["controller"].ToString();

    ViewBag.Title = pagePrefix;
    Layout = null;
}

@{
    //*********************************************************
    // ▣ 페이지별 설정
    //*********************************************************

    // 1. View데이터 설정
    // 1.1. 검색객체
    var srch = ViewData["srch"] as HACCP.Models.Equipment.Notify.SrchParam;

    // 1.2. 좌측 Grid
    var mainGrid = Html.Raw(Json.Encode(ViewBag.mainGrid.Data));

    // 1.3. 우측 Form

    // 1.4. 코드성 데이터
    var codeStatus = (DataTable)ViewBag.le_repair_status;
    var equipPopupData = @Html.Raw(Json.Encode(ViewBag.equipPopupData.Data));
    var empPopupData = @Html.Raw(Json.Encode(ViewBag.empPopupData.Data));

}


<script id="@(pagePrefix)Js">
    // 0.공통변수 설정
    // 0.1. form변수
    var PagePrefix        = "@(pagePrefix)";                   //js사용, 페이지접두어
    var PageControllerNm  = "@(pageControllerNm)";     //js사용, 페이지컨트롤러명
    var FormNmSearch      = PagePrefix + "SearchForm";    // 폼명-검색용
    var FormNmWrite       = PagePrefix + "WriteForm";     // 폼명-등록용

    // 0.2 UtilView 객체 공통설정
    UtilView.m_controller = PageControllerNm;
    UtilView.m_actionPrefix = PagePrefix;

    // 1. 화면 Load 영역
    $(function () {
        // 1.1. 좌측 Grid 바인딩
        if (@mainGrid) {
                $("#"+PagePrefix+"Grid").dxDataGrid("instance").option("dataSource", JSON.parse(@mainGrid));
                $("#"+PagePrefix+"Grid").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#"+PagePrefix+"Grid").dxDataGrid("instance").option("focusedRowIndex", 0);
        }

        // 1.2. 검색 설정
        $('input:radio[name=rb_gb][value=@srch.rb_gb]', $('#'+FormNmSearch)).prop('checked', true);
        $('select[name=status]', $('#' + FormNmSearch)).val('@srch.status');

        //1.3. help팝업설정
        var popupColumns = {
            "equip"    : [{ dataField: "equip_cd", caption: "기계코드" }, { dataField: "equip_nm", caption: "기계명" }]
         ,  "employee":  [{ dataField: "emp_cd", caption: "사원코드" }, { dataField: "emp_nm", caption: "사원명" }, { dataField: "dept_cd", caption: "부서코드" }, { dataField: "dept_nm", caption: "부서명" }]

        };
        createPopup(PagePrefix+"Equip", "기계기구조회 조회", @equipPopupData, popupColumns.equip);
        createPopup(PagePrefix+"Emp", "사원 조회", @empPopupData, popupColumns.employee);

        //1.4 툴바 활성/비활성
        NotifyEditCheck(false, 'N');

        //1.5 event설정
        //1.5.1 검색
        $('input[name=rb_gb],input[name*=date], select[name=status]', $('#'+FormNmSearch)).change(function () {
            NotifySelect();
        });
        $('input[name=equipment]+div>button',$('#'+FormNmSearch)).click(function (event) {
            NotifyHelpPopUpSearch(event);
        });

        //1.5.2 form
        $('input[name=equip_cd]+div>button, input[name*=_emp_cd]+div>button', $('#'+FormNmWrite)).click(function (event) {
            NotifyHelpPopUpSearch(event);
        });

        //1.5.3 공통객체
        //datepicker
         $('.datepicker').datepicker({
            format: "yyyy-mm-dd",	//데이터 포맷 형식(yyyy : 년 mm : 월 dd : 일 )
            startDate: '-10y',	//달력에서 선택 할 수 있는 가장 빠른 날짜. 이전으로는 선택 불가능 ( d : 일 m : 달 y : 년 w : 주)
            endDate: '+10y',	//달력에서 선택 할 수 있는 가장 느린 날짜. 이후로 선택 불가 ( d : 일 m : 달 y : 년 w : 주)
            autoclose: true,	//사용자가 날짜를 클릭하면 자동 캘린더가 닫히는 옵션
            calendarWeeks: false, //캘린더 옆에 몇 주차인지 보여주는 옵션 기본값 false 보여주려면 true
            clearBtn: false, //날짜 선택한 값 초기화 해주는 버튼 보여주는 옵션 기본값 false 보여주려면 true
            //datesDisabled: ['2019-06-24', '2019-06-26'],//선택 불가능한 일 설정 하는 배열 위에 있는 format 과 형식이 같아야함.
            //daysOfWeekDisabled: [0, 6],	//선택 불가능한 요일 설정 0 : 일요일 ~ 6 : 토요일
            //daysOfWeekHighlighted: [3], //강조 되어야 하는 요일 설정
            disableTouchKeyboard: false,	//모바일에서 플러그인 작동 여부 기본값 false 가 작동 true가 작동 안함.
            immediateUpdates: false,	//사용자가 보는 화면으로 바로바로 날짜를 변경할지 여부 기본값 :false
            multidate: false, //여러 날짜 선택할 수 있게 하는 옵션 기본값 :false
            multidateSeparator: ",", //여러 날짜를 선택했을 때 사이에 나타나는 글짜 2019-05-01,2019-06-01
            templates: {
                leftArrow: '&laquo;',
                rightArrow: '&raquo;'
            }, //다음달 이전달로 넘어가는 화살표 모양 커스텀 마이징
            showWeekDays: true,// 위에 요일 보여주는 옵션 기본값 : true
            //title: "테스트",	//캘린더 상단에 보여주는 타이틀
            todayHighlight: true,	//오늘 날짜에 하이라이팅 기능 기본값 :false
            toggleActive: true,	//이미 선택된 날짜 선택하면 기본값 : false인경우 그대로 유지 true인 경우 날짜 삭제
            weekStart: 0,//달력 시작 요일 선택하는 것 기본값은 0인 일요일
            language: "ko"	//달력의 언어 선택, 그에 맞는 js로 교체해줘야한다.

        });//datepicker end


    });

    // 2. 검색영역
    // 2.1. Help popup
    // help Popup의 현재 선택된 InputName
    var NotifyHelpPopUpCurInputName = "";

    // help popup 공통 검색창 오픈
    function NotifyHelpPopUpSearch(e) {
        NotifyHelpPopUpCurInputName = $(e.target).parent().prev().attr('name');
        var popupId = "";

        switch (NotifyHelpPopUpCurInputName)
        {
            case "equipment":
            case "equip_cd":
                popupId = PagePrefix+"Equip";
                break;
            case "notify_emp_cd":
                popupId = PagePrefix+"Emp";
                break;
            default:
                popupId = "";
                break;
        }
        //console.log("poupId :" + popupId);
        if (popupId == "") {
            alert("(오류) popup ID 미설정 오류!");
        }
        $('#' + popupId + 'Popup').dxPopup("instance").show();
    }

    // help popup 이벤트 정의
    function NotifyEquipRowDblClick(selectedItems) {
        var data = selectedItems.data;

        if (NotifyHelpPopUpCurInputName == "equipment") {
            $("input[name="+NotifyHelpPopUpCurInputName+"]",$('#'+FormNmSearch)).val(data.equip_nm);
        } else if (NotifyHelpPopUpCurInputName == "equip_cd") {
            $("input[name=equip_cd]", $('#'+FormNmWrite)).val(data.equip_cd);
            $("input[name=equip_nm]",$('#'+FormNmWrite)).val(data.equip_nm);
        }
        $("#"+PagePrefix+"EquipPopup").dxPopup("instance").hide();
    }

    function NotifyEmpRowDblClick(selectedItems) {
        var data = selectedItems.data;
        var strIndex = NotifyHelpPopUpCurInputName.lastIndexOf("_emp_cd");

        if (strIndex > -1) {
            var inputPrefix = NotifyHelpPopUpCurInputName.substring(0, strIndex);
            var inputSubfix = NotifyHelpPopUpCurInputName.substring(strIndex);

            $('input[name='+inputPrefix+'_emp_cd]', $('#' + FormNmWrite)).val(data.emp_cd);
            $('input[name='+inputPrefix+'_emp_nm]', $('#' + FormNmWrite)).val(data.emp_nm);
        }
        $("#" + PagePrefix + "EmpPopup").dxPopup("instance").hide();

    }

    // 3. 툴바영역
    //조회
    function NotifySearch() {
        NotifySelect();
    }

    //입력
    function NotifyInput() {
        NotifyEditCheck(true, 'I');
        NotifyWriteFormClear();

        $.ajax({
            type: 'POST',
            url: UtilView.getActionUrl('GetSeqNo'),
            data: "edate="+$('input[name=edate]',$('#'+FormNmSearch)).val(),
            success: function (result) {
                if (JSON.parse(result[0]).sessionLoss) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                $('input[name=afterservice_no]', $('#' + FormNmWrite)).val(result);
            }
        });
    }
    //수정
    function NotifyEdit() {
        NotifyEditCheck(true,'U');
    }
    //삭제
    function NotifyDelete() {
        NotifyEditCheck(true, 'D');
        NotifyTrx(FormNmWrite, FormNmSearch);

    }
    //저장
    function NotifySave() {
        if (UtilView.checkValidForm(FormNmWrite)) {
            NotifyTrx(FormNmWrite, FormNmSearch);
        }
    }
    //취소
    function NotifyUndo() {
        NotifyEditCheck(false, 'N');
        NotifyFocusChanged();
    }

    // 프린트
    function NotifyPrint() {

    }

    // 엑셀다운로드
    function NotifyExcel() {

    }

    // 엑셀다운로드
    function NotifyFavorite() {

    }

    // 트랜잭션처리
    function NotifyTrx(formWriteId, formSearchId) {
        var form = $('#' + formWriteId)[0];
        var formData = new FormData(form);

        // please add form parameter When need to form parameter
        formData.append("edate", $('input[name=edate]',$('#'+formSearchId)).val());
        // formData 확인
        //for (var key of formData.keys()) { console.log("[" + PagePrefix + "]=> " + key + " : " + formData.get(key)); }
        $.ajax({
            type: 'POST',
            url: UtilView.getActionUrl('TRX'),
            data: formData,
            processData: false,
            contentType: false,
            success: function (result) {
                if (JSON.parse(result[0]).sessionLoss) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                } else {
                    alert(result);
                    console.log(result);
                }
                NotifySelect();
            }
        });
    }

    // 수정중인지 체크
    function NotifyEditCheck(nowEdit, status) {

        if (status != null && status != undefined) {
            $('input[type=hidden][name=row_status]',$('#'+FormNmWrite)).val(status);
        }
        if (nowEdit) {
            // 툴바 활성/비활성
            $('#'+PagePrefix+'Save,   #'+PagePrefix+'Undo').dxButton().parent().parent().removeClass("display-none");
            $('#'+PagePrefix+'Search, #'+PagePrefix+'Input,#'+PagePrefix+'Edit,#'+PagePrefix+'Delete').dxButton().parent().parent().addClass("display-none");

            //그리드 및 폼 활성/비활성
            $('#'+PagePrefix+'Grid').dxDataGrid("instance").option("disabled", true);
            $('input',   $('#' + FormNmWrite)).attr("disabled", false);
            $('textarea',$('#'+FormNmWrite)).attr("disabled", false);
        }
        else {
            // 툴바 활성/비활성
            $('#'+PagePrefix+'Save,#'+PagePrefix+'Undo').dxButton().parent().parent().addClass("display-none");
            $('#'+PagePrefix+'Search,#'+PagePrefix+'Input,#'+PagePrefix+'Edit,#'+PagePrefix+'Delete').dxButton().parent().parent().removeClass("display-none");

            //그리드 및 폼 활성/비활성
            $('#'+PagePrefix+'Grid').dxDataGrid("instance").option("disabled", false);
            $("input",$('#'+FormNmWrite)).attr("disabled", true);
            $("textarea",$('#'+FormNmWrite)).attr("disabled", true);
        }
    }

    // 4. 좌측 Grid
    // 4.1. 검색
    function NotifySelect() {
        NotifyWriteFormClear();
        NotifyEditCheck(false, 'N');

        var form = $('#'+FormNmSearch)[0];
        var formData = new FormData(form);

        $.ajax({
            type: 'POST',
            url: UtilView.getActionUrl('Select'),
            contentType: false,
            processData: false,
            data: formData,
            success: function (result) {
                if (result.length <= 0) {
                    $('#'+PagePrefix+'Grid').dxDataGrid("instance").option("dataSource", []);
                    $('#'+PagePrefix+'Grid').dxDataGrid("instance").option("focusedRowEnabled", false);
                    return;
                }
                //console.log(result);
                if (JSON.parse(result).sessionLoss) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }
                $('#'+PagePrefix+'Grid').dxDataGrid("instance").option("dataSource", JSON.parse(result));
                $('#'+PagePrefix+'Grid').dxDataGrid("instance").option("focusedRowEnabled", true);
                $('#'+PagePrefix+'Grid').dxDataGrid("instance").option("focusedRowIndex", 0);
            }
        });
    }

    // 3.2 Row focus changed
    function NotifyFocusChanged() {
        var gridId = PagePrefix+"Grid";

        var grid = $("#"+gridId).dxDataGrid("instance");
        var data = getGridRowByKey(gridId, grid.option("focusedRowKey"));

        NotifyWriteFormClear();

        // data 객체, 폼에 바인딩
        for (var key in data) {
            $('[name=' + key + ']',$('#'+FormNmWrite)).val(data[key]);
        }

        // 우측 gird바인딩
        //NotifySelectSub(gridId, PagePrefix + "SubGrid");
    }

    // 5. 우측 Form
    // 5.1. clear form
    function NotifyWriteFormClear() {
        $('#'+FormNmWrite)[0].reset();
        $("textarea",$('#'+FormNmWrite)).text("");
        //$("#NotifyWriteR2 input[name=newsGubun][value=1]").prop("checked", true);
    }

    // 우측 gird바인딩
    //5.2 조회 :우측 Grid ($기능입력$)
    //function NotifySelectSub(sGridId, tGridId) {
    //    var sGrid = $('#' + sGridId).dxDataGrid("instance");
    //    var gridData = getGridRowByKey(sGridId, sGrid.option("focusedRowKey"));
    //    var data = { afterservice_no: gridData.afterservice_no };

    //    $.ajax({
    //        type: 'POST',
    //        url: UtilView.getActionUrl('SelectSub'),
    //        data: data,
    //        success: function (result) {
    //            if (result[0] == "") clear();
    //            else {
    //                var jsonResult = JSON.parse(result);
    //                $('#' + tGridId).dxDataGrid("option", "dataSource", jsonResult);
    //            }
    //        }
    //    })
    //}
</script>

<!-- $Contents Wrapper-->
<div id="@(pagePrefix)">
    <!-- $DIv 팝업 선언부-->
    <div id="@(pagePrefix)EquipPopup"></div>
    <div id="@(pagePrefix)EmpPopup"></div>
       
    <!-- $title  -->
    @*<h4 class="divTitle">고장신고 등록</h4>*@

    @*<h4 class="divTitle float-left" style="margin-right:10px;margin-left:10px;">고장신고</h4>*@
    <div class="mainTop row">
        <!-- $검색폼-->
        <div class="col-8">
            <form id="@(pagePrefix)SearchForm">
                <div class="input-wrapper" @*style="border:1px blue solid;"*@>
                    <div class="col-5 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">기간구분</span>
                        </div>
                        <label class="p-1"></label>
                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="1" id="rb_gb1" name="rb_gb" />
                        </div>
                        <span class="form-control-sm"><label for="rb_gb1">신고일자</label></span>
                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="2" id="rb_gb2" name="rb_gb" />

                        </div>
                        <span class="form-control-sm"><label for="rb_gb2">처리일자</label></span>
                        <input type="text" class="form-control datepicker text-center" name="sdate" value="@srch.sdate">
                        <label class="p-1">~</label>
                        <input type="text" class="form-control input-sm datepicker text-center" name="edate" value="@srch.edate">
                    </div>
                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">상태</span>
                        </div>
                        <select class="form-control" name="status" value="">
                            @foreach (DataRow row in codeStatus.Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }                            
                        </select>
                    </div>
                    <div class="input-group input-group-sm col-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">설비</span>
                        </div>
                        <input type="text" class="form-control" name="equipment">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary" type="button">
                                <i class="fa fa-search"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <!-- test 2줄 : 검색영역이 2줄이상일때 주석풀고 적절히 내용입력-->
                @*<div class="input-wrapper" >
                        <div class="col-5 input-group input-group-sm">
                            <div class="input-group-prepend">
                                <div class="input-group-text">
                                    <input type="radio" value="1" id="rb_gb1" name="rb_gb" />
                                </div>
                            </div>
                            <span class="form-control-sm"><label for="rb_gb1">신고일자</label></span>
                            <div class="input-group-prepend">
                                <div class="input-group-text">
                                    <input type="radio" value="2" id="rb_gb2" name="rb_gb" />
                                </div>
                            </div>
                            <span class="form-control-sm"><label for="rb_gb2">처리일자</label></span>
                            <input type="text" class="form-control datepicker text-center" name="sdate" value="@srch.sdate">
                            <label class="col-1 form-text"> ~ </label>
                            <input type="text" class="form-control input-sm datepicker text-center" name="edate" value="@srch.edate">
                        </div>
                        <div class="input-group input-group-sm col-2">
                            <div class="input-group-prepend">
                                <span class="input-group-text">상태</span>
                            </div>
                            <select class="custom-select" name="status" value="">
                                @foreach (DataRow row in codeStatus.Rows)
                                {
                                    <option value="@row["keyfield"]">@row["displayfield"]</option>
                                }
                            </select>
                        </div>

                        <div class="input-group input-group-sm col-2">
                            <div class="input-group-prepend">
                                <span class="input-group-text">설비</span>
                            </div>
                            <input type="text" class="form-control" name="equipment">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button">찾기</button>
                            </div>
                        </div>
                    </div>*@

            </form>
        </div>
        <!-- $CRUD버튼-->
        <div class="CRUD-btn col-4">
            @* === CRUD 버튼 === *@
            @*@{ Html.RenderAction("SetToolbar", "Uc", new { toolbarIndex = 0, isUnAuthBtnRemove = false, visibleBtns = "*" }); }*@
            @{Html.SetToolbar(0, true, "*");}
            

            @* 예전 CRUD 버튼 code 주석처리
                    @(Html.DevExtreme().Toolbar()
                    .ID(pagePrefix+"Toolbar")
                    .Items(items =>
                    {
                        items.Add()
                            .Widget(w => w
                                .Button()
                                .Type(ButtonType.Default)
                                .StylingMode(ButtonStylingMode.Contained)
                                .ID(pagePrefix + "Search")
                                .Icon("search")
                                .Text("조회")
                                .OnClick(pagePrefix + "Search")
                            )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID(pagePrefix+"Input")
                        .Icon("plus")
                        .Text("입력")
                        .OnClick(pagePrefix+"Input")

                        )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID(pagePrefix + "Edit")
                        .Icon("edit")
                        .Text("수정")
                        .OnClick(pagePrefix + "Edit")
                        )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID(pagePrefix + "Delete")
                        .Icon("trash")
                        .Text("삭제")
                        .OnClick(pagePrefix + "Delete")
                        )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID(pagePrefix + "Save")
                        .Icon("save")
                        .Text("저장")
                        .OnClick(pagePrefix + "Save")
                        )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID(pagePrefix + "Undo")
                        .Icon("undo")
                        .Text("취소")
                        .OnClick(pagePrefix + "Undo")
                        )
                        .Location(ToolbarItemLocation.After);
                    })
                )*@
        </div>
    </div>

    <!-- $Contents Main-->
    <div class="row">
        <!-- $Contets Left-->
        <div class="col-8">
            <div class="box">
                @(Html.DevExtreme().DataGrid()
                .ID(pagePrefix + "Grid")
                .KeyExpr("afterservice_no")
                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                //.Height(600)
                .ShowBorders(true)
                //.Selection(s => s.Mode(SelectionMode.Single))
                .SearchPanel(searchPanel => searchPanel.Visible(true))
                .ShowColumnLines(true)
                .HoverStateEnabled(true)
                        .Columns(c =>
                        {
                            c.Add().DataField("afterservice_no").Caption("신고번호").Alignment(HorizontalAlignment.Center);
                            c.Add().DataField("equip_cd").Caption("설비코드").Alignment(HorizontalAlignment.Center);
                            c.Add().DataField("equip_nm").Caption("설비명").Alignment(HorizontalAlignment.Center);
                            c.Add().DataField("notify_date").Caption("신고일자").Alignment(HorizontalAlignment.Center);
                            c.Add().DataField("repair_status_nm").Caption("처리상태").Alignment(HorizontalAlignment.Center);
                        })
                    //.OnSelectionChanged("newsSelectionChanged")
                    .OnFocusedRowChanged(pagePrefix + "FocusChanged")
                    )
            </div>
        </div>
        <!-- $Contets Right-->
        <div class="col-4">
            <div class="box">
                <form id="@(pagePrefix)WriteForm">
                    <input type="hidden" name="row_status" />
                    <div class="divName margin-bottom">
                        <p>고장신고</p>
                    </div>

                    <div class="input-wrapper">
                        <label class="col-3">신고번호</label>
                        <div class="input-group col-4">
                            <input type="text" class="form-control col-12 required" name="afterservice_no">
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">설비코드</label>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="equip_cd" readonly>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="equip_nm" readonly>
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">신고자</label>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="notify_emp_cd" readonly>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>

                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="notify_emp_nm" readonly>
                            @*<div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" onclick="equipmentClearWorkRoomForm()">삭제</button>
                                </div>*@
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">신고일자</label>
                        <div class="input-group col-4">
                            <input type="text" class="form-control col-12 datepicker required" name="notify_date">
                        </div>
                    </div>

                    <div class="input-wrapper">
                        <label class="col-3">신고사유</label>
                        <div class="input-group col-8">
                            <textarea class="form-control" cols="100" rows="5" name="notify_reason"></textarea>
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">사전조치</label>
                        <div class="input-group col-8">
                            <textarea class="form-control" cols="100" rows="5" name="pre_fix"></textarea>
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>

</div>

