@using System.Data

@{
    //*********************************************************
    // ▣ 페이지 공통 정의
    //*********************************************************

    //1. 페이지 접두어 지정
    var pagePrefix = ViewContext.RouteData.Values["action"].ToString();
    var pageControllerNm = ViewContext.RouteData.Values["controller"].ToString();

    ViewBag.Title = pagePrefix;
    Layout = null;
}

@{
    //*********************************************************
    // ▣ 페이지별 설정
    //*********************************************************

    // 1. View데이터 설정
    // 1.1. 검색객체
    var srch = ViewData["srch"] as HACCP.Models.Equipment.PartsInOutRegi.SrchParam;

    // 1.2. 좌측 Grid
    var mainGrid = Html.Raw(Json.Encode(ViewBag.mainGrid.Data));

    // 1.3. 우측 Form

    // 1.4. 코드성 데이터
    var codeHistory_status = (DataTable)ViewBag.le_part_history_status;
    var codePart_gb = (DataTable)ViewBag.le_part_gb;
    var codeIn_out = (DataTable)ViewBag.le_inOut;

    // 1.5 codehelp 데이터
    var empPopupData = @Html.Raw(Json.Encode(ViewBag.empPopupData.Data));
    var partPopupData = @Html.Raw(Json.Encode(ViewBag.partPopupData.Data));
    var custPopupData = @Html.Raw(Json.Encode(ViewBag.custPopupData.Data));

}

<script id="@(pagePrefix)Js">
    // 0.공통변수 설정
    // 0.1. form변수
    var PagePrefix        = "@(pagePrefix)";                   //js사용, 페이지접두어
    var PageControllerNm  = "@(pageControllerNm)";     //js사용, 페이지컨트롤러명
    var FormNmSearch      = PagePrefix + "SearchForm";    // 폼명-검색용
    var FormNmWrite       = PagePrefix + "WriteForm";     // 폼명-등록용

    // 0.2 UtilView 객체 공통설정
    UtilView.m_controller = PageControllerNm;
    UtilView.m_actionPrefix = PagePrefix;

    // 1. 화면 Load 영역
    $(function () {
        // 1.1. 좌측 Grid 바인딩
        if (@mainGrid) {
                $("#"+PagePrefix+"Grid").dxDataGrid("instance").option("dataSource", JSON.parse(@mainGrid));
                $("#"+PagePrefix+"Grid").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#"+PagePrefix+"Grid").dxDataGrid("instance").option("focusedRowIndex", 0);
        }

        // 1.2. 검색 설정
        $('select[name=s_inout]', $('#' + FormNmSearch)).val('@srch.S_inOut');

        //1.3. help팝업설정
        var popupColumns = {
            "employee": [{ dataField: "emp_cd", caption: "사원코드" }, { dataField: "emp_nm", caption: "사원명" }, { dataField: "dept_cd", caption: "부서코드" }, { dataField: "dept_nm", caption: "부서명" }]
            ,"part"    : [{ dataField: "part_cd", caption: "부품코드" }, { dataField: "part_nm", caption: "부품명" }]
            ,"cust"    : [{ dataField: "cust_cd", caption: "거래처코드" }, { dataField: "cust_nm", caption: "거래처명" }]

        };
        createPopup(PagePrefix + "Emp", "사원 조회", @empPopupData, popupColumns.employee);
        createPopup(PagePrefix + "Part", "부품 조회", @partPopupData, popupColumns.part);
        createPopup(PagePrefix + "Cust", "거래처 조회", @custPopupData, popupColumns.cust);

        //1.4 툴바 활성/비활성
        PartsInOutRegiEditCheck(false, 'N');

        //1.5 event설정
        //1.5.1 검색
        $('input[name=s_inout],input[name*=date]', $('#'+FormNmSearch)).change(function () {
            PartsInOutRegiSelect();
        });

        $('input[name=s_part]', $('#' + FormNmSearch)).keyup(function () {
            PartsInOutRegiSelect();
        });

        $('input[name=s_part]+div>button',$('#'+FormNmSearch)).click(function (event) {
            PartsInOutRegiHelpPopUpSearch(event);
        });

        //1.5.2 form
        $('input[name*=_emp_cd]+div>button, input[name*=_cust_cd]+div>button, input[name=part_cd]+div>button', $('#'+FormNmWrite)).click(function (event) {
            PartsInOutRegiHelpPopUpSearch(event);
        });

        $('input[name=part_history_price],input[name=part_history_qty]', $('#' + FormNmWrite)).keyup(function (event) {
            // cost계산
            var evtName = $(event.target).attr('name');
            var evtVal = $(event.target).val();
            var destVal = 0;
            var tot = 0;
            destVal = (evtName == "part_history_price") ? $('input[name = part_history_qty]').val() : $('input[name = part_history_price]').val();

            tot = evtVal * destVal;            
            $('input[name=cost]', $('#' + FormNmWrite)).val(tot);
        });

        //1.5.3 공통객체
        //datepicker
         $('.datepicker').datepicker({
            format: "yyyy-mm-dd",	//데이터 포맷 형식(yyyy : 년 mm : 월 dd : 일 )
            startDate: '-10y',	//달력에서 선택 할 수 있는 가장 빠른 날짜. 이전으로는 선택 불가능 ( d : 일 m : 달 y : 년 w : 주)
            endDate: '+10y',	//달력에서 선택 할 수 있는 가장 느린 날짜. 이후로 선택 불가 ( d : 일 m : 달 y : 년 w : 주)
            autoclose: true,	//사용자가 날짜를 클릭하면 자동 캘린더가 닫히는 옵션
            calendarWeeks: false, //캘린더 옆에 몇 주차인지 보여주는 옵션 기본값 false 보여주려면 true
            clearBtn: false, //날짜 선택한 값 초기화 해주는 버튼 보여주는 옵션 기본값 false 보여주려면 true
            //datesDisabled: ['2019-06-24', '2019-06-26'],//선택 불가능한 일 설정 하는 배열 위에 있는 format 과 형식이 같아야함.
            //daysOfWeekDisabled: [0, 6],	//선택 불가능한 요일 설정 0 : 일요일 ~ 6 : 토요일
            //daysOfWeekHighlighted: [3], //강조 되어야 하는 요일 설정
            disableTouchKeyboard: false,	//모바일에서 플러그인 작동 여부 기본값 false 가 작동 true가 작동 안함.
            immediateUpdates: false,	//사용자가 보는 화면으로 바로바로 날짜를 변경할지 여부 기본값 :false
            multidate: false, //여러 날짜 선택할 수 있게 하는 옵션 기본값 :false
            multidateSeparator: ",", //여러 날짜를 선택했을 때 사이에 나타나는 글짜 2019-05-01,2019-06-01
            templates: {
                leftArrow: '&laquo;',
                rightArrow: '&raquo;'
            }, //다음달 이전달로 넘어가는 화살표 모양 커스텀 마이징
            showWeekDays: true,// 위에 요일 보여주는 옵션 기본값 : true
            //title: "테스트",	//캘린더 상단에 보여주는 타이틀
            todayHighlight: true,	//오늘 날짜에 하이라이팅 기능 기본값 :false
            toggleActive: true,	//이미 선택된 날짜 선택하면 기본값 : false인경우 그대로 유지 true인 경우 날짜 삭제
            weekStart: 0,//달력 시작 요일 선택하는 것 기본값은 0인 일요일
            language: "ko"	//달력의 언어 선택, 그에 맞는 js로 교체해줘야한다.

        });//datepicker end
    });

    // 2. 검색영역
    // 2.1. Help popup
    // help Popup의 현재 선택된 InputName
    var PartsInOutRegiHelpPopUpCurInputName = "";

    // help popup 공통 검색창 오픈
    function PartsInOutRegiHelpPopUpSearch(e) {
        PartsInOutRegiHelpPopUpCurInputName = $(e.target).parent().prev().attr('name');
        var popupId = "";

        switch (PartsInOutRegiHelpPopUpCurInputName)
        {
            case "s_part":
            case "part_cd":
                popupId = PagePrefix+"Part";
                break;
            case "part_history_emp_cd":
                popupId = PagePrefix+"Emp";
                break;
            case "part_buy_cust_cd":
            case "part_prod_cust_cd":
                popupId = PagePrefix + "Cust";
                break;
            default:
                popupId = "";
                break;
        }
        //console.log("poupId :" + popupId);
        if (popupId == "") {
            alert("(오류) popup ID 미설정 오류!");
        }
        $('#' + popupId + 'Popup').dxPopup("instance").show();
    }

    // help popup 이벤트 정의
    function PartsInOutRegiPartRowDblClick(selectedItems) {
        var data = selectedItems.data;

        if (PartsInOutRegiHelpPopUpCurInputName == "s_part") {
            $("input[name="+PartsInOutRegiHelpPopUpCurInputName+"]",$('#'+FormNmSearch)).val(data.part_cd);
        } else if (PartsInOutRegiHelpPopUpCurInputName == "part_cd") {
            $("input[name=" + PartsInOutRegiHelpPopUpCurInputName + "]", $('#' + FormNmWrite)).val(data.part_cd);
            $("input[name=part_nm]", $('#' + FormNmWrite)).val(data.part_nm);
        }
        $("#"+PagePrefix+"PartPopup").dxPopup("instance").hide();
    }

    function PartsInOutRegiEmpRowDblClick(selectedItems) {
        var data = selectedItems.data;
        var strIndex = PartsInOutRegiHelpPopUpCurInputName.lastIndexOf("_emp_cd");

        if (strIndex > -1) {
            var inputPrefix = PartsInOutRegiHelpPopUpCurInputName.substring(0, strIndex);
            var inputSubfix = PartsInOutRegiHelpPopUpCurInputName.substring(strIndex);

            $('input[name='+inputPrefix+'_emp_cd]', $('#' + FormNmWrite)).val(data.emp_cd);
            $('input[name='+inputPrefix+'_emp_nm]', $('#' + FormNmWrite)).val(data.emp_nm);
        }
        $("#" + PagePrefix + "EmpPopup").dxPopup("instance").hide();

    }

    function PartsInOutRegiCustRowDblClick(selectedItems) {
        var data = selectedItems.data;
        var strIndex = PartsInOutRegiHelpPopUpCurInputName.lastIndexOf("_cust_cd");

        if (strIndex > -1) {
            var inputPrefix = PartsInOutRegiHelpPopUpCurInputName.substring(0, strIndex);
            var inputSubfix = PartsInOutRegiHelpPopUpCurInputName.substring(strIndex);

            $('input[name=' + inputPrefix + '_cust_cd]', $('#' + FormNmWrite)).val(data.cust_cd);
            $('input[name=' + inputPrefix + '_cust_nm]', $('#' + FormNmWrite)).val(data.cust_nm);
        }
        $("#" + PagePrefix + "CustPopup").dxPopup("instance").hide();
    }

    // 3. 툴바영역
    //조회
    function PartsInOutRegiSearch() {
        PartsInOutRegiSelect();
    }

    //입력
    function PartsInOutRegiInput() {
        PartsInOutRegiEditCheck(true, 'I');
        PartsInOutRegiWriteFormClear();

    }
    //수정
    function PartsInOutRegiEdit() {
        PartsInOutRegiEditCheck(true,'U');
    }
    //삭제
    function PartsInOutRegiDelete() {
        PartsInOutRegiEditCheck(true, 'D');
        PartsInOutRegiTrx(FormNmWrite, FormNmSearch);

    }
    //저장
    function PartsInOutRegiSave() {
        if (UtilView.checkValidForm(FormNmWrite)) {
            PartsInOutRegiTrx(FormNmWrite, FormNmSearch);
        }
    }
    //취소
    function PartsInOutRegiUndo() {
        PartsInOutRegiEditCheck(false, 'N');
        PartsInOutRegiFocusChanged();
    }

    // 트랜잭션처리
    function PartsInOutRegiTrx(formWriteId, formSearchId) {
        var form = $('#' + formWriteId)[0];
        var formData = new FormData(form);

        //UtilView.dataGridTRX(formData, function(){PartsInOutRegiSelect();});
        UtilView.dataGridTRX(formData, () => PartsInOutRegiSelect() );
    }

    // 수정중인지 체크
    function PartsInOutRegiEditCheck(nowEdit, status) {

        if (status != null && status != undefined) {
            $('input[type=hidden][name=row_status]',$('#'+FormNmWrite)).val(status);
        }
        if (nowEdit) {
            // 툴바 활성/비활성
            $('#'+PagePrefix+'Save,   #'+PagePrefix+'Undo').dxButton().parent().parent().removeClass("display-none");
            $('#'+PagePrefix+'Search, #'+PagePrefix+'Input,#'+PagePrefix+'Edit,#'+PagePrefix+'Delete').dxButton().parent().parent().addClass("display-none");

            //그리드 및 폼 활성/비활성
            $('#'+PagePrefix+'Grid').dxDataGrid("instance").option("disabled", true);
            $('input',   $('#' + FormNmWrite)).attr("disabled", false);
            $('textarea',$('#'+FormNmWrite)).attr("disabled", false);
        }
        else {
            // 툴바 활성/비활성
            $('#'+PagePrefix+'Save,#'+PagePrefix+'Undo').dxButton().parent().parent().addClass("display-none");
            $('#'+PagePrefix+'Search,#'+PagePrefix+'Input,#'+PagePrefix+'Edit,#'+PagePrefix+'Delete').dxButton().parent().parent().removeClass("display-none");

            //그리드 및 폼 활성/비활성
            $('#'+PagePrefix+'Grid').dxDataGrid("instance").option("disabled", false);
            $("input",$('#'+FormNmWrite)).attr("disabled", true);
            $("textarea",$('#'+FormNmWrite)).attr("disabled", true);
        }
    }

    // 4. 좌측 Grid
    // 4.1. 검색
    function PartsInOutRegiSelect() {
        // form claear
        PartsInOutRegiWriteFormClear();
        // edit 해제
        PartsInOutRegiEditCheck(false, 'N');

       // 메인Grid
       // var gridOption = { "focusedRowEnabled": true, "focusedRowIndex": 0 }
       // var gridOption = { "focusedRowEnabled": true };
       UtilView.dataGridSelect(PagePrefix + 'Grid', FormNmSearch);
    }

    // 3.2 Row focus changed
    function PartsInOutRegiFocusChanged() {
        // datagrid 폼바인딩
        var gridId = PagePrefix+"Grid";
        UtilView.setDataGridFormBind(gridId, FormNmWrite);

        // 우측 gird바인딩
        //PartsInOutRegiSelectSub(gridId, PagePrefix + "SubGrid");
    }

    // 5. 우측 Form
    // 5.1. clear form
    function PartsInOutRegiWriteFormClear() {
        $('#'+FormNmWrite)[0].reset();
        $("textarea",$('#'+FormNmWrite)).text("");

        //sub그리드 초기화
        //var gridIds = PagePrefix + "SubGrid";
        //UtilView.setDataGridFromJson(gridIds, "");
    }

    // 우측 gird바인딩
    //5.2 조회 :우측 Grid (사용설비현황)    
    //function PartsInOutRegiSelectSub(sGridId, tGridId) {
    //    var sGrid = $('#' + sGridId).dxDataGrid("instance");
    //    var gridData = getGridRowByKey(sGridId, sGrid.option("focusedRowKey"));
    //    var data = { rowkey: gridData.part_cd };

    //    //var gridOption = { "focusedRowEnabled": true, "focusedRowIndex": 0 }
    //    UtilView.dataGridSimpleSelect(tGridId, data, 'SelectSub');
    //}

</script>

<!-- $Contents Wrapper-->
<div id="@(pagePrefix)">
    <!-- $DIv 팝업 선언부-->
    <div id="@(pagePrefix)PartPopup"></div>
    <div id="@(pagePrefix)EmpPopup"></div>
    <div id="@(pagePrefix)CustPopup"></div>

    <!-- $title  -->
    <h4 class="divTitle">부품 입출고 관리</h4>

    <div class="mainTop">
        <!-- $검색폼-->
        <form id="@(pagePrefix)SearchForm">
            <div class="input-wrapper">
                <label class="col-1">입/출고</label>
                <div class="input-group col-1">
                    <select class="form-control" name="s_inout" value="">
                        @foreach (DataRow row in codeIn_out.Rows)
                        {
                            <option value="@row["keyfield"]">@row["displayfield"]</option>
                        }
                    </select>
                </div>
                <label class="col-1">일자</label>
                <div class="input-group col-2">
                    @*<input type="text" class="form-control col-3 datepicker" name="sdate" value="@DateTime.Today.AddDays(-(DateTime.Today.Day-1)).ToShortDateString()" onchange="searchNesearchNotifyws()">*@
                    <input type="text" class="form-control datepicker" name="s_sdate" value="@srch.S_sdate">
                    <label class="col-1">~</label>
                    @*<input type="text" class="form-control col-3 datepicker" name="edate" value="@DateTime.Today.ToShortDateString()" onchange="NotifySelect()">*@
                    <input type="text" class="form-control datepicker" name="e_edate" value="@srch.S_edate">
                </div>

                <label class="col-1">부품</label>
                <div class="input-group col-2">
                    <input type="text" class="form-control" name="s_part" value="@srch.S_part">
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="button">찾기</button>
                    </div>
                </div>
            </div>

        </form>

        <!-- $CRUD버튼-->
        <div class="CRUD-btn">
            @* === CRUD 버튼 === *@
            @(Html.DevExtreme().Toolbar()
                    .ID(pagePrefix+"Toolbar")
                    .Items(items =>
                    {
                        items.Add()
                            .Widget(w => w
                                .Button()
                                .Type(ButtonType.Default)
                                .StylingMode(ButtonStylingMode.Contained)
                                .ID(pagePrefix + "Search")
                                .Icon("search")
                                .Text("조회")
                                .OnClick(pagePrefix + "Search")
                            )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID(pagePrefix+"Input")
                        .Icon("plus")
                        .Text("입력")
                        .OnClick(pagePrefix+"Input")
                        )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID(pagePrefix + "Edit")
                        .Icon("edit")
                        .Text("수정")
                        .OnClick(pagePrefix + "Edit")
                        )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID(pagePrefix + "Delete")
                        .Icon("trash")
                        .Text("삭제")
                        .OnClick(pagePrefix + "Delete")
                        )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID(pagePrefix + "Save")
                        .Icon("save")
                        .Text("저장")
                        .OnClick(pagePrefix + "Save")
                        )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID(pagePrefix + "Undo")
                        .Icon("undo")
                        .Text("취소")
                        .OnClick(pagePrefix + "Undo")
                        )
                        .Location(ToolbarItemLocation.After);
                    })
                )
        </div>
    </div>

    <!-- $Contents Main-->
    <div class="row">
        <!-- $Contets Left-->
        <div class="col-8">
            <div class="box">
                @(Html.DevExtreme().DataGrid()
                        .ID(pagePrefix + "Grid")
                        .KeyExpr("part_history_id")
                        .ColumnAutoWidth(true)
                        .ShowBorders(true)
                        //.Selection(s => s.Mode(SelectionMode.Single))
                        .HoverStateEnabled(true)
                        .Columns(c =>
                        {
                            c.Add().DataField("part_gb_nm").Caption("입/출고 구분명");
                            c.Add().DataField("part_cd").Caption("부품코드");
                            c.Add().DataField("part_nm").Caption("부품명");
                            c.Add().DataField("part_history_qty").Caption("입/출고수");
                            c.Add().DataField("part_history_price").Caption("단가");
                            c.Add().DataField("cost").Caption("금액");
                            c.Add().DataField("part_inout_date").Caption("입/출고일자");
                        })
                    //.OnSelectionChanged("newsSelectionChanged")
                    .OnFocusedRowChanged(pagePrefix + "FocusChanged")
                    )
            </div>
        </div>
        <!-- $Contets Right-->
        <div class="col-4">
            <div class="box">
                <form id="@(pagePrefix)WriteForm">
                    <input type="hidden" name="row_status" />
                    <input type="hidden" name="part_history_id" />

                    <div class="divName margin-bottom">
                        <p>부품 입/출고 등록</p>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">입/출고 구분</label>
                        <div class="input-group col-4">
                            <select class="form-control required" name="part_gb" value="">
                                @foreach (DataRow row in codePart_gb.Rows)
                                {
                                    <option value="@row["keyfield"]">@row["displayfield"]</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">부품</label>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="part_cd" readonly>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button">찾기</button>
                            </div>
                        </div>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="part_nm" readonly>
                            @*<div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" onclick="equipmentClearWorkRoomForm()">삭제</button>
                                </div>*@
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">입/출고 일자</label>
                        <input type="text" class="form-control col-4 datepicker required" name="part_inout_date">
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">입/출고자</label>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="part_history_emp_cd" readonly>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button">찾기</button>
                            </div>
                        </div>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="part_history_emp_nm" readonly>
                            @*<div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" onclick="equipmentClearWorkRoomForm()">삭제</button>
                                </div>*@
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">입/출고수</label>
                        <div class="input-group col-4">
                            <input type="number" class="form-control required" name="part_history_qty">
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">단가</label>
                        <div class="input-group col-4">
                            <input type="number" class="form-control required" name="part_history_price" >
                        </div>
                        <div class="input-group col-4">
                            <input type="number" class="form-control required" name="cost" readonly>
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">정상/기타 구분</label>
                        <div class="input-group col-4">
                            <select class="form-control required" name="part_history_status" value="">
                                @foreach (DataRow row in codeHistory_status.Rows)
                                {
                                    <option value="@row["keyfield"]">@row["displayfield"]</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">거래처</label>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="part_buy_cust_cd" readonly>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button">찾기</button>
                            </div>
                        </div>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="part_buy_cust_nm" readonly>
                            @*<div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" onclick="equipmentClearWorkRoomForm()">삭제</button>
                                </div>*@
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">제조처</label>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="part_prod_cust_cd" readonly>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button">찾기</button>
                            </div>
                        </div>
                        <div class="input-group col-4">
                            <input type="text" class="form-control required" name="part_prod_cust_nm" readonly>
                            @*<div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" onclick="equipmentClearWorkRoomForm()">삭제</button>
                                </div>*@
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">제조일자</label>
                        <input type="text" class="form-control col-4 datepicker required" name="part_prod_date">
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">제조번호</label>
                        <div class="input-group col-8">
                            <input type="text" class="form-control col-12 required" name="part_prod_num">
                        </div>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">비고</label>
                        <div class="input-group col-8">
                            <textarea class="form-text" cols="100" rows="5" name="part_history_remark"></textarea>
                        </div>
                    </div>
                </form>
            </div>

        </div>

    </div>

</div>

