@using System.Data
@using HACCP.Libs
@using HACCP.Libs.Views

@{
    var pagePrefix = ViewContext.RouteData.Values["action"].ToString();
    var pageControllerNm = ViewContext.RouteData.Values["controller"].ToString();

    ViewBag.Title = pagePrefix;
    Layout = null;

    //var venderBuy = @Html.Raw(Json.Encode(ViewBag.venderBuy.Data));
    //var itemMaker = @Html.Raw(Json.Encode(ViewBag.itemMaker.Data));
}

@*시험진행단계*@

<script id="@(pagePrefix)Js">

    var _testProgressStatusIsEditing = false;

    $(function () {
        /// 팝업설정
        // 필요시, 주석해지
        @*var TestProgressStatusPopupColumns = {
            "testItem": [{ dataField: "item_cd", caption: "품목코드" }
                , { dataField: "item_nm", caption: "품목명" }
                , { dataField: "process_nm", caption: "공정" }
                , { dataField: "test_type_nm", caption: "시험종류" }
                , { dataField: "test_standard_nm", caption: "규격" }
                , { dataField: "item_form_nm", caption: "제형" }],
            "venderBuy": [{ dataField: "vender_cd", caption: "구입업체코드" }
                , { dataField: "vender_nm", caption: "구입업체명" }],
            "itemMaker": [{ dataField: "vender_cd", caption: "원자재공급처코드" }
                , { dataField: "vender_nm", caption: "원자재공급처명" }]
        };

        createPopup("TestProgressStatusItem", "시험품목 조회", [], TestProgressStatusPopupColumns.testItem);
        createPopup("TestProgressStatusVender", "구입업체 조회", @venderBuy, TestProgressStatusPopupColumns.venderBuy);
        createPopup("TestProgressStatusMaker", "원자재공급처 조회", @itemMaker, TestProgressStatusPopupColumns.itemMaker);*@

        // 시험종류 셀렉트 박스 값에 따라 의뢰품목 팝업 그리드 데이터 변경
        //$("#TestProgressStatusItemPopup").dxPopup({
        //    onShown: function (e) {

        //        var test_type = $("#testProgressStatusWriteForm select[name=test_type]").val();

        //        $.ajax({
        //            type: 'GET',
        //            url: '/TestReq/TestProgressStatusSelectTestItemPopup',
        //            data: {
        //                test_type: test_type
        //            },
        //            dataType: "json",
        //            async: false,
        //            success: function (result) {

        //                try {
        //                    var jsonData = JSON.parse(result);
        //                    $("#TestProgressStatusItem_gridContainer").dxDataGrid("option", "dataSource", jsonData);
        //                }
        //                catch (e) {
        //                    $("#TestProgressStatusItem_gridContainer").dxDataGrid("option", "dataSource", []);
        //                }

        //            }
        //        })
        //    }
        //});

        //$('input[name=item_cd]+div>button'
        //    + ', input[name=cust_cd]+div>button'
        //    + ', input[name=material_maker_cd]+div>button'
        //    , $('#' + "testProgressStatusWriteForm")).click(function (event) {
        //    testProgressStatusPopUpSearch(event);
        //});

        // 탭메뉴
        // 필요시 주석해지
        //menutab('TestProgressStatusTab', 'TestProgressStatusTabContent', 1);

        $('#TestProgressStatus .datepicker').datepicker({
            format: "yyyy-mm-dd",	//데이터 포맷 형식(yyyy : 년 mm : 월 dd : 일 )
            clearBtn: false, //날짜 선택한 값 초기화 해주는 버튼 보여주는 옵션 기본값 false 보여주려면 true
            autoclose: true,
            templates: {
                leftArrow: '&laquo;',
                rightArrow: '&raquo;'
            }, //다음달 이전달로 넘어가는 화살표 모양 커스텀 마이징
            todayHighlight: true,	//오늘 날짜에 하이라이팅 기능 기본값 :false
            weekStart: 0,//달력 시작 요일 선택하는 것 기본값은 0인 일요일
            language: "ko"	//달력의 언어 선택, 그에 맞는 js로 교체해줘야한다.
        });

        TestProgressStatusEditCheck(true, 'N');

        $("#TestProgressStatusSearchForm input[name=de_SDate]").datepicker("update", '@DateTime.Now.AddMonths(-1).ToShortDateString()');
        $("#TestProgressStatusSearchForm input[name=de_EDate]").datepicker("update", '@DateTime.Now.ToShortDateString()');

        // 프로그램별 함수 정의
        TestProgressStatusSearch();

    });

    // 수정중인지 체크
    function TestProgressStatusEditCheck(nowEdit, status) {

        //UtilView.setActiveElement(nowEdit
        //    , status
        //    , "TestProgressStatusToolbar"
        //    , "TestProgressStatusGrid"
        //    , "TestProgressStatusWriteForm"
        //    , ""
        //);

        UtilView.setActiveElementFormId(nowEdit, status, "TestProgressStatusWriteForm", "")

        _testProgressStatusIsEditing = nowEdit;

        $("#TestProgressStatusWriteForm input[name=gubun]").val(status);
    }

    // 시험의뢰 그리드 로우 하이라이트
    function TestProgressStatusHighlightRow(e) {

        if (e.rowType === "data" && e.data.hb_ck === "Y") {             // 허벌라이프 전용원료
            e.rowElement[0].style.backgroundColor = 'greenyellow';
        }
        else if (e.rowType === "data" && e.data.test_status === "14") { // 미생물시험완료
            e.rowElement[0].style.backgroundColor = 'orangered';
        }
    }

    // 시험의뢰 그리드 셀 하이라이트
    function TestProgressStatusHighlightCell(cellInfo) {

        if (cellInfo.rowType == "data" && cellInfo.column.dataField === 'test_type_nm') {

            if (cellInfo.data.test_type === '1') {          // 원료시험
                cellInfo.cellElement[0].style.backgroundColor = 'lightcyan';
            } else if (cellInfo.data.test_type === '2') {   // 자재
                cellInfo.cellElement[0].style.backgroundColor = 'khaki';
            } else if (cellInfo.data.test_type === '3') {   // 반제품
                cellInfo.cellElement[0].style.backgroundColor = 'palegreen';
            } else if (cellInfo.data.test_type === '4') {   // 용출시험
                cellInfo.cellElement[0].style.backgroundColor = 'lightsalmon';
            } else if (cellInfo.data.test_type === '5') {   // 재포장
                cellInfo.cellElement[0].style.backgroundColor = 'lightgoldenrodyellow';
            } else if (cellInfo.data.test_type === '6') {   // 포장
                cellInfo.cellElement[0].style.backgroundColor = 'navajowhite';
            } else if (cellInfo.data.test_type === '7') {   // 출하
                cellInfo.cellElement[0].style.backgroundColor = 'gray';
            } else if (cellInfo.data.test_type === '8') {   // 정제수
                cellInfo.cellElement[0].style.backgroundColor = 'darkcyan';
            } else if (cellInfo.data.test_type === '9') {   // 청정도
                cellInfo.cellElement[0].style.backgroundColor = 'skyblue';
            }
        }
        else if (cellInfo.rowType == "data" && cellInfo.column.dataField === 'test_status_nm') {

            if (cellInfo.data.test_status === '0') {            // ___
                //cellInfo.cellElement[0].style.backgroundColor = 'lightblue';
            } else if (cellInfo.data.test_status === '1') {     // 의뢰
                cellInfo.cellElement[0].style.backgroundColor = 'silver';
            } else if (cellInfo.data.test_status === '2') {     // 접수
                cellInfo.cellElement[0].style.backgroundColor = 'khaki';
            } else if (cellInfo.data.test_status === '3') {     // 채취지시
                cellInfo.cellElement[0].style.backgroundColor = 'navajowhite';
            } else if (cellInfo.data.test_status === '4') {     // 채취중
                cellInfo.cellElement[0].style.backgroundColor = 'gray';
            } else if (cellInfo.data.test_status === '5') {     // 검체채취
                cellInfo.cellElement[0].style.backgroundColor = 'paleturquoise';
            } else if (cellInfo.data.test_status === '6') {     // 시험중
                cellInfo.cellElement[0].style.backgroundColor = 'thistle';
            } else if (cellInfo.data.test_status === '7') {     // 시험완료
                cellInfo.cellElement[0].style.backgroundColor = 'cornflowerblue';
            } else if (cellInfo.data.test_status === '8') {     // 확인
                cellInfo.cellElement[0].style.backgroundColor = 'palegreen';
            } else if (cellInfo.data.test_status === '9') {     // 승인

                if (cellInfo.data.test_result_yn === 'Y') {             // 적합 판정
                    cellInfo.cellElement[0].style.backgroundColor = 'limegreen';
                } else if (cellInfo.data.test_result_yn === 'N') {      // 부적합 판정
                    cellInfo.cellElement[0].style.backgroundColor = 'lightcoral';
                } else if (cellInfo.data.test_result_yn === 'C') {      // 조건부 적합
                    cellInfo.cellElement[0].style.backgroundColor = 'greenyellow';
                }

            } else if (cellInfo.data.test_status === '10') {    // 통보
                cellInfo.cellElement[0].style.backgroundColor = 'tan';
            } else if (cellInfo.data.test_status === '11') {    // 출하
                cellInfo.cellElement[0].style.backgroundColor = 'lightslategray';
            } else if (cellInfo.data.test_status === '12') {    // 일정
                cellInfo.cellElement[0].style.backgroundColor = 'pink';
            } else if (cellInfo.data.test_status === '13') {    // 의뢰취소
                cellInfo.cellElement[0].style.backgroundColor = 'silver';
                cellInfo.cellElement[0].style.fontColor = 'crimson';
            } else if (cellInfo.data.test_status === '14') {    // 미생물시험완료
                cellInfo.cellElement[0].style.backgroundColor = 'goldenrod';
            }
        }
    }


    //#region 팝업 관련

    //var TestProgressStatusHelpPopUpCurInputName = "";

    //function TestProgressStatusPopUpSearch(e) {
    //    TestProgressStatusHelpPopUpCurInputName = UtilView.getParentAttrValByClass(e, ".input-group-append", ".form-control", "name");
    //    var popupId = "";

    //    switch (TestProgressStatusHelpPopUpCurInputName) {
    //        case "item_cd":
    //            popupId = "TestProgressStatusItem";
    //            break;
    //        case "cust_cd":
    //            popupId = "TestProgressStatusVender";
    //            break;
    //        case "material_maker_cd":
    //            popupId = "TestProgressStatusMaker";
    //            break;
    //        default:
    //            popupId = "";
    //            break;
    //    }

    //    if (popupId == "") {
    //        alert("(오류) popup ID 미설정 오류!");
    //    }
    //    $('#' + popupId + 'Popup').dxPopup("instance").show();
    //}

    //function TestProgressStatusItemRowDblClick(selectedItems) {
    //    var data = selectedItems.data;

    //    $("input[name=" + TestProgressStatusHelpPopUpCurInputName + "]", $('#' + "TestProgressStatusWriteForm")).val(data.item_cd);
    //    $("input[name=item_nm]", $('#' + "TestProgressStatusWriteForm")).val(data.item_nm);
    //    $("select[name=process_cd]", $('#' + "TestProgressStatusWriteForm")).val(data.process_cd);

    //    $("#TestProgressStatusItemPopup").dxPopup("instance").hide();
    //}

    //function TestProgressStatusVenderRowDblClick(selectedItems) {
    //    var data = selectedItems.data;

    //    $("input[name=" + TestProgressStatusHelpPopUpCurInputName + "]", $('#' + "TestProgressStatusWriteForm")).val(data.vender_cd);
    //    $("input[name=cust_nm]", $('#' + "TestProgressStatusWriteForm")).val(data.vender_nm);

    //    $("#TestProgressStatusVenderPopup").dxPopup("instance").hide();
    //}

    //function TestProgressStatusMakerRowDblClick(selectedItems) {
    //    var data = selectedItems.data;

    //    $("input[name=" + TestProgressStatusHelpPopUpCurInputName + "]", $('#' + "TestProgressStatusWriteForm")).val(data.vender_cd);
    //    $("input[name=material_maker_nm]", $('#' + "TestProgressStatusWriteForm")).val(data.vender_nm);

    //    $("#TestProgressStatusMakerPopup").dxPopup("instance").hide();
    //}

    //#endregion


    //#region 툴바 클릭 이벤트 관련

    // 조회
    function TestProgressStatusSearch() {

        var form = $('#TestProgressStatusSearchForm');

        $.ajax({
            type: 'GET',
            url: '/QualityControl/TestProgressStatusSelect',
            data: form.serialize(),
            processData: true,
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            success: function (result) {

                try {
                    var jsonData = JSON.parse(result=="" ? null : result);
                    var grid = $("#TestProgressStatusGrid").dxDataGrid("instance");
                    grid.option("dataSource", jsonData);
                } catch (e) {
                    $("#TestProgressStatusGrid").dxDataGrid("option", "dataSource", []);
                }
            }
        })

        //UtilView.dataGridSelect('TestProgressStatusGrid', 'TestProgressStatusSearchForm');
    }

    // 출력, 미리보기
    function TestProgressStatusPrint() {
        // <report pre check>
        var formId = "TestProgressStatusSearchForm";
        var objForm = $("#" + formId);

        var spParams = new Array(7);
        spParams[0] = "date_option:" + $("input[name=rg_ReqorRec]:checked", objForm).val();
        spParams[1] = "start_date:" + $("input[name=de_SDate]", objForm).val();
        spParams[2] = "end_date:" + $("input[name=de_EDate]", objForm).val();
        spParams[3] = "test_type:" + $("select[name=le_test_type]", objForm).val();
        spParams[4] = "test_status:" + $("select[name=le_test_status]", objForm).val();
        spParams[5] = "search_gubun:" + $("select[name=ce_gubun_number]", objForm).val();
        spParams[6] = "search_number:" + $("input[name=te_number]", objForm).val();
        var spParamString = spParams.join(";");

        var select_test_type = $("select[name=le_test_type]", objForm).val();//타이틀명이 달라지게 된다. 매개변수로 타이틀명을 보내준다.
        var maintitle_nm = "";//메인타이틀명
        var start_date_nm = "";//입고/제조일자 타이틀명
        var item_nm = "";//품목명타이틀명
        var start_qty_nm = "";//수량타이틀명
        var cust_nm = "";//제조공정/구매처 타이틀명

        if (select_test_type == "1") {
            maintitle_nm = "원료시험접수 및 성적현황";
        }
        else if (select_test_type == "2") {
            maintitle_nm = "자재시험접수 및 성적현황";
        }
        else if (select_test_type == "3") {
            maintitle_nm = "반제품시험접수 및 성적현황";
        }
        else if (select_test_type == "4") {
            maintitle_nm = "용출시험접수 및 성적현황";
        }
        else {
            maintitle_nm = "시험접수 및 성적현황";
        }

        if (select_test_type == "1" || select_test_type == "2") {
            start_date_nm = "입고일";
            item_nm = "원부자재명";
            start_qty_nm = "입고수량";
            cust_nm = "구매처";
        }
        else if (select_test_type == "3" || select_test_type == "4") {
            start_date_nm = "제조일자";
            item_nm = "제품명";
            start_qty_nm = "제조수량";
            cust_nm = "제조공정";
        }
        else {
            start_date_nm = "입고/제조일";
            item_nm = "원부자재/제품명";
            start_qty_nm = "입고/제조수량";
            cust_nm = "구매처/공정명";
        }

        var sdate = new Date($("input[name=de_SDate]", objForm).val()).format("yyyy 년 MM 월 dd 일");
        var edate = new Date($("input[name=de_EDate]", objForm).val()).format("yyyy 년 MM 월 dd 일");
        var searchName = $('input[name=rg_ReqorRec]:checked', objForm).parents("div").next().children().html();


        var subParams  = "Maintitle="+maintitle_nm+";";
        subParams += "Start_date_M=" + start_date_nm + ";";
        subParams += "Item_nm_M=" + item_nm + ";";
        subParams += "Start_qty_M=" + start_qty_nm + ";";
        subParams += "Cust_nm_M=" + cust_nm + ";";
        subParams += "SearchTitle=" + searchName + ";";
        subParams += "SDate=" + sdate + ";";
        subParams += "EDate=" + edate ;

        // </report pre check>

        // report 출력 객체 생성
        var report = new ReportHelper($(event.target));

        report.addParam({
            objFile: { path: "QualityControl", RptFileName: "testProgressStatusCR" },
            objSp: { SpName: "sp_TestProgressStatus", gubun: "R", reportParam: spParamString },
            // objEtcInfo 속성정의
            //  - viewerNanme => report뷰어명, 기본값: ReportViewer, 별도의 viewer사용시적용(DayOrderWork.cshtml 참조)
            //  - nCopies     => 프린트할 수량,  기본값:1, 수량지정시 해당수량만큼 프린트함
            objEtcInfo: { subParam: subParams, viewerName: "", nCopies: 1 }
            // dataset(다중테이블)  사용시, 아래주석을 풀어서 사용한다.
            //objTblNm: { tblName: "Header,TotalRate" },
            //sub report필요시, 아래주석을 풀어서 사용한다.
            //objSub: { subRptName: "Process,FinishDate,OrderQty,OrderQty2,Receive,ReceiveEA,Real,RealEA,Rate,Rate2,Remark" },
        });

        // 레포트테스트(생성객체확인)
        //report.testObj();
        report.run();
    }

    // 엑셀 추출
    function TestProgressStatusExcel() {
        var m;
        try { m = UtilView.getCurMenuInfo('menuname'); } catch (e) { m = '이름없음' };
        m += "_" + '@DateTime.Now.ToShortDateString()';
        gridExportToExcel("TestProgressStatusGrid", m);
    }
    //#endregion

    //#region 프로그램별 함수
    //async function TestProgressStatusCheckTestStandard(testcontrol_id) {
    //    var objParam = { testcontrol_id: testcontrol_id};
    //    const result = await $.ajax({
    //        type: 'POST',
    //        url: '/QualityControl/TestProgressStatusCheckTestStandard',
    //        data: {
    //            dto: JSON.stringify(objParam)
    //        }
    //    });
    //    return result;
    //}

    //#endregion 프로그램별 함수
</script>

<style>

    /* 포커스된 시험의뢰 그리드 로우의 글자색 검정색으로(하이라이트 된 로우와 셀의 글자 잘 보기 위함) */
    #TestProgressStatusGrid .dx-datagrid-rowsview .dx-row-focused.dx-data-row .dx-command-edit .dx-link
    , #TestProgressStatusGrid .dx-datagrid-rowsview .dx-row-focused.dx-data-row > td:not(.dx-focused)
    , #TestProgressStatusGrid .dx-datagrid-rowsview .dx-row-focused.dx-data-row > tr > td:not(.dx-focused) {
        color: #242424;
    }

</style>


<div id="@(pagePrefix)" page-ctrl-name="@(pageControllerNm)" autoresize="Y">

    <div id="TestProgressStatusItemPopup"></div>
    <div id="TestProgressStatusVenderPopup"></div>
    <div id="TestProgressStatusMakerPopup"></div>

    @*<div>
        @(Html.DevExtreme().Popup()
            .ID("TestProgressStatusSignPopup")
            .Width(400)
            .Height(200)
            .ShowTitle(true)
            .Title("작업자 인증")
            .OnHidden("ClearTestProgressStatusSignInput")
            .Visible(false)
            .DragEnabled(true)
            .CloseOnOutsideClick(false)
        )
    </div>*@

    @* 팝업화면        
        @using (Html.DevExtreme().NamedTemplate("TestProgressStatusSignPopupTemplate"))
    {
        <h6>전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

        <form id="TestProgressStatusSignForm" class="mb-1">

            <div class="input-wrapper mb-1">
                <label class="col-3">아이디</label>
                <input type="text" class="col-8 form-control" name="txt_ID">
            </div>
            <div class="input-wrapper">
                <label class="col-3">비밀번호</label>
                <input type="password" class="col-8 form-control" name="txt_Pass">
            </div>
        </form>
        <div class="align-end-only">
            <button class="btn btn-secondary" onclick="TestProgressStatusSignSubmit()">확인</button>
        </div>
    }*@

    <div class="mainTop row">

        <div class="col-8">

            <form id="@(pagePrefix)SearchForm">

                <div class="input-wrapper">

                    <div class="col-3 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">구분</span>
                        </div>
                        <label class="p-1"></label>

                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="1" id="@(pagePrefix)selectdate1" name="rg_ReqorRec" checked />
                        </div>
                        <span class="form-control-sm"><label for="@(pagePrefix)selectdate1">의뢰</label></span>

                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="2" id="@(pagePrefix)selectdate2" name="rg_ReqorRec" />

                        </div>
                        <span class="form-control-sm"><label for="@(pagePrefix)selectdate2">접수</label></span>
                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="3" id="@(pagePrefix)selectdate3" name="rg_ReqorRec" />

                        </div>
                        <span class="form-control-sm"><label for="@(pagePrefix)selectdate2">승인</label></span>
                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">시험종류</span>
                        </div>
                        <select class="form-control" name="le_test_type">
                            @foreach (DataRow row in ((DataTable)Public_Function.GetMaster("공통코드", "S", "QC004")).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">진행상태</span>
                        </div>
                        <select class="form-control" name="le_test_status">
                            @foreach (DataRow row in ((DataTable)Public_Function.GetMaster("공통코드", "S", "QC007")).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="input-wrapper">

                    <div class="col-3 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">기간</span>
                        </div>
                        <input type="text" class="form-control datepicker text-center" name="de_SDate" autocomplete="off">
                        <label class="col-1 form-text"> ~ </label>
                        <input type="text" class="form-control input-sm datepicker text-center" name="de_EDate" autocomplete="off">
                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">제형</span>
                        </div>
                        <select class="form-control" name="le_item_form_cd">
                            @foreach (DataRow row in ((DataTable)Public_Function.GetMaster("공통코드", "S", "CM065")).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="input-group input-group-sm col-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text">구분</span>
                        </div>
                        <select class="form-control" name="ce_gubun_number">
                            <option value="0">의뢰번호</option>
                            <option value="1">의뢰품목</option>
                            <option value="2">제조(관리)번호</option>
                        </select>
                        <input type="text" class="form-control input-sm text-center" name="te_number">
                    </div>
                </div>
            </form>

        </div>
        <!-- $CRUD버튼-->
        <div class="CRUD-btn col-4">
            @* === CRUD 버튼 === *@
            @{Html.SetToolbar(0, true, "Search;Print;Preview;Excel");}
        </div>
    </div>

    <div class="row mb-0">
        <div class="col-12">
            <div class="box mb-0">

                @(Html.DevExtreme().DataGrid()
                    .ID("TestProgressStatusGrid")
                    .KeyExpr("testcontrol_id")
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .Height(900)
                    .ShowBorders(true)
                    .FocusedRowEnabled(true)
                    .FocusedRowIndex(0)
                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
                    .ShowColumnLines(true)
                    .HoverStateEnabled(true)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .Columns(c =>
                    {
                        c.Add().DataField("test_type_nm").Caption("시험종류");                        
                        c.Add().DataField("start_no").Caption("제조번호");
                        c.Add().DataField("test_no").Caption("시험번호");
                        c.Add().DataField("testrequest_no").Caption("의뢰번호");
                        c.Add().DataField("item_cd").Caption("품 명");
                        c.Add().DataField("test_standard_nm_1").Caption("규격");
                        c.Add().DataField("process_nm").Caption("공정");
                        c.Add().DataField("start_qty").Caption("의뢰량");
                        c.Add().DataField("request_date").Caption("의뢰일자");
                        c.Add().DataField("instruction_date").Caption("지시일자");
                        c.Add().DataField("receive_date").Caption("접수일자");
                        c.Add().DataField("picking_date").Caption("채취일자");
                        c.Add().DataField("result_plan_date").Caption("통보예정");
                        c.Add().DataField("test_emp_nm").Caption("담당자");
                        c.Add().DataField("total_cnt").Caption("전체(건)");
                        c.Add().DataField("end_cnt").Caption("완료(건)");
                        c.Add().DataField("test_status_nm").Caption("진행상태");
                        c.Add().DataField("test_date").Caption("승인일자");
                        c.Add().DataField("test_result_value").Caption("함량/역가");
                        c.Add().DataField("test_inform_remark").Caption("소견");
                    })
                    //.OnFocusedRowChanged("TestProgressStatusFocusChanged")
                    .OnRowPrepared("TestProgressStatusHighlightRow")
                    .OnCellPrepared("TestProgressStatusHighlightCell")
                    .OnToolbarPreparing("HideToolbarButton")
                )

            </div>
        </div>
    </div>    
</div>