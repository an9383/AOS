@using System.Data
@using HACCP.Libs.Views

@{
    Layout = null;
    ViewData["Title"] = "MonthScheduleList";
}

<script id="MonthScheduleListJs">
    var MonthScheduleList_focusedRow_T, MonthScheduleList_focusedRow_B = null;
    var commonCd = "@ViewBag.commonCd";
    $(function () {

        $('#MonthScheduleList .datepicker').datepicker({
            format: "yyyy-mm",	//데이터 포맷 형식(yyyy : 년 mm : 월 dd : 일 )
            startDate: '-30y',	//달력에서 선택 할 수 있는 가장 빠른 날짜. 이전으로는 선택 불가능 ( d : 일 m : 달 y : 년 w : 주)
            endDate: '+10y',	//달력에서 선택 할 수 있는 가장 느린 날짜. 이후로 선택 불가 ( d : 일 m : 달 y : 년 w : 주)
            autoclose: true,	//사용자가 날짜를 클릭하면 자동 캘린더가 닫히는 옵션
            calendarWeeks: false, //캘린더 옆에 몇 주차인지 보여주는 옵션 기본값 false 보여주려면 true
            clearBtn: false, //날짜 선택한 값 초기화 해주는 버튼 보여주는 옵션 기본값 false 보여주려면 true
            disableTouchKeyboard: false,	//모바일에서 플러그인 작동 여부 기본값 false 가 작동 true가 작동 안함.
            immediateUpdates: false,	//사용자가 보는 화면으로 바로바로 날짜를 변경할지 여부 기본값 :false
            multidate: false, //여러 날짜 선택할 수 있게 하는 옵션 기본값 :false
            multidateSeparator: ",", //여러 날짜를 선택했을 때 사이에 나타나는 글짜 2019-05-01,2019-06-01
            templates: {
                leftArrow: '&laquo;',
                rightArrow: '&raquo;'
            }, //다음달 이전달로 넘어가는 화살표 모양 커스텀 마이징
            todayHighlight: true,	//오늘 날짜에 하이라이팅 기능 기본값 :false
            toggleActive: false,	//이미 선택된 날짜 선택하면 기본값 : false인경우 그대로 유지 true인 경우 날짜 삭제
            weekStart: 0,//달력 시작 요일 선택하는 것 기본값은 0인 일요일
            language: "ko",	//달력의 언어 선택, 그에 맞는 js로 교체해줘야한다.
            changeMonth: true,
            changeYear: true
        });//datepicker end

        $("#MonthScheduleList #monthName").text("@DateTime.Today.ToString("MM")" + "월");

        $('#MonthScheduleList .datepicker').on('change', function () {

            var yearMonth = $("#MonthScheduleList input[name='s_yearMonth']").val();
            var month = yearMonth.split("-")[1];

            $("#MonthScheduleList #monthName").text(month + "월");
        });

        MonthScheduleListSearch();
    })

    //조회
    function MonthScheduleListSearch() {
        MonthScheduleList_GridSelect();
    }

    //미리보기
    function MonthScheduleListPreview() {

        if (MonthScheduleList_focusedRow_B != null) {
            var report = new ReportHelper($(event.target));

            var yearMonth = $("#MonthScheduleList input[name='s_yearMonth']").val();
            var year = yearMonth.split("-")[0];
            var month = yearMonth.split("-")[1];
            var title = year + " 년 " + month + " 월";

            var schedule_master_id = MonthScheduleList_focusedRow_T.data.schedule_master_id;

            report.addParam({
                objFile: { path: "PrevCk", RptFileName: "MonthScheduleListR" },
                objSp: { SpName: "sp_MonthScheduleList", gubun: "S2", reportParam: "s_year:" + year + ";s_month:" + month + ";schedule_master_id:" + schedule_master_id + ";common_cd:" + commonCd },
                objEtcInfo: { subParam: "title=" + title },
                objTblNm: { tblName: "MonthScheduleListT" }
            });
            report.run();
        } else {
            alert("점검 리스트를 확인하세요");
        }

    }

    //프린트
    function MonthScheduleListPrint() {

        if (MonthScheduleList_focusedRow_B != null) {

            var report = new ReportHelper($(event.target));

            var yearMonth = $("#MonthScheduleList input[name='s_yearMonth']").val();
            var year = yearMonth.split("-")[0];
            var month = yearMonth.split("-")[1];
            var title = year + " 년 " + month + " 월";

            var schedule_master_id = MonthScheduleList_focusedRow_T.data.schedule_master_id;

            report.addParam({
                objFile: { path: "PrevCk", RptFileName: "MonthScheduleListR" },
                objSp: { SpName: "sp_MonthScheduleList", gubun: "S2", reportParam: "s_year:" + year + ";s_month:" + month + ";schedule_master_id:" + schedule_master_id + ";common_cd:" + commonCd },
                objEtcInfo: { subParam: "title=" + title },
                objTblNm: { tblName: "MonthScheduleListT" }
            });
            report.run();

        } else {
            alert("점검 리스트를 확인하세요");
        }
    }

    //점검 기록서 조회
    function MonthScheduleList_GridSelect() {
        var form = $('#MonthScheduleListForm')[0];
        var data = new FormData(form);

        var yearMonth = $("#MonthScheduleList input[name='s_yearMonth']").val();

        var year = yearMonth.split("-")[0];
        var month = yearMonth.split("-")[1];

        data.set("s_year", year);
        data.set("s_month", month);

        MonthScheduleList_focusedRow_T = null;
        MonthScheduleList_focusedRow_B = null;

        $.ajax({
            type: 'POST',
            async: false,
            contentType: false,
            processData: false,
            url: '/PrevCk/MonthScheduleList_GridSelect',
            data: data,
            success: function (result) {

                if (result != "") {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.length > 0) {
                        $("#MonthScheduleList_TopGrid").dxDataGrid("option", "dataSource", json);
                        $("#MonthScheduleList_TopGrid").dxDataGrid("option", "focusedRowIndex", 0);
                    } else {
                        $("#MonthScheduleList_TopGrid").dxDataGrid("option", "dataSource", []);
                        $("#MonthScheduleList_TopGrid").dxDataGrid("instance").option("focusedRowKey", "");
                        $("#MonthScheduleList_BottomGrid").dxDataGrid("option", "dataSource", []);
                        $("#MonthScheduleList_BottomGrid").dxDataGrid("instance").option("focusedRowKey", "");
                    }
                    //console.log(JSON.parse(result));

                } else {
                    $("#MonthScheduleList_TopGrid").dxDataGrid("option", "dataSource", []);
                    $("#MonthScheduleList_TopGrid").dxDataGrid("instance").option("focusedRowKey", "");
                    $("#MonthScheduleList_BottomGrid").dxDataGrid("option", "dataSource", []);
                    $("#MonthScheduleList_BottomGrid").dxDataGrid("instance").option("focusedRowKey", "");
                }

            }
        })
    }

    //점검 기록서 월간점검표 조회
    function MonthScheduleList_GridSelect2() {

        if (MonthScheduleList_focusedRow_T != null) {

            var form = $('#MonthScheduleListForm')[0];
            var data = new FormData(form);

            var yearMonth = $("#MonthScheduleList input[name='s_yearMonth']").val();
            var year = yearMonth.split("-")[0];
            var month = yearMonth.split("-")[1];

            data.set("s_year", year);
            data.set("s_month", month);
            data.set("schedule_master_id", MonthScheduleList_focusedRow_T.data.schedule_master_id);

            $.ajax({
                type: 'POST',
                async: false,
                contentType: false,
                processData: false,
                url: '/PrevCk/MonthScheduleList_GridSelect2',
                data: data,
                success: function (result) {

                    if (result != "") {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }

                        //console.log(JSON.parse(result));
                        $("#MonthScheduleList_BottomGrid").dxDataGrid("option", "dataSource", json);
                        $("#MonthScheduleList_BottomGrid").dxDataGrid("option", "focusedRowIndex", 0);
                    } else {
                        $("#MonthScheduleList_BottomGrid").dxDataGrid("option", "dataSource", []);
                        $("#MonthScheduleList_BottomGrid").dxDataGrid("instance").option("focusedRowKey", "");

                    }

                }
            })
        } else {
            $("#MonthScheduleList_BottomGrid").dxDataGrid("option", "dataSource", []);
            $("#MonthScheduleList_BottomGrid").dxDataGrid("instance").option("focusedRowKey", "");
        }
    }

    //그리드 이벤트
    function MonthScheduleList_OnFocusedRowChanged_T(e) {
        if (!e.row || !e.row.data) {
            MonthScheduleList_focusedRow_T = null;
        } else {
            MonthScheduleList_focusedRow_T = e.row;
            MonthScheduleList_GridSelect2();
        }
    }

    function MonthScheduleList_OnFocusedRowChanged_B(e) {
        if (!e.row || !e.row.data) {
            MonthScheduleList_focusedRow_B = null;
        } else {
            MonthScheduleList_focusedRow_B = e.row;
        }
    }

    //리포트 생성
    function PreviewClick(t) {

        if (MonthScheduleList_focusedRow_B != null) {

            var report = new ReportHelper();

            var yearMonth = $("#MonthScheduleList input[name='s_yearMonth']").val();
            var year = yearMonth.split("-")[0];
            var month = yearMonth.split("-")[1];
            var title = year + " 년 " + month + " 월";

            var schedule_master_id = MonthScheduleList_focusedRow_T.data.schedule_master_id;

            switch (t) {

                case '1':

                    report.addParam({
                        objFile: { path: "PrevCk", RptFileName: "MonthScheduleListR" },
                        objSp: { SpName: "sp_MonthScheduleList", gubun: "S2", reportParam: "s_year:" + year + ";s_month:" + month + ";schedule_master_id:" + schedule_master_id + ";common_cd:" + commonCd },
                        objEtcInfo: { subParam: "title=" + title },
                        objTblNm: { tblName: "" }
                    });

                    break;

                case '2':

                    report.addParam({
                        objFile: { path: "PrevCk", RptFileName: "MonthScheduleListR2" },
                        objSp: { SpName: "sp_MonthScheduleList", gubun: "S2", reportParam: "s_year:" + year + ";s_month:" + month + ";schedule_master_id:" + schedule_master_id + ";common_cd:" + commonCd },
                        objEtcInfo: { subParam: "title=" + title },
                        objTblNm: { tblName: "MonthScheduleListT" },
                        objSub: { subRptName: "fsweek,tfweek" }
                    });

                    break;

                case '3':
                    title = year + " 년 ";

                    report.addParam({
                        objFile: { path: "PrevCk", RptFileName: "MonthScheduleListR3" },
                        objSp: { SpName: "sp_MonthScheduleList", gubun: "S4", reportParam: "s_year:" + year + ";schedule_master_id:" + schedule_master_id + ";common_cd:" + commonCd },
                        objEtcInfo: { subParam: "title=" + title },
                        objTblNm: { tblName: "MonthScheduleList4T" }
                    });

                    break;
            }

            report.preview();

        } else {
            alert("점검 리스트를 확인하세요");
        }
    }

    function PreviewWeekClick(num) {

        if (MonthScheduleList_focusedRow_B != null) {

            var yearMonth = $("#MonthScheduleList input[name='s_yearMonth']").val();
            var year = yearMonth.split("-")[0];
            var month = yearMonth.split("-")[1];

            var schedule_master_id = MonthScheduleList_focusedRow_T.data.schedule_master_id;

            var data = {};
            data.s_year = year;
            data.s_month = month;
            data.s_week = num;
            data.schedule_master_id = schedule_master_id;

            $.ajax({
                type: 'POST',
                url: '/PrevCk/MonthSchedule_ReportByWeekSP',
                dataType: 'json',
                async: false,
                data: data,
                success: function (data) {
                    if (data != "") {

                        var JsonData = JSON.parse(data);

                        if (JsonData.length > 0) {

                            var title = year + " 년 " + month + " 월 " + num + " 주";

                            var report = new ReportHelper();

                            report.addParam({
                                objFile: { path: "PrevCk", RptFileName: "WeekScheduleListR" },
                                objSp: { SpName: "sp_MonthScheduleList", gubun: "S3", reportParam: "s_year:" + year + ";s_month:" + month + ";s_week:" + num + ";schedule_master_id:" + schedule_master_id + ";common_cd:" + commonCd },
                                objEtcInfo: { subParam: "title=" + title },
                                objTblNm: { tblName: "MonthScheduleList4T" }
                            });

                            report.preview();

                        } else {
                            alert("작성된 점검사항이 없습니다.");
                        }
                    } else {
                        alert("작성된 점검사항이 없습니다.");
                    }
                }
            })
        } else {
            alert("점검 리스트를 확인하세요");
        }
    }

</script>

<div id="MonthScheduleList" autoresize="Y">
    @*<h4 class="divTitle">월간 점검표</h4>*@

    <div id="MonthScheduleListTop" class="mainTop row">
        <div class="col-8">

            <form id="MonthScheduleListForm">
                <div class="input-wrapper">

                    <div class="col-2 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">연월</span>
                        </div>
                        <input type="text" class="form-control datepicker text-center" name="s_yearMonth" value="@DateTime.Today.ToString("yyyy-MM")" />
                    </div>

                    <div class="col-2 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">구분</span>
                        </div>
                        <select class="form-control" name="s_obj_type">
                            @foreach (DataRow row in ((DataTable)ViewBag.obj_type).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="col-2 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">작업</span>
                        </div>
                        <select class="form-control" name="s_work_type">
                            @foreach (DataRow row in ((DataTable)ViewBag.work_type).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="col-2 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">주기</span>
                        </div>
                        <select class="form-control" name="s_schedule_type">
                            @foreach (DataRow row in ((DataTable)ViewBag.schedule_type).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="col-3 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">대상</span>
                        </div>
                        <input type="text" class="form-control" name="obj_cd" />
                    </div>
                </div>
            </form>
        </div>
        <div class="CRUD-btn col-4">
            @{ Html.SetToolbar(0, true, "Search;Preview;Print"); }

            @*@(Html.DevExtreme().Toolbar()
                .ID("MonthScheduleList_Toolbar")
                  .Items(items =>
                  {
                      items.Add()
                          .Widget(w => w
                              .Button()
                              .Type(ButtonType.Default)
                              .StylingMode(ButtonStylingMode.Contained)
                              .ID("MonthScheduleListSearch")
                              .Icon("search")
                              .Text("조회")
                              .OnClick("MonthScheduleListSearch")
                          )
                          .Location(ToolbarItemLocation.After);
                  })
        )*@
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                .ID("MonthScheduleList_TopGrid")
                .Selection(s => s.Mode(SelectionMode.Single))
                .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                .SearchPanel(searchPanel => searchPanel.Visible(true))
                .Height(350)
                .ShowBorders(true)
                .ShowColumnLines(true)
                .ShowRowLines(true)
                .ColumnAutoWidth(true)
                .AllowColumnResizing(true)
                .FocusedRowEnabled(true)
                .FocusedRowIndex(0)
                //.DataSource(new JS("SetDayScheduleListData"))
                .KeyExpr("schedule_master_id")
                .Columns(c =>
                {
                    c.Add().DataField("obj_type_nm").Caption("구분");
                    c.Add().DataField("obj_cd2").Caption("기기(관리)번호");
                    c.Add().DataField("dis_nm").Caption("대상");
                    c.Add().DataField("work_type_nm").Caption("작업");
                    c.Add().DataField("schedule_type_nm").Caption("주기");
                    c.Add().DataField("schedule_cnt").Caption("계획");
                    c.Add().DataField("result_cnt").Caption("실행");
                    c.Add().DataField("diff_cnt").Caption("미실행");
                })
                .OnFocusedRowChanged("MonthScheduleList_OnFocusedRowChanged_T")
            )
                <div class="input-wrapper" style="display:block;text-align:left;padding:5px;">
                    <button class="btn btn-outline-secondary" style="height:45px;" type="button" onclick="PreviewClick('1')">미리보기<br />[일일]</button>
                    <button class="btn btn-outline-secondary" style="height:45px;" type="button" onclick="PreviewClick('2')">미리보기<br />[15일 단위]</button>
                    <button class="btn btn-outline-secondary" style="height:45px;" type="button" onclick="PreviewClick('3')">미리보기<br />[월별]</button>
                    <span id="monthName" style="margin-right:5px; margin-left:15px;"></span>
                    <button class="btn btn-outline-secondary" style="height:45px;" type="button" onclick="PreviewWeekClick('1')">미리보기<br />[1주]</button>
                    <button class="btn btn-outline-secondary" style="height:45px;" type="button" onclick="PreviewWeekClick('2')">미리보기<br />[2주]</button>
                    <button class="btn btn-outline-secondary" style="height:45px;" type="button" onclick="PreviewWeekClick('3')">미리보기<br />[3주]</button>
                    <button class="btn btn-outline-secondary" style="height:45px;" type="button" onclick="PreviewWeekClick('4')">미리보기<br />[4주]</button>
                    <button class="btn btn-outline-secondary" style="height:45px;" type="button" onclick="PreviewWeekClick('5')">미리보기<br />[5주]</button>
                </div>

                @(Html.DevExtreme().DataGrid()
                    .ID("MonthScheduleList_BottomGrid")
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.ColumnRenderingMode(GridColumnRenderingMode.Virtual))
                    .Height(480)
                    .ShowBorders(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .FocusedRowEnabled(true)
                    .FocusedRowIndex(0)
                    //.DataSource(new JS("SetDayScheduleListData"))
                    .KeyExpr("work_seq")
                    .Columns(c =>
                    {
                        c.Add().DataField("work_method").Caption("체크사항").MinWidth(200);

                        c.Add().DataField("data_01").Caption("01일");
                        c.Add().DataField("data_02").Caption("02일");
                        c.Add().DataField("data_03").Caption("03일");
                        c.Add().DataField("data_04").Caption("04일");
                        c.Add().DataField("data_05").Caption("05일");
                        c.Add().DataField("data_06").Caption("06일");
                        c.Add().DataField("data_07").Caption("07일");
                        c.Add().DataField("data_08").Caption("08일");
                        c.Add().DataField("data_09").Caption("09일");
                        c.Add().DataField("data_10").Caption("10일");


                        c.Add().DataField("data_11").Caption("11일");
                        c.Add().DataField("data_12").Caption("12일");
                        c.Add().DataField("data_13").Caption("13일");
                        c.Add().DataField("data_14").Caption("14일");
                        c.Add().DataField("data_15").Caption("15일");
                        c.Add().DataField("data_16").Caption("16일");
                        c.Add().DataField("data_17").Caption("17일");
                        c.Add().DataField("data_18").Caption("18일");
                        c.Add().DataField("data_19").Caption("19일");
                        c.Add().DataField("data_20").Caption("20일");


                        c.Add().DataField("data_21").Caption("21일");
                        c.Add().DataField("data_22").Caption("22일");
                        c.Add().DataField("data_23").Caption("23일");
                        c.Add().DataField("data_24").Caption("24일");
                        c.Add().DataField("data_25").Caption("25일");
                        c.Add().DataField("data_26").Caption("26일");
                        c.Add().DataField("data_27").Caption("27일");
                        c.Add().DataField("data_28").Caption("28일");
                        c.Add().DataField("data_29").Caption("29일");
                        c.Add().DataField("data_30").Caption("30일");
                        c.Add().DataField("data_31").Caption("31일");

                    }).OnFocusedRowChanged("MonthScheduleList_OnFocusedRowChanged_B")
                    )

            </div>
        </div>
    </div>

</div>
