@using System.Data
@using HACCP.Libs.Views

@{
    Layout = null;
    ViewData["Title"] = "DayScheduleList";

}
<style>
    .DaySignButton {
        width: 100%;
    }
</style>

<script id="DayScheduleListJs">
    var DayScheduleList_dbState = "init";
    var DayScheduleList_focusedRow_T, DayScheduleList_focusedRow_B = null;

    var DayScheduleList_userCd = sessionStorage.getItem("loginCD");
    var DayScheduleList_userNm = sessionStorage.getItem("loginNM");

    var DayScheduleList_empCd = '';
    var DayScheduleList_empNm = '';
    var DayScheduleList_signGubun = '';

    var sign_seq = '';

    //전자서명 전역변수
    var DayScheduleList_lastEmpCd, DayScheduleList_pEmp_cd = '';
    var DayScheduleList_signChk = '';

    //DB 저장 데이터 변수
    var DaySchedule_tempArray = new Array();

    $(function () {
        setDatePicker("#DayScheduleList .datepicker");

        DayScheduleListEditCheck(false);
        DayScheduleListSearch();
    })

    // 수정중인지 체크
    function DayScheduleListEditCheck(nowEdit) {

        if (nowEdit) {

            $("#DayScheduleListSave").dxButton().parent().parent().removeClass("display-none");
            $("#DayScheduleListUndo").dxButton().parent().parent().removeClass("display-none");
            $("#DayScheduleListSearch").dxButton().parent().parent().addClass("display-none");
            $("#DayScheduleListEdit").dxButton().parent().parent().addClass("display-none");
            $("#DayScheduleListDelete").dxButton().parent().parent().addClass("display-none");
            $("#DayScheduleList textarea[name=comment]").attr('readonly', false);

            $("#DayScheduleList_TopGrid").dxDataGrid("option", "disabled", true);

        }
        if (!nowEdit) {

            $("#DayScheduleListSave").dxButton().parent().parent().addClass("display-none");
            $("#DayScheduleListUndo").dxButton().parent().parent().addClass("display-none");
            $("#DayScheduleListSearch").dxButton().parent().parent().removeClass("display-none");
            $("#DayScheduleListEdit").dxButton().parent().parent().removeClass("display-none");
            $("#DayScheduleListDelete").dxButton().parent().parent().removeClass("display-none");
            $("#DayScheduleList textarea[name=comment]").attr('readonly', true);

            $("#DayScheduleList_TopGrid").dxDataGrid("option", "disabled", false);

            var editing = {
                allowUpdating: false,
                allowAdding: false,
                allowDeleting: false
            }
            $("#DayScheduleList_BottomGrid").dxDataGrid("option", "editing", editing);

        }
    }

    //조회
    function DayScheduleListSearch() {
        DayScheduleList_dbState = "search";

        DayScheduleList_GridSelect();
    }

    //입력
    function DayScheduleListInput() {

    }

    //수정 : 체크사항 그리드만 수정가능
    function DayScheduleListEdit() {

        if (DayScheduleList_focusedRow_T != null) {
            DayScheduleListEditCheck(true);

            var editing = {
                allowUpdating: true,
                allowAdding: false,
                allowDeleting: false,
                mode: 'batch'
            }
            $("#DayScheduleList_BottomGrid").dxDataGrid("option", "editing", editing);

            DayScheduleList_dbState = "edit";
        }

    }

    //삭제
    function DayScheduleListDelete() {

        if (DayScheduleList_focusedRow_T != null) {
            var signGrid = $("#DayScheduleListSignGrid").dxDataGrid("instance");
            if (signGrid.totalCount() > 0) {
                if (signGrid.getDataSource().items()[1].sign_yn == "1") {

                    if (confirm("확인자 서명을 취소하시겠습니까?")) {
                        DayScheduleList_signChk = "Q";
                        LastSignCheck();
                    }
                } else if (signGrid.getDataSource().items()[0].sign_yn == "1") {

                    if (confirm("점검자 서명을 취소하시겠습니까?")) {
                        DayScheduleList_signChk = "C";
                        LastSignCheck();
                    }
                } else if ((signGrid.getDataSource().items()[0].sign_yn == "0") && (signGrid.getDataSource().items()[1].sign_yn == "0")) {
                    var ok = confirm("선택된 점검기록서 정보가 삭제 후 다시 생성됩니다.\n 삭제하시겠습니까?");
                    if (ok) {

                        if (DayScheduleList_GridDelete() == true) {
                            DayScheduleList_GridSelect();
                        } else {
                            alert("취소되지 않았습니다. 점검기록서를 확인하십시오");
                        }
                    }
                }
            }


            //var emp_cd1 = $('#DayScheduleList input[name="c_emp_cd1"]').val();//점검자
            //var emp_cd2 = $('#DayScheduleList input[name="c_emp_cd2"]').val();//확인자

            //if (emp_cd2 != "" && emp_cd2 != null) {

            //    if (confirm("확인자 서명을 취소하시겠습니까?")) {
            //        DayScheduleList_signChk = "Q";
            //        LastSignCheck();
            //    }

            //} else if (emp_cd1 != "" && emp_cd1 != null) {

            //    if (confirm("점검자 서명을 취소하시겠습니까?")) {
            //        DayScheduleList_signChk = "C";
            //        LastSignCheck();
            //    }

            //} else if ((emp_cd2 == "" || emp_cd2 == null) && (emp_cd1 == "" || emp_cd1 == null)) {
            //    var ok = confirm("선택된 점검기록서 정보가 삭제 후 다시 생성됩니다.\n 삭제하시겠습니까?");
            //    if (ok) {

            //        if (DayScheduleList_GridDelete() == true) {
            //            DayScheduleList_GridSelect();
            //        } else {
            //            alert("취소되지 않았습니다. 점검기록서를 확인하십시오");
            //        }
            //    }
            //}
        }

    }

    //저장
    async function DayScheduleListSave() {

        //comment 수정
        if (DayScheduleList_dbState == "edit") {

            if (DayScheduleList_focusedRow_T != null) {

                 //점검기록서 비고 데이터 수정
                var comment = $("#DayScheduleList textarea[name=comment]").val();
                var data = DayScheduleList_focusedRow_T.data;
                data.comment = comment;

                $.ajax({
                    type: 'POST',
                    url: '/PrevCk/DayScheduleList_SaveMaster',
                    async: false,
                    data: data,
                    success: function (result) {
                        if (result.length > 0) {
                            var json = JSON.parse(result);

                            if (json.hasOwnProperty('sessionLoss')) {
                                alert("세션이 만료되었습니다.");
                                sessionStorage.clear();
                                location.replace("/Comm/Login");
                            }

                            //alert(json.messege);
                        }
                    }
                });

                //체크사항 결과 수정
                if (!confirm("변경사항을 저장하시겠습니까?")) return;

                await $("#DayScheduleList_BottomGrid").dxDataGrid("instance").saveEditData();

                if (DaySchedule_tempArray.length > 0) {

                    $.ajax({
                        type: 'POST',
                        async: false,
                        url: '/PrevCk/DayScheduleList_TRX',
                        data: {
                            paramData: JSON.stringify(DaySchedule_tempArray)
                        },
                        dataType: 'json',
                        success: function (result) {

                        }
                    })
                }

            }
        }

        DayScheduleList_dbState = "search";
        DayScheduleListEditCheck(false);

        DayScheduleListSearch();
    }

    //취소
    function DayScheduleListUndo() {

        DayScheduleList_dbState = "search";
        DayScheduleListEditCheck(false);

        DayScheduleListSearch();
    }

    //프린트
    function DayScheduleListPrint() {

        var btnType;
        btnType = $(event.target).closest('.dx-button').attr('id');

        if ($("#DayScheduleList_BottomGrid").dxDataGrid("instance").totalCount() > 0) {
            var grid = $("#DayScheduleList_TopGrid").dxDataGrid("instance");
            var data = getGridRowByKey('DayScheduleList_TopGrid', grid.option("focusedRowKey"));

            var s_date = $('#DayScheduleList input[name="s_schedule_date1"]').val();
            var e_date = $('#DayScheduleList input[name="s_schedule_date2"]').val();

            var report = new ReportHelper();

            report.addParam({
                objFile: { path: "PrevCk", RptFileName: "DayScheduleListR" },
                objSp: { SpName: "sp_DayScheduleList_Y", gubun: "SR", reportParam: "s_schedule_date1:" + s_date + ";s_schedule_date2:" + e_date +";schedule_id:" + data.schedule_id },
                objEtcInfo: { subParam: "" },
                //objTblNm: { tblName: "DayScheduleListT,schedule_file_R" }
                objTblNm: { tblName: "DayScheduleListT,schedule_file" },
                objSub: { subRptName: "schedule_file_R" }
            });

            if (btnType.indexOf('Preview') > -1) {
                report.preview();
            } else if (btnType.indexOf('Print') > -1) {
                report.print();
            }
        } else {
            alert("점검 리스트를 확인하세요");
        }
    }

    //엑셀
    function DayScheduleListExcel() {
        gridExportToExcel("DayScheduleList_TopGrid", "DayScheduleListData");
    }

    //DB 조회 - 상단 점검 기록서
    function DayScheduleList_GridSelect() {
        var form = $('#DayScheduleListForm')[0];
        var data = new FormData(form);

        // 초기화영역
        $('#DayScheduleList_TopGrid').dxDataGrid("option", "dataSource", []);
        $('#DayScheduleList_TopGrid').dxDataGrid("option", "focusedRowKey", "");

        $.ajax({
            type: 'POST',
            async: false,
            contentType: false,
            processData: false,
            url: '/PrevCk/DayScheduleList_GridSelect',
            data: data,
            success: function (result) {

                if (result != "") {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }
                    if (json.length > 0) {
                        $("#DayScheduleList_TopGrid").dxDataGrid("option", "dataSource", json);
                        $("#DayScheduleList_TopGrid").dxDataGrid("option", "focusedRowEnabled", true);
                        $("#DayScheduleList_TopGrid").dxDataGrid("option", "focusedRowIndex", 0);
                    } else {
                        $("#DayScheduleList_TopGrid").dxDataGrid("option", "focusedRowEnabled", false);

                        $("#DayScheduleList_BottomGrid").dxDataGrid("option", "dataSource", []);
                        $("#DayScheduleList_BottomGrid").dxDataGrid("instance").option("focusedRowKey", "");

                        $("#DayScheduleList_FileGrid").dxDataGrid("option", "dataSource", []);
                        $("#DayScheduleList_FileGrid").dxDataGrid("instance").option("focusedRowKey", "");

                        $("#DayScheduleListSignGrid").dxDataGrid("option", "dataSource", []);
                        $("#DayScheduleListSignGrid").dxDataGrid("instance").option("focusedRowKey", "");

                    }
                } else {
                    $("#DayScheduleList_TopGrid").dxDataGrid("option", "focusedRowEnabled", false);

                    $("#DayScheduleList_BottomGrid").dxDataGrid("option", "dataSource", []);
                    $("#DayScheduleList_BottomGrid").dxDataGrid("instance").option("focusedRowKey", "");

                    $("#DayScheduleList_FileGrid").dxDataGrid("option", "dataSource", []);
                    $("#DayScheduleList_FileGrid").dxDataGrid("instance").option("focusedRowKey", "");

                    $("#DayScheduleListSignGrid").dxDataGrid("option", "dataSource", []);
                    $("#DayScheduleListSignGrid").dxDataGrid("instance").option("focusedRowKey", "");
                }

            }
        })
    }

    //DB 조회 - 하단 체크사항
    function DayScheduleList_GridSelect2() {

        if (DayScheduleList_focusedRow_T != null) {
            var form = $('#DayScheduleListForm')[0];
            var data = new FormData(form);

            data.set("schedule_id", DayScheduleList_focusedRow_T.data.schedule_id);

            $.ajax({
                type: 'POST',
                async: false,
                contentType: false,
                processData: false,
                url: '/PrevCk/DayScheduleList_GridSelect2',
                data: data,
                success: function (result) {

                    if (result != "") {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }

                        $("#DayScheduleList_BottomGrid").dxDataGrid("option", "dataSource", json);
                        $("#DayScheduleList_BottomGrid").dxDataGrid("option", "focusedRowIndex", 0);
                    } else {
                        $("#DayScheduleList_BottomGrid").dxDataGrid("option", "dataSource", []);
                        $("#DayScheduleList_BottomGrid").dxDataGrid("instance").option("focusedRowKey", "");
                    }

                }
            })
        } else {
            $("#DayScheduleList_BottomGrid").dxDataGrid("option", "dataSource", []);
            $("#DayScheduleList_BottomGrid").dxDataGrid("instance").option("focusedRowKey", "");

        }

    }

    //DB 삭제 - 점검 기록서
    function DayScheduleList_GridDelete() {
        var check = false;

        if (DayScheduleList_focusedRow_T != null) {

            $.ajax({
                type: 'POST',
                url: '/PrevCk/DayScheduleList_GridDelete',
                async: false,
                data: {
                    schedule_id: DayScheduleList_focusedRow_T.data.schedule_id
                },
                success: function (result) {
                    if (result.length > 0) {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }
                        check = true;
                        alert("삭제되었습니다.");
                    }
                }
            });
        }
        return check;
    }

    //파일 관련
    //DB 조회 - 파일리스트
    function DayScheduleList_GetFileList() {

        if (DayScheduleList_focusedRow_T != null) {
            $.ajax({
                type: 'POST',
                async: false,
                url: '/PrevCk/DayScheduleList_GetFileList',
                data: {
                    schedule_id: DayScheduleList_focusedRow_T.data.schedule_id
                },
                success: function (result) {
                    if (result.length > 0) {
                        var json = JSON.parse(result);

                        if (result.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }

                        $("#DayScheduleList_FileGrid").dxDataGrid("option", "dataSource", json);
                        $("#DayScheduleList_FileGrid").dxDataGrid("instance").option("focusedRowIndex", 0);
                    } else {
                        $("#DayScheduleList_FileGrid").dxDataGrid("option", "dataSource", []);
                        $("#DayScheduleList_FileGrid").dxDataGrid("instance").option("focusedRowKey", "");
                    }

                }
            })
        } else {
            $("#DayScheduleList_FileGrid").dxDataGrid("option", "dataSource", []);
            $("#DayScheduleList_FileGrid").dxDataGrid("instance").option("focusedRowKey", "");
        }
    }

    //전자서명 관련
    //전자서명 조회
    function DayScheduleList_SignerSearch() {
        if (DayScheduleList_focusedRow_T != null) {

            $.ajax({
                type: 'POST',
                async: false,
                url: '/PrevCk/DayScheduleList_SignerSearch',
                data: {
                    schedule_id: DayScheduleList_focusedRow_T.data.schedule_id,
                    sign_set_cd: '9301'
                },
                success: function (result) {
                    if (result.length > 0) {
                        var json = JSON.parse(result);

                        if (result.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }

                        $("#DayScheduleListSignGrid").dxDataGrid("instance").option("dataSource", json);


                    } else {
                        DayScheduleList_signClear();
                    }
                }
            })

            //$.ajax({
            //    type: 'POST',
            //    async: false,
            //    url: '/PrevCk/DayScheduleList_SignerSearch',
            //    data: {
            //        schedule_id: DayScheduleList_focusedRow_T.data.schedule_id
            //    },
            //    success: function (result) {
            //        if (result.length > 0) {
            //            var json = JSON.parse(result);

            //            if (result.hasOwnProperty('sessionLoss')) {
            //                alert("세션이 만료되었습니다.");
            //                sessionStorage.clear();
            //                location.replace("/Comm/Login");
            //            }

            //            $('#DayScheduleList input[name="c_emp_cd1"]').val(json[0].c_emp_cd1);
            //            $('#DayScheduleList input[name="c_emp_cd2"]').val(json[0].c_emp_cd2);
            //            $('#DayScheduleList input[name="c_emp_nm1"]').val(json[0].c_emp_nm1);
            //            $('#DayScheduleList input[name="c_emp_nm2"]').val(json[0].c_emp_nm2);
            //            $('#DayScheduleList input[name="c_emp_time1"]').val(json[0].c_emp_time1);
            //            $('#DayScheduleList input[name="c_emp_time2"]').val(json[0].c_emp_time2);

            //            if (json[0].c_emp_sign1 != "" && json[0].c_emp_sign1 != null) {
            //                $("#DayScheduleList #c_emp_sign1").attr("src", json[0].c_emp_sign1);
            //            } else {
            //                $("#DayScheduleList #c_emp_sign1").attr("src", null);
            //            }

            //            if (json[0].c_emp_sign2 != "" && json[0].c_emp_sign2 != null) {
            //                $("#DayScheduleList #c_emp_sign2").attr("src", json[0].c_emp_sign2);
            //            } else {
            //                $("#DayScheduleList #c_emp_sign2").attr("src", null);
            //            }

            //        } else {
            //            DayScheduleList_signClear();
            //        }
            //    }
            //})
        } else {
            DayScheduleList_signClear();
        }
    }

    //서명 초기화
    function DayScheduleList_signClear() {
        $('#DayScheduleList input[name="c_emp_nm1"]').val();
        $('#DayScheduleList input[name="c_emp_nm2"]').val();
        $('#DayScheduleList input[name="c_emp_time1"]').val();
        $('#DayScheduleList input[name="c_emp_time2"]').val();
        $("#DayScheduleList #c_emp_sign1").attr("src", null);
        $("#DayScheduleList #c_emp_sign2").attr("src", null);
    }

    //전자서명 팝업창 띄우기
    function DayScheduleList_DoSign() {
        console.log(DayScheduleList_focusedRow_T);
        if (DayScheduleList_focusedRow_T != null) {
            var popup = $("#DayScheduleList_Popup").dxPopup("instance");
            popup.option("contentTemplate", $("#DayScheduleList_checkSignPopupTemplate"));
            popup.show();
        }

    }

    //마지막 서명자 인증 체크
    function LastSignCheck() {
        DayScheduleList_lastEmpCd = ""; //전역변수 처리하기

        var signGrid = $("#DayScheduleListSignGrid").dxDataGrid("instance");
        if (signGrid.getDataSource().items()[0].sign_yn == "1") DayScheduleList_lastEmpCd = signGrid.getDataSource().items()[0].sign_emp_cd;
        else if (signGrid.getDataSource().items()[1].sign_yn == "1") DayScheduleList_lastEmpCd = signGrid.getDataSource().items()[1].sign_emp_cd;

        if (DayScheduleList_lastEmpCd != "") {
            DayScheduleList_signGubun = "LastSignCheck";
            DayScheduleList_DoSign(); //전자서명 팝업
        }

        //var emp_cd1 = $('#DayScheduleList input[name="c_emp_cd1"]').val();//점검자
        //var emp_cd2 = $('#DayScheduleList input[name="c_emp_cd2"]').val();//확인자
        //DayScheduleList_lastEmpCd = ""; //전역변수 처리하기

        //if      (emp_cd1 != "" && emp_cd1 != null)  DayScheduleList_lastEmpCd = emp_cd1;
        //else if (emp_cd2 != "" && emp_cd2 != null)  DayScheduleList_lastEmpCd = emp_cd2;

        //if (DayScheduleList_lastEmpCd != "") {
        //    DayScheduleList_signGubun = "LastSignCheck";
        //    DayScheduleList_DoSign(); //전자서명 팝업
        //}

    }

    //점검자 전자서명
    function DayScheduleList_CheckClick(e) {
        if (e.columnIndex == 3) {
            if (e.data.sign_set_dt_seq == "1") {
                DayScheduleList_CheckClick_C(e.data);
            } else if (e.data.sign_set_dt_seq == "2") {
                DayScheduleList_CheckClick_Q(e.data);
            }
        }
    }


    function DayScheduleList_CheckClick_C(_data) {
        DayScheduleList_signGubun = "CheckClick_C";
        DayScheduleList_signChk = "C";
        sign_seq = '1';

        //수정 상태 : 서명 수정
        if (DayScheduleList_dbState == "edit") {
            if (_data.sign_emp_cd != "" && _data.sign_emp_cd != null) {
                alert("저장 후 서명하십시오");
                return;
            }

            //if (_data.sign_yn == "0") {
            //    alert("저장 후 서명하십시오");
            //    return;
            //}

        //조회 상태 : 신규 서명
        } else {
            //if (_data.sign_yn == "1") {
            //    alert("이미 서명되었습니다");
            //    return;
            //}

            if (_data.sign_emp_cd != "" && _data.sign_emp_cd != null ) {
                alert("이미 서명되었습니다");
                return;
            }
        }


        //var emp_cd1 = $('#DayScheduleList input[name="c_emp_cd1"]').val();

        ////수정 상태 : 서명 수정
        //if (DayScheduleList_dbState == "edit") {
        //    if (emp_cd1 == "" || emp_cd1 == null) {
        //        alert("저장 후 서명하십시오");
        //        return;
        //    }
        ////조회 상태 : 신규 서명
        //} else {
        //    if (emp_cd1 != "" && emp_cd1 != null) {
        //        alert("이미 서명되었습니다");
        //        return;
        //    }
        //}

        DayScheduleList_DoSign(); //전자서명 팝업
    }

    //확인자 전자서명
    function DayScheduleList_CheckClick_Q(_data) {
        DayScheduleList_signGubun = "CheckClick_Q";
        DayScheduleList_signChk = "Q";
        sign_seq = '2';


        //수정 상태 : 서명 수정
        if (DayScheduleList_dbState == "edit") {
            if (_data.sign_yn == "0") {
                alert("저장 후 서명하십시오");
                return;
            }

            //조회 상태 : 신규 서명
        } else {
            if (_data.prev_sign_yn == "0") {
                alert("점검자 서명을 먼저 진행하세요");
                return;
            }

            if (_data.sign_yn == "1") {
                alert("이미 서명되었습니다");
                return;
            }
        }


        //var emp_cd1 = $('#DayScheduleList input[name="c_emp_cd1"]').val();
        //var emp_cd2 = $('#DayScheduleList input[name="c_emp_cd2"]').val();

        ////수정 상태 : 서명 수정
        //if (DayScheduleList_dbState == "edit") {
        //    if (emp_cd2 == "" || emp_cd2 == null) {
        //        alert("저장 후 서명하십시오");
        //        return;
        //    }

        ////조회 상태 : 신규 서명
        //} else {
        //    if (emp_cd1 == "" || emp_cd1 == null) {
        //        alert("점검자 서명을 먼저 진행하세요");
        //        return;
        //    }

        //    if (emp_cd2 != "" && emp_cd2 != null) {
        //        alert("이미 서명되었습니다");
        //        return;
        //    }
        //}

        DayScheduleList_DoSign(); //전자서명 팝업
    }

    function DayScheduleList_CancelSign() {
        var check = false;
        if (DayScheduleList_focusedRow_T != null) {

            $.ajax({
                type: 'POST',
                url: '/PrevCk/DayScheduleList_CancelSign',
                async: false,
                data: {
                    schedule_id: DayScheduleList_focusedRow_T.data.schedule_id,
                    gubun: DayScheduleList_signChk
                },
                success: function (result) {
                    if (result.length > 0) {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }
                        check = true;
                        alert(json.messege);
                    }
                }
            });
            return check;
        }
    }

    //유효 ID 체크
    function DayScheduleList_IDValidation() {
        var check = true;

        var data = new FormData($('#DayScheduleList_SignForm')[0]);
        data.set("gubun", "S");

        $.ajax({
            type: 'POST',
            async: false,
            url: '/Comm/IDValidation',
            data: data,
            contentType: false,
            processData: false,
            success: function (result) {

                if (result.length <= 0) {
                    alert("권한이 없는 사용자이거나 잘못된 ID,PW 입니다.");
                    check = false;
                    return;
                }

                DayScheduleList_pEmp_cd = JSON.parse(result)[0].emp_cd;

                $("#DayScheduleList_ConfirmForm input[name='dept_nm']").val(JSON.parse(result)[0].dept_nm);
                $("#DayScheduleList_ConfirmForm input[name='emp_nm']").val(JSON.parse(result)[0].emp_nm);
                $("#DayScheduleList_ConfirmForm input[name='emp_cd']").val(JSON.parse(result)[0].emp_cd);
            }
        });

        return check;
    }

    //전자서명
    function DayScheduleList_SignSubmit() {

        //유효한 ID인지 확인
        var checkUser = DayScheduleList_IDValidation();
        if (checkUser) {

            //상단 삭제버튼 클릭 -> 점검자 / 확인자 서명 취소
            if (DayScheduleList_signGubun == "LastSignCheck") {

                if (DayScheduleList_lastEmpCd != DayScheduleList_pEmp_cd && DayScheduleList_lastEmpCd != "" && DayScheduleList_pEmp_cd != "") {
                    alert("마지막 서명자의 서명이 필요합니다");
                }

                if (DayScheduleList_CancelSign() == true) {
                    //전자서명 팝업 닫기
                    var popup = $("#DayScheduleList_Popup").dxPopup("instance");
                    popup.hide();

                    //DayScheduleList_SignerSearch();
                    DayScheduleList_GridSelect();
                } else {
                    alert("취소되지 않았습니다. 점검기록서를 확인하십시오");
                }

            //점검자 / 확인자 버튼 클릭 -> 점검자 / 확인자 서명 저장
            } else if (DayScheduleList_signGubun == "CheckClick_C" || DayScheduleList_signGubun == "CheckClick_Q") { //점검자 / 확인자 버튼 > 전자서명

                if (DayScheduleList_focusedRow_T != null) {


                    var signGrid = $("#DayScheduleListSignGrid").dxDataGrid("instance");
                    //서명 책임자와 서명자가 일치하지 않으면 대리자 권한을 체크한다.
                    if (signGrid.totalCount() > 0) {

                        if (signGrid.getDataSource().items()[sign_seq - 1].responsible_emp_cd == $("#DayScheduleList_ConfirmForm input[name='emp_cd']").val()) {
                            DayScheduleListSignExecute();

                        } else {

                            //서명자가 정해져 있지 않다면 서명권한을 체크하지 않고 누구든 서명이 가능하다.
                            if (signGrid.getDataSource().items()[sign_seq - 1].responsible_emp_cd != "" && signGrid.getDataSource().items()[sign_seq - 1].responsible_emp_cd != null) {

                                DayScheduleList_GetRepresentativeAuthority();
                            }
                        }

                    }
                }
            }

        } else {
            alert("인증에 실패했습니다");
        }

        setTimeout(function () {
            var popup = $("#DayScheduleList_Popup").dxPopup("instance");
            popup.hide();
        }, 1000);
    }


    function DayScheduleList_GetRepresentativeAuthority() {

        $.ajax({
            type: 'POST',
            async: false,
            url: '/PrevCk/DayScheduleList_GetRepresentativeAuthority',
            data: {
                emp_cd: $("#DayScheduleList_ConfirmForm input[name='emp_cd']").val(),//empCd -> checkuser에서 설정한 값..
                signSeq: sign_seq,
                signCode: '9301'
            },
            success: function (result) {

                if (result != "") {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.result == "N") {
                        alert("서명 권한이 없습니다.");
                    } else {
                        DayScheduleListSignExecute();
                    }
                }
            }
        })
    }


    function DayScheduleListSignExecute() {

        $.ajax({
            type: 'POST',
            url: '/PrevCk/DayScheduleList_SettingSign',
            async: false,
            data: {
                schedule_id: DayScheduleList_focusedRow_T.data.schedule_id,
                emp_cd: DayScheduleList_pEmp_cd,
                gubun: DayScheduleList_signChk
            },
            success: function (result) {
                if (result.length > 0) {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    alert(json.messege);
                    DayScheduleList_GridSelect();

                } else {
                    alert("전자서명에 실패했습니다");
                }
            }
        });
    }


    //전자서명 입력 초기화
    function DayScheduleList_clearSignInput() {
        $('#DayScheduleList_SignForm')[0].reset();
        $("#DayScheduleList_ConfirmForm input[name='dept_nm']").val("");
        $("#DayScheduleList_ConfirmForm input[name='emp_nm']").val("");
    }


    //그리드 이벤트

    function DayScheduleList_OnToolbarPreparing(e) {
        var toolbarItems = e.toolbarOptions.items;

        $.each(toolbarItems, function (_, item) {

            if (item.name == "saveButton") {
                item.visible = false;
            }

            //되돌리기 버튼 클릭시
            if (item.name == "revertButton") {
                item.options.onClick = function (args) {
                    e.component.cancelEditData();
                    DaySchedule_tempArray = new Array();
                };
            }
        });
    }

    //점검 기록서 그리드 포커스 변경시
    function DayScheduleList_OnFocusedRowChanged_Top(e) {

        if (!e.row || !e.row.data) {
            DayScheduleList_focusedRow_T = null;
            $("#DayScheduleList textarea[name=comment]").val("");
        } else {
            DayScheduleList_focusedRow_T = e.row;
            DayScheduleList_GridSelect2();
            DayScheduleList_GetFileList();
            DayScheduleList_SignerSearch();

            $("#DayScheduleList textarea[name=comment]").val(DayScheduleList_focusedRow_T.data.comment);
        }
    }

    //점검 기록서 체크사항 그리드 포커스 변경시
    function DayScheduleList_OnFocusedRowChanged_Bottom(e) {
        if (!e.row || !e.row.data) {
            DayScheduleList_focusedRow_B = null;
        } else {
            DayScheduleList_focusedRow_B = e.row;
        }
    }

    //파일 그리드 포커스 변경시
    function DayScheduleList_OnFocusedRowChanged_File(e) {
        if (!e.row.data) {
            DayScheduleList_focusedRow_F = null;
        } else {
            DayScheduleList_focusedRow_F = e.row;
        }
    }

    //체크사항 수정
    function DayScheduleList_OnRowUpdated(e) {
        var data = e.data;
        data.gubun = "U1";

        DaySchedule_tempArray.push(data);
    }



    function SetDayScheduleListData() {

    }

    //점검 기록서 파일 그리드
    //파일 열기
    function DayScheduleList_FileOpen() {
        if (DayScheduleList_focusedRow_T != null && DayScheduleList_focusedRow_F != null) {
            if (DayScheduleList_focusedRow_F.data.file_id == "" || DayScheduleList_focusedRow_F.data.file_id == null) return;

            document.location.assign('/PrevCk/DayScheduleList_OpenFile?schedule_id=' + DayScheduleList_focusedRow_T.data.schedule_id + '&file_id=' + DayScheduleList_focusedRow_F.data.file_id);
        }

    }

    //파일 삭제
    function DayScheduleList_FileDelete() {
        if (DayScheduleList_focusedRow_T != null && DayScheduleList_focusedRow_F != null) {
            var ok = confirm("파일을 삭제하시겠습니까?");
            if (ok) {
                $.ajax({
                    type: 'POST',
                    url: '/PrevCk/DayScheduleList_DeleteFile',
                    async: false,
                    data: {
                        schedule_id: DayScheduleList_focusedRow_T.data.schedule_id,
                        file_id: DayScheduleList_focusedRow_F.data.file_id
                    },
                    success: function (result) {
                        if (result.length > 0) {
                            var json = JSON.parse(result);

                            if (json.hasOwnProperty('sessionLoss')) {
                                alert("세션이 만료되었습니다.");
                                sessionStorage.clear();
                                location.replace("/Comm/Login");
                            }
                            DayScheduleList_GetFileList();
                            //alert(json.messege);
                        }
                    }
                });
            }

        }
    }

    //파일 관리
    function DayScheduleList_RaiseFileUploadEvent(id) {
        var fileUploader = $("#" + id).dxFileUploader("instance");

        fileUploader._isCustomClickEvent = true;        //fileuploader 호출하기 위해 설정
        fileUploader._$fileInput.click();               //fileuploader 호출
        fileUploader._uploadedAction = DayScheduleList_GetFileList;//fileuploader의 onuploaded 이벤트 발생

    }

    //파일 업로드
    function DayScheduleList_UploadAttachedFile(e) {
        if (DayScheduleList_focusedRow_T != null) {
            var name = e.component.option("name");
            var url = e.component.option("uploadUrl");

            url = updateQueryStringParameter(url, "name", name);
            url = updateQueryStringParameter(url, "schedule_id", DayScheduleList_focusedRow_T.data.schedule_id);

            e.component.option("uploadUrl", url);

        } else {
            alert("점검대상이 없습니다");
        }
    }


</script>
<div id="DayScheduleList" autoresize="Y">
    @*<h4 class="divTitle">점검 기록서</h4>*@

    @using (Html.DevExtreme().NamedTemplate("DayScheduleList_checkSignPopupTemplate"))
    {
        <h6>전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

        <form id="DayScheduleList_SignForm">

            <div class="input-wrapper">
                <label class="col-3">아이디</label>
                <input type="text" class="col-8 form-control" name="txt_ID">

                <label class="col-3">비밀번호</label>
                <input type="password" class="col-8 form-control" name="txt_Pass">
            </div>

        </form>
        <div class="align-content-end">
            <button class="btn btn-secondary" onclick="DayScheduleList_SignSubmit()">확인</button>
        </div>

        <br />
        <hr />

        <form id="DayScheduleList_ConfirmForm">

            <label class="col-3">부서</label>
            <input type="text" class="col-8 form-control" name="dept_nm" readonly="readonly" />
            <label class="col-3">성명</label>
            <input type="text" class="col-8 form-control" name="emp_nm" readonly="readonly" />
            <input type="hidden" name="emp_cd" />
        </form>

    }

    @(Html.DevExtreme().Popup()
            .ID("DayScheduleList_Popup")
            .Width(500)
            .Height(420)
            .ShowTitle(true)
            .Title("작업자 인증")
            .OnHidden("DayScheduleList_clearSignInput")
            .Visible(false)
            .DragEnabled(true)
            .CloseOnOutsideClick(false)
        )


    <div id="DayScheduleListTop" class="mainTop row">
        <div class="col-8">
            <form id="DayScheduleListForm">
                <div class="input-wrapper">
                    <div class="col-3 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">일자</span>
                        </div>
                        <input type="text" class="form-control datepicker text-center" name="s_schedule_date1" value="@DateTime.Today.ToShortDateString()" />
                        <label class="p-1">~</label>
                        <input type="text" class="form-control datepicker text-center" name="s_schedule_date2" value="@DateTime.Today.ToShortDateString()" />
                    </div>

                    <div class="col-2 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">구분</span>
                        </div>
                        <select class="form-control" name="s_obj_type">
                            @foreach (DataRow row in ((DataTable)ViewBag.obj_type).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="col-2 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">작업</span>
                        </div>
                        <select class="form-control" name="s_work_type">
                            @foreach (DataRow row in ((DataTable)ViewBag.work_type).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="col-2 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">주기</span>
                        </div>
                        <select class="form-control" name="s_schedule_type">
                            @foreach (DataRow row in ((DataTable)ViewBag.schedule_type).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="col-3 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">대상</span>
                        </div>
                        <input type="text" class="form-control" name="obj_cd" />
                    </div>
                </div>
            </form>
        </div>

        <div class="CRUD-btn col-4">
            @{ Html.SetToolbar(0, true, "Search;Edit;Delete;Save;Undo;Preview;Print;Excel;"); }
            @*@(Html.DevExtreme().Toolbar()
                    .ID("DayScheduleList_Toolbar")
                    .Items(items =>
                      {
                          items.Add()
                              .Widget(w => w
                                  .Button()
                                  .Type(ButtonType.Default)
                                  .StylingMode(ButtonStylingMode.Contained)
                                  .ID("DayScheduleListSearch")
                                  .Icon("search")
                                  .Text("조회")
                                  .OnClick("DayScheduleListSearch")
                              )
                              .Location(ToolbarItemLocation.After);
                      })
                      .Items(items =>
                      {
                          items.Add()
                              .Widget(w => w
                              .Button()
                              .Type(ButtonType.Default)
                              .StylingMode(ButtonStylingMode.Contained)
                              .ID("DayScheduleListEdit")
                              .Icon("edit")
                              .Text("수정")
                              .OnClick("DayScheduleListEdit")
                              )
                              .Location(ToolbarItemLocation.After);
                      })
                      .Items(items =>
                      {
                          items.Add()
                              .Widget(w => w
                              .Button()
                              .Type(ButtonType.Default)
                              .StylingMode(ButtonStylingMode.Contained)
                              .ID("DayScheduleListDelete")
                              .Icon("trash")
                              .Text("삭제")
                              .OnClick("DayScheduleListDelete")
                              )
                              .Location(ToolbarItemLocation.After);
                      })
                      .Items(items =>
                      {
                          items.Add()
                              .Widget(w => w
                              .Button()
                              .Type(ButtonType.Default)
                              .StylingMode(ButtonStylingMode.Contained)
                              .ID("DayScheduleListSave")
                              .Icon("save")
                              .Text("저장")
                              .OnClick("DayScheduleListSave")
                              )
                              .Location(ToolbarItemLocation.After);
                      })
                      .Items(items =>
                      {
                          items.Add()
                              .Widget(w => w
                              .Button()
                              .Type(ButtonType.Default)
                              .StylingMode(ButtonStylingMode.Contained)
                              .ID("DayScheduleListUndo")
                              .Icon("undo")
                              .Text("취소")
                              .OnClick("DayScheduleListUndo")
                              )
                              .Location(ToolbarItemLocation.After);
                      })
            )*@
        </div>
    </div>


    <div class="row">
        <div class="col-9">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("DayScheduleList_TopGrid")
                    //.Selection(s => s.Mode(SelectionMode.Single))
                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
                    .Height(450)
                    .ShowBorders(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .FocusedRowEnabled(true)
                    .FocusedRowIndex(0)
                    //.DataSource(new JS("SetDayScheduleListData"))
                    .KeyExpr("schedule_id")
                    .Columns(c =>
                    {
                        c.Add().DataField("obj_type_nm").Caption("구분");
                        c.Add().DataField("obj_cd2").Caption("기기(관리)번호");
                        c.Add().DataField("obj_nm").Caption("대상");
                        c.Add().DataField("work_type_nm").Caption("작업");
                        c.Add().DataField("schedule_type_nm").Caption("주기");
                        c.Add().DataField("schedule_date").Caption("계획일자");
                        c.Add().DataField("check_time").Caption("점검일자");
                        c.Add().DataField("check_emp_nm1").Caption("점검자");
                        c.Add().DataField("check_emp_nm2").Caption("확인자");

                    })
                    .OnFocusedRowChanged("DayScheduleList_OnFocusedRowChanged_Top")
                    //.OnRowClick("DayScheduleList_OnFocusedRowChanged_Top")
                    .OnToolbarPreparing("HideToolbarButton")
                )
                @(Html.DevExtreme().DataGrid()
                    .ID("DayScheduleList_BottomGrid")
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                    .Height(410)
                    .ShowBorders(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .FocusedRowEnabled(true)
                    .FocusedRowIndex(0)
                    //.DataSource(new JS("SetDayScheduleListData"))
                    .KeyExpr("work_seq")
                    .Columns(c =>
                    {
                        c.Add().DataField("work_method").Caption("체크사항").AllowEditing(false);
                        c.Add().DataField("schedule_guide_data_type").Caption("자료종류").AllowEditing(false)
                        .Lookup(lookup => lookup
                                .DataSource(d => d.WebApi()
                                .RouteName("PrevCk")
                                .LoadAction("DayScheduleList_GetRepository")
                                .LoadMethod("GET")
                                .LoadParams(new
                                {
                                    gubun = "L"
                                }
                                ).Key("keyfield"))
                            .ValueExpr("keyfield")
                            .DisplayExpr("displayfield")
                        ).DataType(GridColumnDataType.String);

                        c.Add().DataField("schedule_result_manual_data").Caption("결과");
                    })
                    .OnFocusedRowChanged("DayScheduleList_OnFocusedRowChanged_Bottom")
                    .OnRowUpdated("DayScheduleList_OnRowUpdated")
                    .OnToolbarPreparing("DayScheduleList_OnToolbarPreparing")
                )
            </div>
        </div>
        <div class="col-3">
            <div class="box">
                <form>
                    <div class="divName">
                        <p>전자 서명 정보</p>
                    </div>

                    @(Html.DevExtreme().DataGrid()
                        .ID("DayScheduleListSignGrid")
                        .KeyExpr("sign_set_dt_id")
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .HoverStateEnabled(true)
                        .Scrolling( scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                        .FocusedRowEnabled(true)
                        .Height(101)
                        .OnCellClick("DayScheduleList_CheckClick")
                        .Columns(columns =>
                        {
                        columns.Add().DataField("displayfield").Width("20%").Caption("구분");
                        columns.Add().DataField("sign_emp_nm").Width("20%").Caption("서명자");
                        columns.Add().DataField("sign_time").Width("35%").Caption("서명일자");
                        columns.Add().DataField("sign_image").Width("20%").Caption("서명")
                            .AllowFiltering(false)
                            .AllowSorting(false)
                            .CellTemplate(@<text>
                                    <div>
                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                    </div>
                                </text>);
                        })
                    )

                    @*<div class="input-wrapper">
            <label class="col-3">전자서명</label>
            <div class="input-group col-4">
                <button type="button" class="btn btn-secondary DaySignButton" onclick="DayScheduleList_CheckClick_C()">점검자</button>

                @(Html.DevExtreme().Button()
                    .Text("점검자")
                    .Type(ButtonType.Default)
                    .StylingMode(ButtonStylingMode.Outlined)
                    .Width("50%")
                    //.ID("check")
                    .OnClick("DayScheduleList_CheckClick_C")
                    )
                    @(Html.DevExtreme().Button()
                    .Text("확인자")
                    .Type(ButtonType.Default)
                    .StylingMode(ButtonStylingMode.Outlined)
                    .Width("50%")
                    //.Width(60)
                    //.ID("check")
                    .OnClick("DayScheduleList_CheckClick_Q")
                    )
            </div>
            <div class="input-group col-4">
                <button type="button" class="btn btn-secondary DaySignButton" onclick="DayScheduleList_CheckClick_Q()">확인자</button>
            </div>
        </div>

        <div class="input-wrapper">
            <label class="col-3">서명자</label>
            <div class="input-group col-8">
                <input type="text" class="display-none" name="c_emp_cd1" readonly />
                <input type="text" class="display-none" name="c_emp_cd2" readonly />
                <input type="text" class="form-control" name="c_emp_nm1" readonly />
                <input type="text" class="form-control" name="c_emp_nm2" readonly />
            </div>
        </div>

        <div class="input-wrapper">
            <label class="col-3">서명일시</label>
            <div class="input-group col-8">
                <input type="text" class="form-control" name="c_emp_time1" readonly />
                <input type="text" class="form-control" name="c_emp_time2" readonly />
            </div>
        </div>

        <div class="input-wrapper">
            <label class="col-3" style="vertical-align:top;">signature</label>
            <div class="input-group form-control col-4" style="height:55px;">
                <img name="c_emp_sign1" id="c_emp_sign1" />
            </div>
            <div class="input-group form-control col-4" style="height:55px;">
                <img name="c_emp_sign2" id="c_emp_sign2" />
            </div>
        </div>*@

                </form>

                <form>
                    <div class="divName">
                        <p>파일 정보</p>
                    </div>

                    <div align="right">
                        @(Html.DevExtreme().FileUploader()
                    .SelectButtonText("등록")
                    .Width("95%")
                    .Height(50)
                    .Name("AttachedFile")
                    .ID("AttachedFile")
                    .LabelText("")
                    .Multiple(false)
                    //.AllowedFileExtensions(new[] { ".hwp", ".doc", ".docx", ".dot" })
                    .InvalidFileExtensionMessage("지원하지 않는 파일형식 입니다.")
                    .InvalidMaxFileSizeMessage("최대파일 사이즈는 10MB입니다.")
                    .UploadUrl(Url.Action("DayScheduleList_UploadFile", "PrevCk"))
                    .UploadMode(FileUploadMode.Instantly)
                    .MaxFileSize(10000000)
                    .OnValueChanged("DayScheduleList_UploadAttachedFile")
                    .OnUploaded("DayScheduleList_GetFileList")
                    .Visible(false)
                    )
                        <button type="button" class="btn btn-secondary" onclick="DayScheduleList_RaiseFileUploadEvent('AttachedFile')">등록</button>
                        <button type="button" class="btn btn-secondary" onclick="DayScheduleList_FileOpen()">열기</button>
                        <button type="button" class="btn btn-secondary" onclick="DayScheduleList_FileDelete()">삭제</button>
                    </div>

                    @(Html.DevExtreme().DataGrid()
                        .ID("DayScheduleList_FileGrid")
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                        .Height(180)
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .ShowRowLines(true)
                        .ColumnAutoWidth(true)
                        .AllowColumnResizing(true)
                        .FocusedRowEnabled(true)
                        .FocusedRowIndex(0)
                        //.DataSource(new JS("SetDayScheduleListData"))
                        .KeyExpr("file_id")
                        .Columns(c =>
                        {
                            c.Add().DataField("doc_file_name").Caption("첨부자료");
                            @*c.Add().DataField("delete_button").Caption("삭제")
                            .Width(50)
                            .CellTemplate(
                                @<text>
                                    <button type="button" onclick="DayScheduleList_FileDelete()">...</button>
                                </text>);

                            c.Add().DataField("open_button").Caption("열기")
                            .Width(50)
                            .CellTemplate(
                                @<text>
                                    <button type="button" onclick="DayScheduleList_FileOpen()">...</button>
                                </text>);*@
                        })
                        .OnFocusedRowChanged("DayScheduleList_OnFocusedRowChanged_File")
                        .OnRowDblClick("DayScheduleList_FileOpen")
                    )

                </form>

                <form>
                    <div class="divName">
                        <p>비고</p>
                    </div>
                    <div class="input-wrapper" style="margin-bottom:0px;">
                        <textarea class="form-control col-12" cols="40" rows="2" name="comment"></textarea>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>
