@using System.Data
@using HACCP.Libs
@using HACCP.Libs.Views

@{
    Layout = null;
    ViewBag.Title = "PackingOrderLedger";

    var PackingOrders = @Html.Raw(Json.Encode(ViewBag.PackingOrders.Data));
    var Items = @Html.Raw(Json.Encode(ViewBag.Items.Data));
    var PackingOrderLedgerAuth = @Html.Raw(Json.Encode(ViewBag.PackingOrderLedgerAuth.Data));
}
@{
    var tabs = new[] {
        new { id = 1, text = "포장지시대장작성" },
        new { id = 2, text = "전자서명"}
    };
}

@*포장지시 대장 작성*@

    <script id="PackingOrderLedgerJs">

        var _packingOrderLedgerTabNum = '1';
        var _packingOrderLedgerSignCnt = 0;
        var _packingOrderLedgerCellClickEvent;
        var _packingOrderLedgerIsEditable = false;
        var _packingOrderLedgerChanges = new Array();
        var _packingOrderLedgerID = "";
        var _packingOrderLedgerSignGubun = "";
        var _packingOrderLedgerCRUDGubun = "";
        var _packingOrderLedgerSignData;
        var _isOK = true;
        var _packingOrderLedgerIsValid = false;

        $(function () {

            var ds = @Items;

            var columns = [
                { dataField: "item_cd", caption: "품목코드" },
                { dataField: "item_nm", caption: "품목명" }
            ];

            createPopup("PackingOrderLedgerItem", "품목조회", ds, columns);

            setDatePicker("#PackingOrderLedger .datepicker");

            var PackingOrderLedgerAuth = JSON.parse(@PackingOrderLedgerAuth)[0];

            if (PackingOrderLedgerAuth.form_query != "Y") {
                $("#PackingOrderLedgerSearch").remove();
            }
            if (PackingOrderLedgerAuth.form_insert != "Y") {
                $("#PackingOrderLedgerInput").remove();
            }
            if (PackingOrderLedgerAuth.form_edit != "Y") {
                $("#PackingOrderLedgerEdit").remove();
            }
            if (PackingOrderLedgerAuth.form_delete != "Y") {
                $("#PackingOrderLedgerDelete").remove();
            }

            var PackingOrders = @PackingOrders;

            if (PackingOrders.length > 0) {
                $("#PackingOrderLedgerGrid_1").dxDataGrid("option", "dataSource", JSON.parse(@PackingOrders));
            }

            PackingOrderLedgerEditing(false);

        });

        // 수정중인지 체크
        function PackingOrderLedgerEditing(isEditing) {

            // 수정중일때
            if (isEditing) {
                $("#PackingOrderLedgerSearch").dxButton().parent().parent().addClass("display-none");//조회 숨김
                $("#PackingOrderLedgerDelete").dxButton().parent().parent().addClass("display-none");//삭제 숨김
                $("#PackingOrderLedgerInput").dxButton().parent().parent().addClass("display-none");//입력 숨김
                $("#PackingOrderLedgerEdit").dxButton().parent().parent().addClass("display-none");//수정 숨김

                $("#PackingOrderLedgerSave").dxButton().parent().parent().removeClass("display-none");//저장 보이기
                $("#PackingOrderLedgerUndo").dxButton().parent().parent().removeClass("display-none");//취소 보이기

                $("#PackingOrderLedgerForm :disabled").prop('disabled', false);
                $("#PackingOrderLedgerGrid_1").dxDataGrid("option", "disabled", true);
                //$("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "disabled", false);
                //$("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("option", "disabled", true);

            } else {
                $("#PackingOrderLedgerSearch").dxButton().parent().parent().removeClass("display-none");//조회 보이기
                $("#PackingOrderLedgerDelete").dxButton().parent().parent().removeClass("display-none");//삭제 보이기
                $("#PackingOrderLedgerInput").dxButton().parent().parent().removeClass("display-none");//입력 보이기
                $("#PackingOrderLedgerEdit").dxButton().parent().parent().removeClass("display-none");//수정 보이기

                $("#PackingOrderLedgerSave").dxButton().parent().parent().addClass("display-none");//저장 숨기기
                $("#PackingOrderLedgerUndo").dxButton().parent().parent().addClass("display-none");//취소 숨기기

                $("#PackingOrderLedgerForm :enabled").prop('disabled', true);
                $("#PackingOrderLedgerGrid_1").dxDataGrid("option", "disabled", false);
                //$("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "disabled", true);
                //$("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("option", "disabled", false);

            }

            $("#PackingOrderLedgerForm select[name=order_dept_2]").readonly(true);

            $('#PackingOrderLedgerDatePicker3').datepicker('destroy');
            $('#PackingOrderLedgerDatePicker3').attr('readonly', true);

        }

        // 조회
        function PackingOrderLedgerSearch() {

            var formData = $("#PackingOrderLedgerSearchForm").serialize();

            $.ajax({
                type: 'POST',
                async: false,
                url: '/PackingManage/GetPackingOrder',
                data: formData,
                dataType: 'json',
                success: function (result) {

                    if (result.length < 1) {
                        $("#PackingOrderLedgerGrid_1").dxDataGrid("option", "dataSource", []);
                        $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "dataSource", []);
                        $("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("option", "dataSource", []);
                        $("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("instance").option("focusedRowEnabled", false);
                        return;
                    }

                    var json = JSON.parse(result);

                    $("#PackingOrderLedgerGrid_1").dxDataGrid("option", "dataSource", json);
                }
            })
            UtilView.setGridFocus("G", "PackingOrderLedgerGrid_1");

        }

        // 포장지시 그리드 포커스 변경
        function PackingOrderLedgerSelectPackingOrder() {

            _packingOrderLedgerSignCnt = 0;

            var grid = $("#PackingOrderLedgerGrid_1").dxDataGrid("instance");
            var data = getGridRowByKey("PackingOrderLedgerGrid_1", grid.option("focusedRowKey"));

            if (UtilView.isEmpty(data)) return;

            $.ajax({
                type: 'POST',
                async: false,
                url: '/PackingManage/SelectPackingOrderLedgerDetail',
                data: {
                    order_id: data.order_id,
                    item_cd: data.item_cd,
                },
                success: function (result) {

                    if (result[0].length > 0) {

                        $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "dataSource", JSON.parse(result[0]));
                        $("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("option", "dataSource", JSON.parse(result[1]));
                        $("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("instance").option("focusedRowEnabled", true);
                        $("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("instance").option("focusedRowIndex", 0);

                        for (var i = 0; i < JSON.parse(result[1]).length; i++) {
                            _packingOrderLedgerSignCnt += parseInt(JSON.parse(result[1])[i].sign_yn, 10);
                        }

                        //_packingOrderLedgerSignCnt = ;

                        $("#PackingOrderLedgerForm input[name=order_start]").val(data.order_date);
                        $("#PackingOrderLedgerForm select[name=order_dept_2]").val(data.making_dept_cd);
                    } else {
                        $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "dataSource", []);
                        $("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("option", "dataSource", []);
                        $("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("instance").option("focusedRowEnabled", false);
                    }
                }
            })

        }

        // 탭 클릭 시, 탭 이동
        function Tabs_itemClick(e) {

            var formData = new FormData($("#PackingOrderLedgerSearchForm")[0]);

            // 현재 보여지고 있는 Tab 이외의 Tab을 선택 했을 시,
            if (e.itemData.id !== _packingOrderLedgerTabNum) {

                // 1.제조지시대장작성
                if (e.itemData.id === 1) {
                    // 이전 Tab display-none
                    $("#PackingOrderLedgerTab_" + _packingOrderLedgerTabNum).addClass("display-none");
                    _packingOrderLedgerTabNum = '1';
                    $("#PackingOrderLedgerTab_" + _packingOrderLedgerTabNum).removeClass("display-none");

                    // 2.전자서명
                } else if (e.itemData.id === 2) {
                    // 이전 Tab display-none
                    $("#PackingOrderLedgerTab_" + _packingOrderLedgerTabNum).addClass("display-none");
                    _packingOrderLedgerTabNum = '2';
                    $("#PackingOrderLedgerTab_" + _packingOrderLedgerTabNum).removeClass("display-none");

                }

                // Tab Number
                formData.set("packingOrderLedgerTabNum", _packingOrderLedgerTabNum);

            }

        }

        // 검색용 팝업 제품
        function PackingOrderLedgerSearchItem() {
            var popup = $("#PackingOrderLedgerItemPopup").dxPopup("instance");

            popup.show();
        }

        // 검색용 팝업 제품 로우 더블클릭
        function PackingOrderLedgerItemRowDblClick(selectedItems) {

            var data = selectedItems.data;

            $("#PackingOrderLedgerItemCode").val(data.item_cd);

            var popup = $("#PackingOrderLedgerItemPopup").dxPopup("instance");

            popup.hide();

        }

        // 입력
        function PackingOrderLedgerInput() {

            PackingOrderLedgerEditing(true);
            _packingOrderLedgerIsEditable = true;
            _packingOrderLedgerCRUDGubun = "I";
            _packingOrderLedgerID = "";

            $('#PackingOrderLedgerDatePicker3').datepicker({
                format: "yyyy-mm-dd",	//데이터 포맷 형식(yyyy : 년 mm : 월 dd : 일 )
                autoclose: true,	//사용자가 날짜를 클릭하면 자동 캘린더가 닫히는 옵션
                clearBtn: true, //날짜 선택한 값 초기화 해주는 버튼 보여주는 옵션 기본값 false 보여주려면 true
                disableTouchKeyboard: false,	//모바일에서 플러그인 작동 여부 기본값 false 가 작동 true가 작동 안함.
                templates: {
                    leftArrow: '&laquo;',
                    rightArrow: '&raquo;'
                }, //다음달 이전달로 넘어가는 화살표 모양 커스텀 마이징
                showWeekDays: true,// 위에 요일 보여주는 옵션 기본값 : true
                todayHighlight: true,	//오늘 날짜에 하이라이팅 기능 기본값 :false
                toggleActive: true,	//이미 선택된 날짜 선택하면 기본값 : false인경우 그대로 유지 true인 경우 날짜 삭제
                language: "ko"	//달력의 언어 선택, 그에 맞는 js로 교체해줘야한다.

            })

            $("#PackingOrderLedgerForm select[name=order_dept_2]").readonly(false);

            $("#PackingOrderLedgerDatePicker3").prop("readonly", false);
            $("#PackingOrderLedgerDatePicker3").datepicker("disabled", false);

            $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "dataSource", []);
            $("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("option", "dataSource", []);
            $("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("instance").option("focusedRowEnabled", false);

            var today = new Date();

            var year = today.getFullYear();
            var month = ((today.getMonth() + 1) < 10 ? "0" + (today.getMonth() + 1) : (today.getMonth() + 1));
            var date = (today.getDate() < 10 ? "0" + today.getDate() : today.getDate());

            $('#PackingOrderLedgerForm input[name=order_start]').datepicker('update', year + '-' + month + '-' + date);

            var editing = {
                allowUpdating: true,
                allowAdding: true,
                allowDeleting: true,
                mode: 'batch'
            }
            $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "editing", editing);
        }

        // 수정
        function PackingOrderLedgerEdit() {

            _packingOrderLedgerIsEditable = true;
            _packingOrderLedgerCRUDGubun = "U";

            if (_packingOrderLedgerSignCnt > 0) {
                alert("서명된 대장은 수정할 수 없습니다.");
                return;
            }

            var grid = $("#PackingOrderLedgerGrid_1").dxDataGrid("instance");
            var data = getGridRowByKey("PackingOrderLedgerGrid_1", grid.option("focusedRowKey"));

            _packingOrderLedgerID = data.order_id;

            PackingOrderLedgerEditing(true);

            var editing = {
                allowUpdating: true,
                allowAdding: true,
                allowDeleting: true,
                mode: 'batch'
            }
            $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "editing", editing);
        }

        // 삭제
        function PackingOrderLedgerDelete() {

            if (_packingOrderLedgerSignCnt > 0) {
                alert("서명된 대장은 수정할 수 없습니다.");
                return;
            }

            if (!confirm("포장지시를 삭제하시겠습니까?")) {
                return;
            }

            _packingOrderLedgerCRUDGubun = "D";

            var grid = $("#PackingOrderLedgerGrid_1").dxDataGrid("instance");
            var data = getGridRowByKey("PackingOrderLedgerGrid_1", grid.option("focusedRowKey"));

            var targetData = $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "dataSource");

            _packingOrderLedgerID = data.order_id;

            PackingOrderLedgerCRUDExcute(targetData);

        }

        // 저장
        async function PackingOrderLedgerSave() {

            if (!confirm("변경사항을 저장하시겠습니까?")) {
                return;
            }

            _isOK = true;

            await $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("instance").saveEditData();

            if (!_packingOrderLedgerIsValid) {
                return;
            }

            PackingOrderLedgerCRUDExcute(_packingOrderLedgerChanges);
        }

        function PackingOrderLedgerCRUDExcute(data) {

            if (!_isOK) {
                alert("필수값을 입력해주세요.");
                return;
            }

            $.ajax({
                type: 'POST',
                url: '/PackingManage/PackingOrderLedgerCRUD',
                data: {
                    packingOrders: JSON.stringify(data),
                    order_date: $("#PackingOrderLedgerDatePicker3").val(),
                    making_dept_cd: $("#PackingOrderLedgerDept_2").val(),
                    order_id: _packingOrderLedgerID,
                    gubun: _packingOrderLedgerCRUDGubun
                },
                dataType: 'json',
                async: false,
                success: function (result) {

                    var jsonData = JSON.parse(result);

                    if (jsonData.hasOwnProperty("failMessege")) {
                        alert(jsonData.failMessege.replace(/\\n/g, "\\n"));

                        return;
                    }

                    alert(jsonData.resultMessege);

                    _packingOrderLedgerChanges = new Array();

                    var editing = {
                        allowUpdating: false,
                        allowAdding: false,
                        allowDeleting: false
                    }

                    $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "editing", editing);

                    _packingOrderLedgerCRUDGubun = "";
                    _packingOrderLedgerIsEditable = false;

                    PackingOrderLedgerEditing(false);

                    PackingOrderLedgerSearch();
                }
            })
        }

        // 취소
        function PackingOrderLedgerUndo() {

            if (!confirm("작성내용을 취소하시겠습니까?")) {
                return;
            }

            _packingOrderLedgerChanges = new Array();

            var editing = {
                allowUpdating: false,
                allowAdding: false,
                allowDeleting: false
            }

            $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("option", "editing", editing);

            _packingOrderLedgerCRUDGubun = "";
            _packingOrderLedgerIsEditable = false;

            PackingOrderLedgerEditing(false);

            PackingOrderLedgerSelectPackingOrder();
        }


        function PackingOrderLedgerUpdate(info) {

            var data = info.data;


            if (data == null || data.order_qty == null || typeof (data.order_qty) === "undefined" || data.order_qty === "") {
                _isOK = false;
                return;
            }

            if (_packingOrderLedgerCRUDGubun === "I") {
                data.gubun = "I";
                delete data.__KEY__;
            } else {
                data.gubun = "U";
            }

            _packingOrderLedgerChanges.push(data);

        }

        function PackingOrderLedgerInsert(info) {

            var data = info.data;


            if (data == null || data.order_qty == null || typeof (data.order_qty) === "undefined" || data.order_qty === "") {
                _isOK = false;
                return;
            }

            data.gubun = "I";

            delete data.__KEY__;

            _packingOrderLedgerChanges.push(data);
        }

        function PackingOrderLedgerDeleteOrder(info) {

            var data = info.data;

            if (_packingOrderLedgerCRUDGubun === "I") {

                var idx = _packingOrderLedgerChanges.findIndex(function (item) {
                    return item.order_no === data.order_no;
                });

                _packingOrderLedgerChanges.splice(idx, 1);

                return;
            }

            data.gubun = "D";

            _packingOrderLedgerIsValid = true;
            _packingOrderLedgerChanges.push(data);

        }

        // 전자서명 테이블 클릭
        function PackingOrderLedgerSign(e) {

            _packingOrderLedgerSignData = e.data;

            if (e.columnIndex == 3) {
                _packingOrderLedgerSignGubun = "UpdateSignature";

                if (e.data.prev_sign_yn == "0") {
                    alert("먼저 앞 단계 승인이 필요합니다.");
                    return;
                }

                if (e.data.sign_yn == "1") {

                    if (e.data.next_sign_yn == "1") {
                        alert("이미 다음 단계가 승인 되어 있습니다.\n먼저 다음 단계 승인을 삭제(취소)해주세요. ");
                        return;
                    }

                    if (confirm("이미 승인 되었습니다. 서명을 삭제하시겠습니까?")) {
                        _packingOrderLedgerSignGubun = "DeleteSignature";
                    } else {
                        return;
                    }

                }

                var popup = $("#PackingOrderLedgerSignPopup").dxPopup("instance");
                popup.option("contentTemplate", $("#PackingOrderLedgerSignPopupTemplate"));
                popup.show();

            }
        }

        // 서명 권한 체크(id, pw)
        function PackingOrderLedgerSignSubmit() {

            var data = new FormData($('#PackingOrderLedgerSign_Form')[0]);

            var datagrid1 = $("#PackingOrderLedgerGrid_1").dxDataGrid("instance");
            var datagrid2 = $("#PackingOrderLedgerGrid_Tab_2").dxDataGrid("instance");

            data.set("gubun", "S");

            var gridData1 = getGridRowByKey("PackingOrderLedgerGrid_1", datagrid1.option("focusedRowKey"));
            var gridData2 = getGridRowByKey("PackingOrderLedgerGrid_Tab_2", datagrid2.option("focusedRowKey"));

            $.ajax({
                type: 'POST',
                async: false,
                url: '/Comm/IDValidation',
                data: data,
                contentType: false,
                processData: false,
                success: function (result) {

                    if (result.length <= 0) {
                        alert("잘못된 ID,PW 입니다.");
                        return;
                    }

                    var isOK = false;

                    if (_packingOrderLedgerSignData.responsible_emp_cd !== JSON.parse(result)[0].emp_cd) {

                        $.ajax({
                            type: 'GET',
                            url: '/Comm/DelegateCheck',
                            data: {
                                emp_cd: JSON.parse(result)[0].emp_cd,
                                sign_set_cd: "2008",
                                sign_set_seq: gridData2.sign_set_dt_seq
                            },
                            async: false,
                            success: function (result) {

                                if (result.length > 0) {
                                    isOK = true;
                                } else {
                                    isOK = false;
                                }
                            }
                        });
                    } else {
                        isOK = true;
                    }

                    if (!isOK) {
                        alert("권한이 없는 사용자입니다.");
                        return;
                    }

                    $("#PackingOrderLedgerSignConfirmForm input[name='dept_nm']").val(JSON.parse(result)[0].dept_nm);
                    $("#PackingOrderLedgerSignConfirmForm input[name='emp_nm']").val(JSON.parse(result)[0].emp_nm);

                    setTimeout(function () {
                        $.ajax({
                            type: 'POST',
                            async: false,
                            url: '/PackingManage/PackingOrderSignCRUD',
                            data: {
                                gubun: _packingOrderLedgerSignGubun,
                                c_seq: gridData2.sign_set_dt_seq,
                                emp_cd: JSON.parse(result)[0].emp_cd,
                                order_id: gridData1.order_id,
                                validation_type: "2",
                                sign_status: _packingOrderLedgerSignCnt
                            },
                            success: function (result) {

                                alert(JSON.parse(result).messege);

                                PackingOrderLedgerSearch();
                                //PackingOrderLedgerSelectPackingOrder();

                            }
                        });

                        _PackingOrderLedgerSignGubun = "";

                        var popup = $("#PackingOrderLedgerSignPopup").dxPopup("instance");
                        popup.hide();
                    }, 1000);
                }
            });

        }

        // 서명 인풋 초기화
        function clearPackingOrderLedgerSignInput() {
            $('#PackingOrderLedgerSign_Form')[0].reset();
            $("#PackingOrderLedgerSignConfirmForm input[name='dept_nm']").val("");
            $("#PackingOrderLedgerSignConfirmForm input[name='emp_nm']").val("");
        }

        // 컬럼 클릭 이벤트 제한
        function PackingOrderEditableColumn(cellElement, cellInfo) {

            if (cellElement.rowType != "data" || !cellElement.isEditing)
                return;
            if (cellElement.column.dataField === 'order_no' && !cellElement.row.inserted)
                cellElement.element.find('input').prop('disabled', true);
            if (cellElement.column.dataField === 'item_nm' && !cellElement.row.inserted)
                cellElement.element.find('input').prop('disabled', true);
            if (cellElement.column.dataField === 'order_status_nm' && !cellElement.row.inserted)
                cellElement.element.find('input').prop('disabled', true);

        }

        // 제조제품 조회 팝업
        function PackingOrderLedgerCellClick(e) {

            if (!_packingOrderLedgerIsEditable) {
                return;
            }

            _packingOrderLedgerCellClickEvent = e;

            if (e.columnIndex == 2) {
                var grid = $("#PackingOrderLedgerGrid_Tab_1").dxDataGrid("instance");
                var visibleData = grid.getVisibleRows()[e.rowIndex];

                if (typeof visibleData.data.order_qty == "undefined") {
                    alert("지시 수량을 입력해주세요.");
                    return;
                } else {

                    var requestData = {
                        dept_cd: $("#PackingOrderLedgerDept_2").val(),
                        batch_size: e.data.order_qty
                    };

                    $.ajax({
                        type: "GET",
                        url: '/PackingManage/SelectItemPopup',
                        traditional: true,
                        data: requestData
                    }).done(function (response) {
                        var popup = $("#PackingOrderLedgerItemPopup2").dxPopup('instance');

                        popup.option("contentTemplate", function (content) {

                            content.append(response);
                        });

                        popup.show();

                    }).fail(function (data) {
                        alert("Failed: " + data.response);
                    });
                }

            }


            else if (e.columnIndex == 4) {

                if (!e.data.item_cd) {
                    alert("제품코드를 선택해주세요.");
                    return;
                } else {

                    var requestData = {
                        item_cd: e.data.item_cd,
                    };

                    $.ajax({
                        type: "GET",
                        url: '/PackingManage/SelectOrderPopup',
                        traditional: true,
                        data: requestData
                    }).done(function (response) {
                        var popup = $("#PackingOrderLedgerOrderPopup").dxPopup('instance');

                        popup.option("contentTemplate", function (content) {

                            content.append(response);
                        });

                        popup.show();

                    }).fail(function (data) {
                        alert("Failed: " + data.response);
                    });

                }

            }

        }

        function setPackingOrderData() {

        }

        // 버튼 컬럼
        function PackingOrderLedgerCellWithButton(container, cellInfo) {

            $("<div>").html("<div style='float:left; line-height: 2;'>" + cellInfo.value + "</div><div style='float:right;' class='icon-plus'></div>")
                .appendTo(container);

            $(".icon-plus").dxButton({
                icon: "search",
                onClick: function (e) {

                }
            });
        }

        function PackingOrderGridValidation(e) {
            _packingOrderLedgerIsValid = e.isValid;
        }


    </script>

<div id="PackingOrderLedger">

    <div id="PackingOrderLedgerItemPopup"></div>

    <div>
        @(Html.DevExtreme().Popup()
                .ID("PackingOrderLedgerItemPopup2")
                .Width(1500)
                .Height(800)
                .ShowTitle(true)
                .Title("포장제품 조회")
                .Visible(false)
                .DragEnabled(false)
                .ContentTemplate(new TemplateName("popup-template"))
            )
    </div>

    <div>
        @(Html.DevExtreme().Popup()
                .ID("PackingOrderLedgerOrderPopup")
                .Width(900)
                .Height(700)
                .ShowTitle(true)
                .Title("제조지시 조회")
                .Visible(false)
                .DragEnabled(false)
                .ContentTemplate(new TemplateName("popup-template"))
            )
    </div>

    @using (Html.DevExtreme().NamedTemplate("PackingOrderLedgerSignPopupTemplate"))
    {
        <h6>전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

        <form id="PackingOrderLedgerSign_Form">

            <div class="input-wrapper">
                <label class="col-3">아이디</label>
                <input type="text" class="col-8 form-control" name="txt_ID">

                <label class="col-3">비밀번호</label>
                <input type="password" class="col-8 form-control" name="txt_Pass">
            </div>

        </form>
        <div class="align-content-end">
            <button onclick="PackingOrderLedgerSignSubmit()">확인</button>
        </div>

        <br />
        <hr />

        <form id="PackingOrderLedgerSignConfirmForm">

            <label class="col-3">부서</label>
            <input type="text" class="col-8 form-control" name="dept_nm" readonly="readonly" />
            <label class="col-3">성명</label>
            <input type="text" class="col-8 form-control" name="emp_nm" readonly="readonly" />

        </form>

    }

    @(Html.DevExtreme().Popup()
        .ID("PackingOrderLedgerSignPopup")
        .Width(500)
        .Height(420)
        .ShowTitle(true)
        .Title("작업자 인증")
        .OnHidden("clearPackingOrderLedgerSignInput")
        .Visible(false)
        .DragEnabled(true)
        .CloseOnOutsideClick(false)
    )

    <div class="mainTop row">

        <div class="col-8">

            <form id="PackingOrderLedgerSearchForm">

                <div class="input-wrapper">

                    <div class="input-group input-group-sm col-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">지시일자</span>
                        </div>
                        <input type="text" class="form-control datepicker" name="SearchDate" id="PackingOrderLedgerDatePicker1" value="@DateTime.Today.AddDays(-(DateTime.Today.Day-1)).ToShortDateString()">
                        <input type="text" class="form-control datepicker" name="SearchEndDate" id="PackingOrderLedgerDatePicker2" value="@DateTime.Today.ToShortDateString()">
                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">구분</span>
                        </div>
                        <select class="form-control" name="MakingDeptCd" id="PackingOrderLedgerDept">
                            @foreach (DataRow row in ((DataTable)Public_Function.GetMaster("공통코드", "S", "MD001")).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">상태</span>
                        </div>
                        <select class="form-control" name="MakingDeptCd2" id="PackingOrderLedgerState">
                            @foreach (DataRow row in ((DataTable)Public_Function.GetMaster("공통코드", "S", "CM091")).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="input-group input-group-sm col-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">제품</span>
                        </div>
                        <input type="text" class="form-control" name="ItemCd" id="PackingOrderLedgerItemCode">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary" type="button" onclick="PackingOrderLedgerSearchItem()">
                                <i class="fa fa-search"></i>
                            </button>
                        </div>
                    </div>

                </div>

            </form>

        </div>


        <div class="CRUD-btn col-4">
            @* === CRUD 버튼 === *@
            @{Html.SetToolbar(0, true, "Search;Input;Edit;Delete;Save;Undo"); }
        </div>

    </div>

    <div class="row">
        <div class="col-3 pr-1">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("PackingOrderLedgerGrid_1")
                    .ShowBorders(true)
                    .ShowColumnLines(true)
                    .ColumnAutoWidth(true)
                    .FocusedRowEnabled(true)
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                    .Height(869)
                    .FocusedRowIndex(0)
                    .KeyExpr("order_id")
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Columns(columns =>
                    {
                        columns.Add().DataField("order_date").Caption("지시일자");
                        columns.Add().DataField("making_dept_nm").Caption("구분");
                        columns.Add().DataField("sign_status_nm").Caption("상태");
                        columns.Add().DataField("work_order_cnt").Caption("제조지시수");
                    })
                    .OnFocusedRowChanged("PackingOrderLedgerSelectPackingOrder")
                )
            </div>
        </div>

        <div class="col-9 pl-0">

            <div class="box-height-auto mb-1" style="width:100%">

                <div class="divName">
                    <p>포장지시대장</p>
                </div>

                <form id="PackingOrderLedgerForm" style="padding: 25px 0;">

                    <div class="input-wrapper">
                        <label class="col-1">지시일자</label>
                        <div class="input-group col-3">
                            <input type="text" class="form-control col-12 required" name="order_start" id="PackingOrderLedgerDatePicker3" value="@DateTime.Today.ToShortDateString()">
                        </div>

                        <label class="col-1">구분 <star>*</star></label>
                        <div class="input-group col-3">
                            <select class="form-control required" name="order_dept_2" id="PackingOrderLedgerDept_2">
                                @foreach (DataRow row in ((DataTable)Public_Function.GetMaster("공통코드", "P", "MD001")).Rows)
                                {
                                    <option value="@row["keyfield"]">@row["displayfield"]</option>
                                }
                            </select>
                        </div>
                    </div>

                    <!-- visible(false)-->
                    <select class="col-1 form-control" name="order_dept_1" id="PackingOrderLedgerDept_1" style="display:none;">
                        @foreach (DataRow row in ((DataTable)Public_Function.GetMaster("공통코드", "P", "MD003")).Rows)
                        {
                            <option value="@row["keyfield"]">@row["displayfield"]</option>
                        }
                    </select>

                </form>

            </div>


            <div class="box-height-auto mb-0" style="height: 755px;">

                <!-- DevExtreme Tab -->
                <div id="PackingOrderLedger_Tab_div">
                    @(Html.DevExtreme().Tabs()
                        .ID("PackingOrderLedger_Tab_gap")
                        .DataSource(tabs)
                        .SelectedIndex(0)
                        .OnItemClick("Tabs_itemClick")
                    )
                </div>

                <div id="PackingOrderLedgerTab_1">

                    <!-- 포장지시대장작성 -->
                    @(Html.DevExtreme().DataGrid()
                        .ID("PackingOrderLedgerGrid_Tab_1")
                        .OnRowUpdated("PackingOrderLedgerUpdate")
                        .OnRowInserted("PackingOrderLedgerInsert")
                        .OnRowRemoved("PackingOrderLedgerDeleteOrder")
                        //.OnInitNewRow("PackingOrderLedgerInitNew")
                        .AllowColumnResizing(true)
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .ColumnAutoWidth(true)
                        .DataSource(new JS("setPackingOrderData"))
                        .KeyExpr("order_no")
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .OnCellClick("PackingOrderLedgerCellClick")
                        .OnCellPrepared("PackingOrderEditableColumn")
                        .OnToolbarPreparing("HideToolbarButton")
                        .OnRowValidating("PackingOrderGridValidation")
                        .Columns(columns =>
                        {
                            columns.Add().DataField("order_no").Caption("포장지시번호");
                            columns.Add().DataField("order_qty").DataType(GridColumnDataType.Number).Caption("지시수량");
                            columns.Add().DataField("item_cd").Caption("제품코드").CellTemplate(new JS("PackingOrderLedgerCellWithButton")).Width(150)
                                .ValidationRules(vr =>
                                {
                                    vr.AddRequired().Message("제품코드는 필수 입력사항입니다.");
                                });
                            columns.Add().DataField("item_nm").Caption("제품명");
                            columns.Add().DataField("lot_no").DataType(GridColumnDataType.String).Caption("제조번호").CellTemplate(new JS("PackingOrderLedgerCellWithButton")).Width(220)
                                .ValidationRules(vr =>
                                {
                                    vr.AddRequired().Message("제조번호는 필수 입력사항입니다.");
                                });
                            columns.Add().DataField("lot_date").DataType(GridColumnDataType.Date).Caption("제조일자");
                            columns.Add().DataField("valid_date").DataType(GridColumnDataType.Date).Caption("사용기한");
                            columns.Add().DataField("order_bigo").DataType(GridColumnDataType.String).Caption("비고");
                            columns.Add().DataField("order_status_nm").Caption("상태");
                            columns.Add().DataField("order_batch_size").Visible(false);
                            columns.Add().DataField("order_no_M").Visible(false);
                        })
                    )
                </div>


                <div class="display-none" id="PackingOrderLedgerTab_2">
                    @(Html.DevExtreme().DataGrid()
                        .ID("PackingOrderLedgerGrid_Tab_2")
                        .KeyExpr("displayfield")
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .OnCellClick("PackingOrderLedgerSign")
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Columns(columns =>
                        {
                            columns.Add().DataField("displayfield").Caption("구분");
                            columns.Add().DataField("sign_emp_nm").Caption("서명자");
                            columns.Add().DataField("sign_time").Width(185).Caption("서명일자");
                            columns.Add().DataField("sign_image").Caption("서명")
                                .AllowFiltering(false)
                                .AllowSorting(false)
                                .CellTemplate(@<text>
                                        <div>
                                            <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                        </div>
                                    </text>);
                            })
                        )
                </div>

            </div>

        </div>
    </div>

</div>