@using System.Data
@using HACCP.Libs
@using HACCP.Libs.Views

@{
    //*********************************************************
    // ▣ 페이지 공통 정의
    //*********************************************************

    //1. 페이지 접두어 지정
    var pagePrefix = ViewContext.RouteData.Values["action"].ToString();
    var pageControllerNm = ViewContext.RouteData.Values["controller"].ToString();

    ViewBag.Title = pagePrefix;
    Layout = null;
}

@{
    //*********************************************************
    // ▣ 페이지별 설정
    //*********************************************************

    // 1. View데이터 설정
    // 1.1. 검색객체
    //var srch = ViewData["srch"] as HACCP.Models.Equipment.OrderGuide2.SrchParam;
    var todayDatTimeStr = DateTime.Now.ToShortDateString();

    // 1.2. 좌측 Grid
    var OrderGuidePackingOrderData = Html.Raw(Json.Encode(ViewBag.OrderGuidePackingOrderData.Data));

    // 1.3. 우측 Form

    // 1.4. 코드성 데이터
    var OrderGuide2SignData = @Html.Raw(Json.Encode(ViewBag.OrderGuide2SignData.Data));
    var OrderGuide2ItemProcessData = @Html.Raw(Json.Encode(ViewBag.OrderGuide2ItemProcessData.Data));
    var OrderGuide2ReleaseData = @Html.Raw(Json.Encode(ViewBag.OrderGuide2ReleaseData.Data));
    var OrderGuide2Auth = @Html.Raw(Json.Encode(ViewBag.OrderGuide2Auth.Data));
}

@{
    string[] OrderGuide2PackingOrderGridKey = { "lot_no", "packing_order_no" };
}

@*포장기록서 승인*@

    <script id="@(pagePrefix)Js">

        var PagePrefix        = "@(pagePrefix)";                   //js사용, 페이지접두어
        var PageControllerNm  = "@(pageControllerNm)";     //js사용, 페이지컨트롤러명
        var FormNmSearch      = PagePrefix + "SearchForm";    // 폼명-검색용
        var FormNmWrite       = PagePrefix + "WriteForm";     // 폼명-등록용
        var _orderGuide2SignCnt = 0;
        var _oderGuide2OrderStatus = "";
        var _oderGuide2SignGubun = "";
        var _oderGuide2PackingOrderNo = "";

        UtilView.m_controller = PageControllerNm;
        UtilView.m_actionPrefix = PagePrefix;

        $(function () {
            ItemGudie2_ContentResize();

            // 1.1. 좌측 Grid 바인딩
            if ((@OrderGuidePackingOrderData).length <= 0) {

                OrderGuide2EditCheck(false, 'N');

                return;

            } else {

                OrderGuide2FillForm(JSON.parse(@OrderGuidePackingOrderData)[0]);

                OrderGuide2EditCheck(false, 'N');

                $("#OrderGuide2SignGrid").dxDataGrid("instance").option("dataSource", JSON.parse(@OrderGuide2SignData));

                if ((@OrderGuide2ReleaseData).length > 0) {
                    $("#OrderGuide2ItemGrid").dxDataGrid("instance").option("dataSource", JSON.parse(@OrderGuide2ReleaseData));
                    $("#OrderGuide2ItemProcessTreeList1").dxTreeList("instance").option("dataSource", JSON.parse(@OrderGuide2ItemProcessData));
                    $("#OrderGuide2ItemProcessTreeList2").dxTreeList("instance").option("dataSource", JSON.parse(@OrderGuide2ItemProcessData));
                }

            }

            // 1.2. 검색 설정

            //1.3. help팝업설정


            //1.4 툴바 활성/비활성
            OrderGuide2EditCheck(false, 'N');

            //1.5 event설정
            //1.5.1 검색


            //1.5.2 form


            //1.5.3 공통객체

            //datepicker
            setDatePicker("#OrderGuide2 .datepicker");

        });

        // 우측 상단 제조지시 폼 데이터 입력
        function OrderGuide2FillForm(data) {

            _oderGuide2OrderStatus = data.order_status;
            _oderGuide2PackingOrderNo = data.packing_order_no;

            $("#OrderGuide2WriteForm input[name=item_cd]").val(data.item_cd);
            $("#OrderGuide2WriteForm input[name=item_nm]").val(data.item_nm);
            $("#OrderGuide2WriteForm input[name=item_surface]").val(data.item_surface);
            $("#OrderGuide2WriteForm input[name=item_packunit]").val(data.item_packunit);
            $("#OrderGuide2WriteForm textarea[name=revision_document_no]").text(data.revision_document_no);

            $("#OrderGuide2WriteForm input[name=order_date]").val(data.order_date).datepicker("update");
            $("#OrderGuide2WriteForm input[name=start_date]").val(data.start_date).datepicker("update");


            $("#OrderGuide2WriteForm input[name=lot_no]").val(data.lot_no);
            $("#OrderGuide2WriteForm input[name=order_qty]").val(data.order_qty);
            $("#OrderGuide2WriteForm input[name=item_lot_size_unit]").val(data.item_lot_size_unit);

            $("#OrderGuide2WriteForm input[name=valid_date]").val(data.valid_date).datepicker("update");
            $("#OrderGuide2WriteForm input[name=order_bigo]").val(data.order_bigo);

            $("#OrderGuide2SearchForm select[name=order_status]").val(data.order_status);
            $("#OrderGuide2SearchForm select[name=order_status]").readonly(true);

            $("#OrderGuide2SearchForm input[name=order_no]").val(data.packing_order_no);
            $("#OrderGuide2SearchForm input[name=item_nm]").val(data.item_nm);

        }

        // 승인 버튼 토글 (제조지시 정보, 서명정보 div 노출 여부)
        function OrderGuide2PackingOrderToggleClick() {

            var isDisplaied = $("#OrderGuide2PackingOrderDiv").hasClass("display-none");

            if (isDisplaied) {
                $("#OrderGuide2PackingOrderDiv").removeClass("display-none");
            } else {
                $("#OrderGuide2PackingOrderDiv").addClass("display-none");
            }

            ItemGudie2_ContentResize();

        }

        // 자재 버튼 토글 (공정 트리리스트, bom 그리드 노출 상태 조절)
        function OrderGuide2ItemProcessToggleClick() {

            var isDisplayed = $("#OrderGuide2ItemProcessDiv").hasClass("display-none");

            if (isDisplayed) {
                $("#OrderGuide2ItemProcessDiv").removeClass("display-none");
                $("#OrderGuide2ReleaseDiv").addClass("display-none");
            } else {
                $("#OrderGuide2ItemProcessDiv").addClass("display-none");
                $("#OrderGuide2ReleaseDiv").removeClass("display-none");
            }
        }


        // 2. 검색영역

        function OrderGuide2SearchPackingOrder() {

            $("#OrderGuide2PackingOrderPopup").dxPopup("instance").show();

            $('#OrderGuide2PopupHeader .datepicker').datepicker({
                format: "yyyy-mm-dd",	//데이터 포맷 형식(yyyy : 년 mm : 월 dd : 일 )
                startDate: '-10y',	//달력에서 선택 할 수 있는 가장 빠른 날짜. 이전으로는 선택 불가능 ( d : 일 m : 달 y : 년 w : 주)
                endDate: '+10y',	//달력에서 선택 할 수 있는 가장 느린 날짜. 이후로 선택 불가 ( d : 일 m : 달 y : 년 w : 주)
                autoclose: true,	//사용자가 날짜를 클릭하면 자동 캘린더가 닫히는 옵션
                templates: {
                    leftArrow: '&laquo;',
                    rightArrow: '&raquo;'
                }, //다음달 이전달로 넘어가는 화살표 모양 커스텀 마이징
                showWeekDays: true,// 위에 요일 보여주는 옵션 기본값 : true
                todayHighlight: true,	//오늘 날짜에 하이라이팅 기능 기본값 :false
                toggleActive: true,	//이미 선택된 날짜 선택하면 기본값 : false인경우 그대로 유지 true인 경우 날짜 삭제
                weekStart: 0,//달력 시작 요일 선택하는 것 기본값은 0인 일요일
                language: "ko"	//달력의 언어 선택, 그에 맞는 js로 교체해줘야한다.
            });

            var dateStr = '@todayDatTimeStr';

            setOrderGuide2PackingOrderPopupData(dateStr, dateStr);

        }

        // 포장지시 검색용 팝업 내 검색
        function OrderGuide2PackingOrderSearch() {

            setOrderGuide2PackingOrderPopupData($("#packingOrder_start_date").val(), $("#packingOrder_end_date").val());
        }

        // 포장지시 검색용 팝업 내 검색
        function setOrderGuide2PackingOrderPopupData(sDate, eDate) {

            $.ajax({
                type: 'GET',
                url: '/PackingManage/SelectOrderGuide2PackingOrder',
                data: {
                    sDate: sDate,
                    eDate: eDate
                },
                success: function (result) {

                    if (result.length <= 0) {
                        $("#OrderGuide2PackingOrderGrid").dxDataGrid("instance").option("dataSource", []);
                        $("#OrderGuide2PackingOrderGrid").dxDataGrid("instance").option("focusedRowIndex", -1);
                        return;
                    }

                    $("#OrderGuide2PackingOrderGrid").dxDataGrid("instance").option("dataSource", JSON.parse(result));
                    $("#OrderGuide2PackingOrderGrid").dxDataGrid("instance").option("focusedRowIndex", 0);

                }
            });
        }

        // 포장지시 팝업 로우 선택
        function OrderGuide2PackingOrderSelect() {

            var grid = $("#OrderGuide2PackingOrderGrid").dxDataGrid("instance");

            if (grid.option("focusedRowKey") == null || grid.option("focusedRowKey") === "") {
                grid.option("focusedRowIndex", 0);
            }

            var data = getGridRowByKey("OrderGuide2PackingOrderGrid", grid.option("focusedRowKey"));

            $("#OrderGuide2SearchForm input[name=order_no]").val(data.packing_order_no);
            $("#OrderGuide2SearchForm input[name=item_nm]").val(data.item_nm);

            $("#OrderGuide2PackingOrderPopup").dxPopup("instance").hide();

            OrderGuide2Select(data.order_no, data.packing_order_no);
        }

        // 제조번호로 검색
        function OrderGuide2Select(order_no, packing_order_no) {

            _orderGuide2SignCnt = 0;

            var data = {
                order_no: order_no,
                packing_order_no: packing_order_no,
            };

            $.ajax({
                type: 'GET',
                url: '/PackingManage/SelectOrderGuide2',
                async: false,
                data: data,
                success: function (result) {

                    if (!Array.isArray(result)) {

                        return;
                    }

                    OrderGuide2FillForm(JSON.parse(result[0])[0]);
                    OrderGuide2EditCheck(false, 'N');

                    $("#OrderGuide2SearchForm select[name=order_status]").val(JSON.parse(result[0])[0].order_status);
                    $("#OrderGuide2SearchForm select[name=order_status]").readonly(true);

                    if (result[1].length > 0) {

                        $("#OrderGuide2SignGrid").dxDataGrid("instance").option("dataSource", JSON.parse(result[1]));

                        for (var i = 0; i < JSON.parse(result[1]).length; i++) {
                            _orderGuide2SignCnt += parseInt(JSON.parse(result[1])[i].sign_yn, 10);
                        }
                    } else {
                        $("#OrderGuide2SignGrid").dxDataGrid("instance").option("dataSource", []);
                    }

                    if (result[2].length > 0) {
                        $("#OrderGuide2ItemProcessTreeList1").dxTreeList("instance").option("dataSource", JSON.parse(result[2]));
                        $("#OrderGuide2ItemProcessTreeList2").dxTreeList("instance").option("dataSource", JSON.parse(result[2]));
                    } else {
                        $("#OrderGuide2ItemProcessTreeList1").dxTreeList("instance").option("dataSource", []);
                        $("#OrderGuide2ItemProcessTreeList2").dxTreeList("instance").option("dataSource", []);
                    }

                    if (result[3].length > 0) {
                        $("#OrderGuide2ItemGrid").dxDataGrid("instance").option("dataSource", JSON.parse(result[3]));
                    } else {
                        $("#OrderGuide2ItemGrid").dxDataGrid("instance").option("dataSource", []);
                    }
                }
            });
        }

        // 전자서명 테이블 클릭
        function OrderGuide2Sign(e) {

            //대장작성 여부, 자재불출 여부 확인
            switch (_oderGuide2OrderStatus) {

                case '0':

                    alert("대장작성 서명을 진행해주세요.");
                    return;

                case '1':

                    var gridData = $("#OrderGuide2ItemGrid").dxDataGrid("instance").option("dataSource");

                    if (UtilView.isEmpty(gridData)) {
                        alert("자재 불출지시가 확정되지 않았습니다.");
                        return;
                    }

                    //if (gridData.length <= 0) {
                    //    alert("불출지시 작업이 진행되지 않았습니다.");
                    //    return;
                    //}

                    break;

                //default:

                //    alert("작업중입니다.");
                //    return;

            }

            if (e.columnIndex == 3) {

                //var status = $("#OrderGuide2SearchForm select[name=order_status]").val();

                //입력 상태
                //if (status === "0") {
                //    alert("대장 작성 서명을 진행 해주세요.");
                //    return;
                //}

                _oderGuide2SignGubun = "EI";

                //앞단계 서명 체크 
                if (e.data.prev_sign_yn == "0") {
                    alert("먼저 앞 단계 승인이 필요합니다.");
                    return;
                }

                //서명취소
                if (e.data.sign_yn == "1") {

                    //입력(0), 대기(1), 준비(2) 상태에서만 취소가 가능
                    if (parseFloat(_oderGuide2OrderStatus) > 2) { //작업중부터 서명취소 불가
                        alert("작업중입니다.");
                        return;
                    }

                    if (confirm("이미 승인 되었습니다. 서명을 삭제하시겠습니까?")) {
                        _oderGuide2SignGubun = "ED";
                    }
                    else {
                        return;
                    }

                    if (e.data.next_sign_yn == "1") {
                        alert("이미 다음 단계가 승인 되어 있습니다.\n먼저 다음 단계 승인을 삭제(취소)해주세요. ");
                        return;
                    }
                }

                var popup = $("#OrderGuide2SignPopup").dxPopup("instance");
                popup.option("contentTemplate", $("#OrderGuide2SignPopupTemplate"));
                popup.show();

            }
        }

        // 서명 권한 체크(id, pw)
        function OrderGuide2SignSubmit() {

            var representative_yn = "N";
            var emp_cd = "";
            var isValidUser = true;

            var data = new FormData($('#OrderGuide2SignForm')[0]);

            var datagrid = ($("#OrderGuide2SignGrid").dxDataGrid("instance").getSelectedRowsData())[0];

            data.set("gubun", "S");

            $.ajax({
                type: 'POST',
                url: '/Comm/IDValidation',
                data: data,
                contentType: false,
                processData: false,
                async: false,
                success: function (result) {

                    if (!result) {
                        alert("권한이 없는 사용자이거나 잘못된 ID,PW 입니다.");
                        isValidUser = false;
                        return;
                    }

                    var json = JSON.parse(result)[0];

                    emp_cd = json.emp_cd;

                    $("input[name='dept_nm']").val(json.dept_nm);
                    $("input[name='emp_nm']").val(json.emp_nm);
                    
                    //서명 책임자와 서명자가 일치하지 않으면 대리자 권한을 체크한다.
                    if (datagrid.responsible_emp_cd != json.emp_cd) {

                        $.ajax({
                            type: 'POST',
                            url: '/ProductionManage/OrderGuideSignRepresentativeCk',
                            async: false,
                            data: {
                                mp_ck: 'P',
                                order_no: _oderGuide2PackingOrderNo,
                                sign_set_cd: "2002",
                                sign_set_dt_id: datagrid.sign_set_dt_id,
                                emp_cd: emp_cd
                            },
                            success: function (result) {

                                var json = JSON.parse(result);

                                if (json.hasOwnProperty('sessionLoss')) {
                                    alert("세션이 만료되었습니다.");
                                    sessionStorage.clear();
                                    location.replace("/Comm/Login");
                                }

                                if (json.messege.length <= 0) {
                                    alert("권한이 없는 사용자 입니다.");
                                    isValidUser = false;
                                    return;
                                }

                                representative_yn = "Y";
                                isValidUser = true;

                            }
                        });
                    }
                }
            });

            if (!isValidUser) {
                return;
            }


            $.ajax({
                type: 'POST',
                url: '/ProductionManage/OrderGuideSignCRUD',
                async: false,
                data: {
                    gubun: _oderGuide2SignGubun,
                    mp_ck: 'P',
                    order_no: _oderGuide2PackingOrderNo,
                    sign_set_cd: '2002',
                    sign_set_dt_id: datagrid.sign_set_dt_id,
                    emp_cd: emp_cd,
                    representative_yn: representative_yn
                },
                success: function (result) {

                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }
                }
            });

            OrderGuide2Select("", _oderGuide2PackingOrderNo);

            setTimeout(function () {
                var popup = $("#OrderGuide2SignPopup").dxPopup("instance");
                popup.hide();
            }, 1000);

        }

        // 서명 팝업 인풋 초기화
        function OrderGuide2ClearSignInput() {

            $('#OrderGuide2SignForm')[0].reset();
            $("#OrderGuide2SignForm input[name='dept_nm']").val("");
            $("#OrderGuide2SignForm input[name='emp_nm']").val("");

        }

        // 자재 자동 불출 버튼
        function OrderGuide2AutoRelease() {

            var wStatus = $("#OrderGuide2SearchForm select[name=order_status]").val()

            switch (wStatus) {
                case "1":
                    alert("포장기록서 승인을 먼저 해주세요.");

                    break;

                case "2":

                    var signData = $("#OrderGuide2SignGrid").dxDataGrid("instance").option("dataSource");

                    if (signData[signData.length - 1].sign_emp_nm === null || signData[signData.length - 1].sign_emp_nm === "") {
                        alert("포장기록서 승인을 먼저 해주세요.");
                        return;
                    }

                    var data = $("#OrderGuide2ItemGrid").dxDataGrid("instance").option("dataSource");

                    if (UtilView.isEmpty(data)) {
                        alert("자재 불출지시가 확정되지 않았습니다.");
                        return;
                    }

                    //if (data.length < 1) {
                    //    alert("불출지시 작업이 진행되지 않았습니다.");
                    //    return;
                    //}

                    if (!confirm("자재 자동불출을 진행하시겠습니까?")) return;                    

                    $.ajax({
                        type: 'POST',
                        url: '/PackingManage/OrderGuide2AutoRelease',
                        async: false,
                        data: {
                            order_no: _oderGuide2PackingOrderNo
                        },
                        success: function (result) {

                            var json = JSON.parse(result);

                            if (json.hasOwnProperty('sessionLoss')) {
                                alert("세션이 만료되었습니다.");
                                sessionStorage.clear();
                                location.replace("/Comm/Login");
                            }

                            alert(json.messege);

                            OrderGuide2Select("", _oderGuide2PackingOrderNo);
                        }

                    });

                    break;

                default:

                    alert("'" + $("#OrderGuide2SearchForm select[name=order_status] option[value=" + wStatus + "]").text() + "' 상태의 포장지시는 자동 불출 처리가 불가능 합니다.");

                    break;
            }
        }

        //2022.02.04 아오스 요청으로 추가(원료 문제로, 해당제품 중단)
        function orderGuide2Stop() {
            if (!$("#OrderGuide2SearchForm input[name=order_no]").val()) {
                alert("전표번호를 선택해주세요.");
                return;
            }

            var popup = $("#OrderGuide2StopPopup").dxPopup("instance");
            popup.show();
        }


        function OrderGuide2StopConfirm(chk) {

            if (UtilView.isEmpty($("#OrderGuide2StopForm input[name=OrderGuide2StopRemark]").val())) {
                alert("사유를 입력하세요."); return;
            }

            if (chk) {
                console.log($("#OrderGuide2StopForm input[name=OrderGuide2StopRemark]").val());
                $.ajax({
                    type: 'POST',
                    url: '/PackingManage/OrderGuide2Stop',
                    async: false,
                    data: {
                        packing_order_no: _oderGuide2PackingOrderNo,
                        remark: $("#OrderGuide2StopForm input[name=OrderGuide2StopRemark]").val()
                    },
                    success: function (result) {
                        if (!UtilView.isEmpty(result)) {
                            var json = JSON.parse(result);
                            alert(json.messege);
                        } else {
                            alert("작업중단에 실패했습니다");
                        }

                        OrderGuide2Select("", _oderGuide2PackingOrderNo);
                    }

                });
            }

            var popup = $("#OrderGuide2StopPopup").dxPopup("instance");
            popup.hide();
        }

        function OrderGuide2StopPopupClear() {           
            $('#OrderGuide2StopForm')[0].reset();
        }


        // 3. 툴바영역

        //조회
        function OrderGuide2Search() {

            if (!$("#OrderGuide2SearchForm input[name=order_no]").val()) {
                alert("전표번호를 선택해주세요.");
                return;
            }

            OrderGuide2Select("", $("#OrderGuide2SearchForm input[name=order_no]").val());
        }

        //수정
        function OrderGuide2Edit() {

            var status = $("#OrderGuide2SearchForm select[name=order_status]").val();

            if (_oderGuide2PackingOrderNo === "") {
                alert("제조 지시를 선택해주세요.");

                return;
            }

            if (parseInt(status) != 1) {
                alert("작업중인 기록서는 수정할 수 없습니다.");

                return;
            }

            if (_orderGuide2SignCnt > 0) {
                alert("서명된 기록서는 수정할 수 없습니다.");

                return;
            }

            var isOK = confirm("이 제조 기록서를 수정하시겠습니까?");

            if (!isOK) {
                return;
            }

            OrderGuide2EditCheck(true, 'U');
        }

        //저장
        function OrderGuide2Save() {

            var formData = new FormData($("#" + FormNmWrite)[0]);

            formData.set("order_status", $("#OrderGuide2SearchForm select[name=order_status]").val());
            formData.set("order_no", _oderGuide2PackingOrderNo);

            $.ajax({
                type: 'POST',
                url: '/PackingManage/OrderGuide2UpdatePackingOrder',
                async: false,
                contentType: false,
                processData: false,
                data: formData,
                success: function (result) {

                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    OrderGuide2Select("", _oderGuide2PackingOrderNo);
                }
            });

            OrderGuide2EditCheck(false, 'N');
        }

        //취소
        function OrderGuide2Undo() {
            OrderGuide2EditCheck(false, 'N');
        }

        // 수정중인지 체크
        function OrderGuide2EditCheck(nowEdit, status) {

            //if (status != null && status != undefined) {
            //    $('input[type=hidden][name=row_status]', $('#' + FormNmWrite)).val(status);
            //}
            if (nowEdit) {
                // 툴바 활성/비활성
                $('#OrderGuide2Save,   #OrderGuide2Undo').dxButton().parent().parent().removeClass("display-none");
                $('#OrderGuide2Search, #OrderGuide2Input,#OrderGuide2Edit,#OrderGuide2Delete').dxButton().parent().parent().addClass("display-none");

                $('#OrderGuide2WriteForm .datepicker').datepicker({
                    format: "yyyy-mm-dd",	//데이터 포맷 형식(yyyy : 년 mm : 월 dd : 일 )
                    startDate: '-10y',	//달력에서 선택 할 수 있는 가장 빠른 날짜. 이전으로는 선택 불가능 ( d : 일 m : 달 y : 년 w : 주)
                    endDate: '+10y',	//달력에서 선택 할 수 있는 가장 느린 날짜. 이후로 선택 불가 ( d : 일 m : 달 y : 년 w : 주)
                    autoclose: true,	//사용자가 날짜를 클릭하면 자동 캘린더가 닫히는 옵션
                    templates: {
                        leftArrow: '&laquo;',
                        rightArrow: '&raquo;'
                    }, //다음달 이전달로 넘어가는 화살표 모양 커스텀 마이징
                    showWeekDays: true,// 위에 요일 보여주는 옵션 기본값 : true
                    todayHighlight: true,	//오늘 날짜에 하이라이팅 기능 기본값 :false
                    toggleActive: true,	//이미 선택된 날짜 선택하면 기본값 : false인경우 그대로 유지 true인 경우 날짜 삭제
                    weekStart: 0,//달력 시작 요일 선택하는 것 기본값은 0인 일요일
                    language: "ko"	//달력의 언어 선택, 그에 맞는 js로 교체해줘야한다.
                });
                $('#OrderGuide2WriteForm .datepicker').prop('readonly', false);

                //그리드 및 폼 활성/비활성
                $('#' + FormNmWrite + " input").prop("disabled", false);

            }
            else {
                // 툴바 활성/비활성
                $('#OrderGuide2Save,#OrderGuide2Undo').dxButton().parent().parent().addClass("display-none");
                $('#OrderGuide2Search,#OrderGuide2Input,#OrderGuide2Edit,#OrderGuide2Delete').dxButton().parent().parent().removeClass("display-none");

                $('#OrderGuide2WriteForm .datepicker').datepicker('destroy');
                $('#OrderGuide2WriteForm .datepicker').prop('readonly', true);

                //그리드 및 폼 활성/비활성
                $("#OrderGuide2WriteForm input").prop("disabled", true);
            }
    }

        // 포커스 변경 테스트
        function OrderGuide2focusChanged() {

            if ($("#OrderGuide2PackingOrderGrid").dxDataGrid("instance").option("focusedRowIndex") < 0) {
                console.log('키없음');
                return;
            }

            console.log($("#OrderGuide2PackingOrderGrid").dxDataGrid("option", "focusedRowKey"));
        }

        function OrderGuide2Excel() {
            treeExportToExcel("OrderGuide2ItemProcessTreeList1", "포장기록서_승인_" + "@DateTime.Now.ToShortDateString()");
        }

        // 제조지시 조회 팝업 DataGridRow 구분값 미확정 일시 배경색 변경
        function OrderGuid2eWorkorderHighlightRow(e) {

            if (e.rowType === "data" && e.data.gubun === "미확정") {
                e.rowElement[0].style.backgroundColor = 'lightgreen';
            }
        }

        function OrderGuide2HideCheckbox(e) {

            if (e.parentType === "dataRow") {

                if (e.row.node.level === 0 && (e.dataField !== "seq" || e.dataField !== "process_cd" || e.dataField !== "name")) {
                    e.editorOptions.visible = false;
                }
            }
        }

        function OrderGuide2ParentNodeBackgroundColor(e) {

            if (e.rowType === "data" && e.level == 0) {
                e.rowElement[0].style.backgroundColor = '#e8e8e8';
            }
        }

        function ItemGudie2_ContentResize() {
            var topPoint;
            var topPoint_mb;

            var isCollpased = $("div#OrderGuide2 div#OrderGuide2PackingOrderDiv").hasClass("display-none");

            if (isCollpased) {
                topPoint = document.querySelector("div#OrderGuide2 div.mainTop").getBoundingClientRect().bottom;
                topPoint_mb = $("div#OrderGuide2 div.mainTop").css("margin-bottom").replace(/[^-\d\.]/g, '');
            } else {
                topPoint = document.querySelector("div#OrderGuide2 div#OrderGuide2PackingOrderDiv").getBoundingClientRect().bottom;
                topPoint_mb = $("div#OrderGuide2 div#OrderGuide2PackingOrderDiv").css("margin-bottom").replace(/[^-\d\.]/g, '');
            }
            var content_max_height = window.innerHeight - topPoint - topPoint_mb - 21;

            document.getElementById("OrderGuide2ItemProcessTreeList1").style.height = content_max_height + "px";
            document.getElementById("OrderGuide2ItemProcessTreeList2").style.height = content_max_height + "px";
            document.getElementById("OrderGuide2ItemGrid").style.height = Math.floor(content_max_height) + "px";
        }

    </script>

<!-- $Contents Wrapper-->
    <div id="@(pagePrefix)">
        <!-- $DIv 팝업 선언부-->
        <div>
            @(Html.DevExtreme().Popup()
            .ID(pagePrefix+"PackingOrderPopup")
            .Width(800)
            .Height(900)
            .ShowTitle(true)
            .Title("포장지시 조회")
            .Visible(false)
            .DragEnabled(false)
            .ContentTemplate(new TemplateName(pagePrefix + "PackingOrderTemplate"))
        )
        </div>

        @using (Html.DevExtreme().NamedTemplate(pagePrefix + "PackingOrderTemplate"))
        {
            @(Html.DevExtreme().ScrollView()
            .Width("100%")
            .Height("100%")
            .Content(@<text>
                <div>
                     @(Html.DevExtreme().Toolbar()
                        .ID(pagePrefix + "PackingOrderToolbar")
                        .Items(items =>
                        {
                            items.Add()
                                .Template(new TemplateName(pagePrefix + "PopupToolbarContent"))
                                .Location(ToolbarItemLocation.Before);

                            items.Add()
                                .Widget(w => w
                                    .Button()
                                    .Type(ButtonType.Default)
                                    .StylingMode(ButtonStylingMode.Contained)
                                    .ID(pagePrefix + "PackingOrderSearch")
                                    .Icon("search")
                                    .Text("조회")
                                .OnClick(pagePrefix + "PackingOrderSearch")
                                )
                                .Location(ToolbarItemLocation.After);

                            items.Add()
                                .Widget(w => w
                                    .Button()
                                    .Type(ButtonType.Default)
                                    .StylingMode(ButtonStylingMode.Contained)
                                    .ID(pagePrefix + "PackingOrderSelect")
                                    .Icon("check")
                                    .Text("확인")
                                .OnClick(pagePrefix + "PackingOrderSelect")
                                )
                                .Location(ToolbarItemLocation.After);
                        })
                    )


                    @(Html.DevExtreme().DataGrid()
                        .ID("OrderGuide2PackingOrderGrid")
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .ShowRowLines(true)
                        .ColumnAutoWidth(true)
                        .KeyExpr(OrderGuide2PackingOrderGridKey)
                        .FocusedRowEnabled(true)
                        .SearchPanel(s => s.Visible(true))
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                        .OnRowDblClick("OrderGuide2PackingOrderSelect")
                        .OnFocusedRowChanged("OrderGuide2focusChanged")
                        .OnRowPrepared("OrderGuid2eWorkorderHighlightRow")
                        .Height(700)
                        .Columns(columns =>
                        {
                            columns.Add().DataField("order_date").Caption("입력일자");
                            columns.Add().DataField("item_cd").Caption("포장제품");
                            columns.Add().DataField("item_nm").Caption("포장제품명");
                            columns.Add().DataField("lot_no").Caption("제조번호");
                            columns.Add().DataField("packing_order_no").Caption("전표번호");
                            columns.Add().DataField("gubun").Caption("불출상태");
                        })
                        )

                </div>
            </text>)
        )
        }

        @using (Html.DevExtreme().NamedTemplate(pagePrefix + "PopupToolbarContent"))
        {
            <div style="width:550px;">

                <div id="OrderGuide2PopupHeader" class="input-wrapper">

                    <label class="col-2">입력일자</label>
                    <input type="text" id="packingOrder_start_date" value="@DateTime.Today.ToShortDateString()" class="form-control col-4 datepicker">
                    <input type="text" id="packingOrder_end_date" value="@DateTime.Today.ToShortDateString()" class="form-control col-4 datepicker">

                </div>

            </div>
        }

        @* === 전자 서명 팝업 === *@
        @(Html.DevExtreme().Popup()
            .ID("OrderGuide2SignPopup")
            .Width(500)
            .Height(420)
            .ShowTitle(true)
            .Title("작업자 인증")
            .OnHidden("OrderGuide2ClearSignInput")
            .Visible(false)
            .DragEnabled(true)
            .CloseOnOutsideClick(false)
        )

        @using (Html.DevExtreme().NamedTemplate("OrderGuide2SignPopupTemplate"))
        {
            <h6>전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

            <form id="OrderGuide2SignForm">

                <div class="input-wrapper">
                    <label class="col-3">아이디</label>
                    <input type="text" class="col-8 form-control" name="txt_ID">

                    <label class="col-3">비밀번호</label>
                    <input type="password" class="col-8 form-control" name="txt_Pass">
                </div>

            </form>
            <div class="align-content-end">
                <button class="btn btn-outline-secondary" onclick="OrderGuide2SignSubmit()">확인</button>
            </div>

            <br />
            <hr />

            <label class="col-3">부서</label>
            <input type="text" class="col-8 form-control" name="dept_nm" readonly="readonly" />
            <label class="col-3">성명</label>
            <input type="text" class="col-8 form-control" name="emp_nm" readonly="readonly" />
        }

        @(Html.DevExtreme().Popup()
            .ID("OrderGuide2StopPopup")
            .Width(450)
            .Height(200)
            .ShowTitle(true)
            .Title("작업중단(사유작성 필수)")
            .Visible(false)
            .DragEnabled(true)
            .CloseOnOutsideClick(false)
            .OnHidden("OrderGuide2StopPopupClear")
            .ContentTemplate(new TemplateName("OrderGuide2StopPopupTemplate"))
        )


        @using (Html.DevExtreme().NamedTemplate("OrderGuide2StopPopupTemplate"))
        {
            <form id="OrderGuide2StopForm">
                <div class="input-wrapper" style="margin-bottom: 5px;">
                    <input type="text" style="height:80px;" class="col-12 form-control" name="OrderGuide2StopRemark" placeholder="작업중단 사유를 입력하세요" />
                </div>
            </form>

            <div style="text-align: right; margin-right: 7%;">
                <button class="btn btn-secondary" onclick="OrderGuide2StopConfirm(true)">확인</button>
                <button class="btn btn-secondary" onclick="OrderGuide2StopConfirm(false)">취소</button>
            </div>
        }


        <div id="ItemGuide2_Top" class="mainTop mb-1">
            <div class="row mb-1">
                <!-- $검색폼-->
                <div class="col-8">

                    <form id="@(pagePrefix)SearchForm">

                        <div class="input-wrapper">

                            <div class="input-group input-group-sm col-6">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">포장지시</span>
                                </div>
                                <input type="text" class="form-control col-3" name="order_no">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" onclick="OrderGuide2SearchPackingOrder()">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </div>
                                <input type="text" name="item_nm" class="form-control" readonly="readonly">
                                <select class="form-control col-2" name="order_status">
                                    @foreach (DataRow row in ((DataTable)Public_Function.GetMaster("공통코드", "N", "RT027")).Rows)
                                    {
                                        <option value="@row["keyfield"]">@row["displayfield"]</option>
                                    }
                                </select>
                            </div>

                            @*<button type="button" class="btn btn-secondary" onclick="OrderGuide2ItemProcessToggle()">자재</button>
                            <button type="button" class="btn btn-secondary" onclick="OrderGuide2PackingOrderToggle()">승인</button>
                            <button type="button" class="btn btn-secondary" onclick="OrderGuide2AutoRelease()">자재자동불출(임시)</button>*@

                        </div>

                    </form>

                </div>

                <!-- $CRUD버튼-->
                <div class="CRUD-btn col-4">
                    @* === CRUD 버튼 === *@
                    @{Html.SetToolbar(0, true, "Search;Edit;Save;Undo;Excel"); }
                </div>
            </div>

            <div class="row">

                <div class="col-12" style="display:inherit;" id="OrderGuide2Form2">

                    <div class="col-4 display-flex">
                        <div class="custom-control custom-switch pr-1">
                            <input type="checkbox" class="custom-control-input" id="OrderGuide2ItemProcessToggle" onclick="OrderGuide2ItemProcessToggleClick()">
                            <label class="custom-control-label" for="OrderGuide2ItemProcessToggle">자재 정보</label>
                        </div>
                        <div class="custom-control custom-switch pr-1">
                            <input type="checkbox" class="custom-control-input" id="OrderGuide2PackingOrderToggle" onclick="OrderGuide2PackingOrderToggleClick()">
                            <label class="custom-control-label" for="OrderGuide2PackingOrderToggle">승인 정보</label>
                        </div>
                    </div>

                    <div class="col-8 align-end-only">
                        <button type="button" class="btn btn-secondary btn-danger" onclick="orderGuide2Stop()">작업중단(사유작성)</button>
                        <button type="button" class="btn btn-secondary" onclick="OrderGuide2AutoRelease()">자재자동불출(임시)</button>
                    </div>

                </div>
            </div>

        </div>

        <!-- $Contents Main-->
        <div id="OrderGuide2PackingOrderDiv" class="display-none row mb-1">

            <div style="display:flex;">

                <div class="col-5 pr-1">

                    <div class="box mb-0">

                        <div class="divName">
                            <p>제조지시 정보</p>
                        </div>

                        <div class="menuDiv">

                            <form id="@(pagePrefix)WriteForm">

                                <div class="input-wrapper">

                                    <label class="col-2">제조제품</label>
                                    <div class="input-group col-2">
                                        <input type="text" class="form-control col-12" name="item_cd" readonly="readonly">
                                    </div>
                                    <div class="input-group col-6">
                                        <input type="text" class="form-control col-12" name="item_nm" readonly="readonly">
                                    </div>

                                </div>

                                <div class="input-wrapper">

                                    <label class="col-2">성상</label>
                                    <div class="input-group col-8">
                                        <input type="text" class="form-control col-12" name="item_surface" readonly="readonly">
                                    </div>

                                </div>

                                <div class="input-wrapper">

                                    <label class="col-2">포장단위</label>
                                    <div class="input-group col-2">
                                        <input type="text" class="form-control col-12" name="item_packunit" readonly="readonly">
                                    </div>
                                    <label class="col-2">관리번호</label>
                                    <div class="input-group col-4">
                                        <textarea type="text" name="revision_document_no" rows="3" class="form-control" readonly="readonly" />
                                    </div>

                                </div>

                                <div class="input-wrapper">

                                    <label class="col-2">입력일자</label>
                                    <div class="input-group col-2">
                                        <input type="text" class="form-control col-12 datepicker" name="order_date" readonly="readonly">
                                    </div>
                                    <label class="col-2">제조일자</label>
                                    <div class="input-group col-2">
                                        <input type="text" class="form-control col-12 datepicker" name="start_date" readonly="readonly">
                                    </div>

                                </div>

                                <div class="input-wrapper">

                                    <label class="col-2">제조번호</label>
                                    <div class="input-group col-2">
                                        <input type="text" class="form-control col-12 datepicker" name="lot_no" readonly="readonly">
                                    </div>
                                    <label class="col-2">제조단위</label>
                                    <div class="input-group col-4">
                                        <input type="number" class="form-control col-6 datepicker" name="order_qty" readonly="readonly">
                                        <input type="text" class="form-control col-6 datepicker" name="item_lot_size_unit" readonly="readonly">
                                    </div>

                                </div>

                                <div class="input-wrapper">
                                    <label class="col-2">사용기한</label>
                                    <div class="input-group col-2">
                                        <input type="text" class="form-control col-12 datepicker" name="valid_date" readonly="readonly">
                                    </div>
                                </div>

                                <div class="input-wrapper">
                                    <label class="col-2">비고</label>
                                    <div class="input-group col-8">
                                        <input type="text" class="form-control col-12" name="order_bigo" readonly="readonly">
                                    </div>
                                </div>

                            </form>

                        </div>

                    </div>

                </div>

                <div class="col-5 pl-0">

                    <div class="box mb-0">

                        <div class="divName">
                            <p>전자서명 정보 - 포장기록서 발행</p>
                        </div>

                        @(Html.DevExtreme().DataGrid()
                        .ID("OrderGuide2SignGrid")
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .ShowRowLines(true)
                        .ColumnAutoWidth(true)
                        .OnCellClick("OrderGuide2Sign")
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Columns(columns =>
                        {
                        columns.Add().DataField("displayfield").Caption("구분");
                        columns.Add().DataField("sign_emp_nm").Caption("서명자");
                        columns.Add().DataField("sign_time").Caption("서명일자").Width(170);
                        columns.Add().DataField("sign_image").Caption("서명")
                            .AllowFiltering(false)
                            .AllowSorting(false)
                            .CellTemplate(@<text>
                                    <div>
                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                    </div>
                                </text>);
                    })
                    )


                    </div>

                </div>

            </div>

        </div>

        <div class="row" id="OrderGuide2ItemProcessDiv">

            <div class="col-12">

                <div class="box mb-0">

                    @(Html.DevExtreme().TreeList()
                    .ID("OrderGuide2ItemProcessTreeList1")
                    .ShowBorders(true)
                    .ShowColumnLines(true)
                    .RootValue("")
                    .KeyExpr("mykey")
                    .ParentIdExpr("pkey")
                    .Height(600)
                    .OnEditorPreparing("OrderGuide2HideCheckbox")
                    .OnRowPrepared("OrderGuide2ParentNodeBackgroundColor")
                    .Columns(columns => {

                        columns.Add()
                            .DataField("seq")
                            .Caption("순서");

                        columns.Add()
                            .DataField("process_cd")
                            .Caption("코드");

                        columns.Add()
                            .DataField("name")
                            .Caption("공정/세부공정");

                        columns.Add()
                            .DataField("next_process_cd")
                            .Caption("다음공정");

                        columns.Add()
                            .DataField("next_process_nm")
                            .Caption("다음공정명");

                        columns.Add()
                            .DataField("order_proc_qc_ck")
                            .DataType(GridColumnDataType.Boolean)
                            .CalculateCellValue(@"function(rowData) { return rowData.order_proc_qc_ck == ""Y""; }")
                            .Caption("시험유무");

                        columns.Add()
                            .DataField("order_proc_transfer_ck")
                            .DataType(GridColumnDataType.Boolean)
                            .CalculateCellValue(@"function(rowData) { return rowData.order_proc_transfer_ck == ""Y""; }")
                            .Caption("인수인계");

                        columns.Add()
                            .DataField("workroom_cd")
                            .Caption("작업실");

                        columns.Add()
                            .DataField("workroom_nm")
                            .Caption("작업실명");

                        columns.Add()
                            .DataField("order_proc_warehouse")
                            .Caption("제공창고");

                        columns.Add()
                            .DataField("order_proc_warehouse_nm")
                            .Caption("제공창고명");

                        columns.Add()
                            .Lookup(lookup => lookup
                                .DataSource(d => d.WebApi()
                                    .RouteName("Comm")
                                    .LoadAction("GetCommon")
                                    .LoadParams(new
                                    {
                                        pGubun = "공통코드",
                                        pDiv = "N",
                                        pStrWhere = "RT006",
                                        pTableName = "1"
                                    }).Key("keyfield"))
                                .ValueExpr("keyfield")
                                .DisplayExpr("displayfield")
                            ).DataField("order_proc_make_status")
                            .Caption("제조상태");

                        columns.Add()
                            .Lookup(lookup => lookup
                                .DataSource(d => d.WebApi()
                                    .RouteName("Comm")
                                    .LoadAction("GetCommon")
                                    .LoadParams(new
                                    {
                                        pGubun = "공통코드",
                                        pDiv = "N",
                                        pStrWhere = "RT008",
                                        pTableName = "1"
                                    }).Key("keyfield"))
                                .ValueExpr("keyfield")
                                .DisplayExpr("displayfield")
                            ).DataField("order_proc_transfer_status")
                            .Caption("인수인계상태");

                        //columns.Add()
                        //    .Lookup(lookup => lookup
                        //        .DataSource(d => d.WebApi()
                        //            .RouteName("Comm")
                        //            .LoadAction("GetCommon")
                        //            .LoadParams(new
                        //            {
                        //                gubun = "L3"
                        //            }).Key("keyfield"))
                        //        .ValueExpr("keyfield")
                        //        .DisplayExpr("displayfield")
                        //        ).DataField("order_proc_qt_status")
                        //    .Caption("시험상태");


                        columns.Add()
                            .Lookup(lookup => lookup
                                .DataSource(d => d.WebApi()
                                    .RouteName("Comm")
                                    .LoadAction("GetCommon")
                                    .LoadParams(new
                                    {
                                        pGubun = "공통코드",
                                        pDiv = "N",
                                        pStrWhere = "RT007",
                                        pTableName = "1"
                                    }).Key("keyfield"))
                                .ValueExpr("keyfield")
                                .DisplayExpr("displayfield")
                            ).DataField("order_proc_qt_status")
                            .Caption("시험상태");

                        columns.Add()
                            .DataField("order_proc_keep_method")
                            .Caption("보관방법");

                        columns.Add()
                            .DataField("order_proc_remark")
                            .Caption("비고");

                        columns.Add()
                            .DataField("order_proc_content")
                            .Caption("단위중량(허가량)");

                        columns.Add()
                            .DataField("testrequest_no")
                            .Caption("시험의뢰번호");

                        columns.Add()
                            .DataField("order_proc_manage_rate_min")
                            .Caption("수율(하한)");

                        columns.Add()
                            .DataField("order_proc_manage_rate_max")
                            .Caption("수율(상한)");

                    })
                    .ShowColumnLines(true)
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .ColumnAutoWidth(true)
                    .AutoExpandAll(true)
                )
                </div>

            </div>

        </div>

        <div class="row display-none" id="OrderGuide2ReleaseDiv">

            <div class="col-3 pr-1">

                <div class="box mb-0">

                    @(Html.DevExtreme().TreeList()
                        .ID("OrderGuide2ItemProcessTreeList2")
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .RootValue("")
                        .KeyExpr("mykey")
                        .ParentIdExpr("pkey")
                        //.OnCellClick("getGridPopup")
                        //.OnRowUpdated("processUpdate")
                        //.OnCellPrepared("processEditableColumn")
                        .Height(600)
                        .Columns(columns => {

                            columns.Add()
                                .DataField("seq")
                                .Caption("순서");

                            columns.Add()
                                .DataField("process_cd")
                                .Caption("코드");

                            columns.Add()
                                .DataField("name")
                                .Caption("공정/세부공정");

                        })
                        .ShowColumnLines(true)
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .ColumnAutoWidth(true)
                    )
                </div>

            </div>

            <div class="col-9 pl-0">

                <div class="box mb-0">

                    @(Html.DevExtreme().DataGrid()
                    .ID("OrderGuide2ItemGrid")
                    .ShowBorders(true)
                    .ShowColumnLines(true)
                    .Selection(s => s.Mode(SelectionMode.Single))
                    //.SearchPanel(searchPanel => searchPanel.Visible(true))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                    .Height(600)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .ColumnResizingMode(ColumnResizingMode.Widget)
                    .HoverStateEnabled(true)
                    .Columns(c =>
                    {
                        c.Add().DataField("process_nm").Caption("구분");
                        c.Add().DataField("child_cd").Caption("자재코드");
                        c.Add().DataField("child_nm").Caption("자재명");
                        c.Add().DataField("qc_no").Caption("시험번호");
                        c.Add().DataField("standard_qty").Caption("지시량");
                        c.Add().DataField("request_qty").Caption("불출량");
                        c.Add().DataField("use_qty").Caption("사용량");
                        c.Add().DataField("add_qty").Caption("추가량");
                        c.Add().DataField("return_qty").Caption("반납량");
                        c.Add().DataField("disuse_qty").Caption("폐기량");
                    })
                )

                </div>

            </div>

        </div>

    </div>

