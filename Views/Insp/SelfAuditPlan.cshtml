@*자율점검 계획 승인*@
@using System.Data
@using HACCP.Libs.Views

@{
    Layout = null;

    var SelfAuditPlanData = @Html.Raw(Json.Encode(ViewBag.SelfAuditPlanData.Data));
    var SelfAuditPlanAuth = @Html.Raw(Json.Encode(ViewBag.SelfAuditPlanAuth.Data));

    var empPopupJson = @Html.Raw(Json.Encode(ViewBag.empPopupData.Data));
    var departmentData = @Html.Raw(Json.Encode(ViewBag.departmentData.Data));
}


<script type="text/javascript" id="SelfAuditPlanJs">
    // SP 구문, gubun 변수
    var toDay = new Date();
    var _signGubun = "";
    var _memberGubun = "";
    var _targetGubun = "";
    var c_commnt_Gubun = "";
    var m_commnt_Gubun = "";
    var sign_type = "";
    var sign_seq = "";
    var _CRUDGubun = "";
    var _searchCheck = false;

    $(document).ready(function () {
        SelfAuditPlan_ContentResize();
        PlanCommonEditCheck(false);

        if (@Html.Raw(Json.Encode(ViewBag.SelfAuditPlanData.Data)) != "") {
            $("#SelfAuditPlanGrid").dxDataGrid("instance").option("dataSource", JSON.parse(@SelfAuditPlanData));
            $("#SelfAuditPlanGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
            $("#SelfAuditPlanGrid").dxDataGrid("instance").option("focusedRowIndex", 0);
        }

        var columns = [
            { dataField: "emp_cd", caption: "사원코드" },
            { dataField: "emp_nm", caption: "사원명" },
            { dataField: "dept_cd", caption: "부서코드" },
            { dataField: "dept_nm", caption: "부서명" }
        ];


        var columns1 = [
            { dataField: "dept_cd", caption: "부서코드" },
            { dataField: "dept_nm", caption: "부서명" }
        ];

        createPopup("planUserSearch", "사원조회", @empPopupJson, columns, "emp_cd");
        createPopup("planUserSearch2", "사원조회", @empPopupJson, columns, "emp_cd");

        createPopup("targetDeptSearch", "부서조회", @departmentData, columns1, "dept_cd");
        createPopup("deptMasterSearch", "부서장조회", @empPopupJson, columns, "emp_cd");


        // CRUD체크
        var SelfAuditPlanAuth = JSON.parse(@SelfAuditPlanAuth)[0];
        if (SelfAuditPlanAuth.form_query != "Y") {
            $("#SelfAuditPlanSearch").remove();
        }
        if (SelfAuditPlanAuth.form_insert != "Y") {
            $("#SelfAuditPlanInput").remove();
        }
        if (SelfAuditPlanAuth.form_edit != "Y") {
            $("#SelfAuditPlanEdit").remove();
        }
        if (SelfAuditPlanAuth.form_delete != "Y") {
            $("#SelfAuditPlanDelete").remove();
        }


        $("#teamInsertForm #input_team_cd_Btn").prop("disabled", true);
        $("#teamInsertForm #input_team_role").prop("readonly", true);
        $("#SelfAuditPlanMenu2Div_1 #team_nm").prop("readonly", true);

        $("#targetInfo #targetDept_Btn").prop("disabled", true);
        $("#targetInfo #deptMaster_Btn").prop("disabled", true);
        $("#targetInfo #targetInsert_Date").prop("readonly", true);
        $("#targetInfo #target_content").prop("readonly", true);

        $("#SelfAuditPlanExcel").dxButton().parent().parent().addClass("display-none");


        setDatePicker("#SelfAuditPlan .datepicker");

    })

    // 수정, 입력 중인지 체크
    function PlanCommonEditCheck(nowEdit) {

        if (nowEdit) {

            $("#SelfAuditPlanSave").dxButton().parent().parent().removeClass("display-none");
            $("#SelfAuditPlanUndo").dxButton().parent().parent().removeClass("display-none");
            $("#SelfAuditPlanSearch").dxButton().parent().parent().addClass("display-none");
            $("#SelfAuditPlanInput").dxButton().parent().parent().addClass("display-none");
            $("#SelfAuditPlanEdit").dxButton().parent().parent().addClass("display-none");
            $("#SelfAuditPlanDelete").dxButton().parent().parent().addClass("display-none");
            $("#SelfAuditPlanPrint").dxButton().parent().parent().addClass("display-none");
            $("#SelfAuditPlanPreview").dxButton().parent().parent().addClass("display-none");


            $("#SelfAuditPlanGrid").dxDataGrid("option", "disabled", true);
            //$("#SelfAuditPlanAuditorGrid").dxDataGrid("option", "disabled", false);

            _CRUDGubun = true;
        }
        if (!nowEdit) {

            $("#SelfAuditPlanSave").dxButton().parent().parent().addClass("display-none");
            $("#SelfAuditPlanUndo").dxButton().parent().parent().addClass("display-none");
            $("#SelfAuditPlanSearch").dxButton().parent().parent().removeClass("display-none");
            $("#SelfAuditPlanInput").dxButton().parent().parent().removeClass("display-none");
            $("#SelfAuditPlanEdit").dxButton().parent().parent().removeClass("display-none");
            $("#SelfAuditPlanDelete").dxButton().parent().parent().removeClass("display-none");
            $("#SelfAuditPlanPrint").dxButton().parent().parent().removeClass("display-none");
            $("#SelfAuditPlanPreview").dxButton().parent().parent().removeClass("display-none");

            $("#targetInfo #deptMaster_cd").css("background", "");
            $("#targetInfo #targetDept_cd").css("background", "");

            //$("#SelfAuditPlanMenuForm_1 :enabled").attr('disabled', true);
            $("#SelfAuditPlanGrid").dxDataGrid("option", "disabled", false);
            //$("#SelfAuditPlanAuditorGrid").dxDataGrid("option", "disabled", true);

            _CRUDGubun = false;
        }
    }


    // #region CRUD버튼 관련
    // 조회버튼 기능
    function SelfAuditPlanSearch() {

        $("#SelfAuditPlanMenu2Div_1 #teamInsertForm")[0].reset();
        $("#SelfAuditPlanMenu2Div_2 #targetInfo")[0].reset();
        $("#SelfAuditPlanCommentDiv #c_comment").val("");//검토자의견
        $("#SelfAuditPlanCommentDiv #m_comment").val("");//승인자의견
        $("#SelfAuditPlanMenu2Div_1 #team_nm").val("");//자율팀명
        $("#targetInfo #targetInsert_Date").val("");//점검대상-점검일자

        gridReset("SelfAuditPlanGrid");
        gridReset("SelfAuditPlanTeamGrid");
        gridReset("SelfAuditPlanTargetGrid");
        gridReset("SelfAuditPlanSignGrid");
        gridReset("SelfAuditPlanAuditorGrid");
        gridReset("SelfAuditPlanFileGrid");
        gridReset("SelfAuditPlanTargetGrid2");
        //_searchCheck = true;

        $("#SelfAuditPlanTargetGrid2").dxDataGrid({
            onFocusedRowChanged: null
        });

        $.ajax({
            type: 'POST',
            url: '/Insp/SelfAuditPlanSelect',
            data: {
                sDate: $("#SelfAuditPlanSearchForm #s_start_date").val(),
                eDate: $("#SelfAuditPlanSearchForm #s_end_date").val(),
                emp_cd: $("#SelfAuditPlanSearchForm #audit_writer_cd").val(),
                step: $("#SelfAuditPlanSearchForm #auditStep").val(),
                status: $("#SelfAuditPlanSearchForm #auditStep_status").val()
            },
            async: false,
            success: function (result) {
                if (result == "") return;

                var json = JSON.parse(result);

                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                $("#SelfAuditPlanGrid").dxDataGrid("instance").option("dataSource", json);
                $("#SelfAuditPlanGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#SelfAuditPlanGrid").dxDataGrid("instance").option("focusedRowIndex", 0);

            }
        })
    }

    // 입력버튼 기능
    function SelfAuditPlanInput() {
        PlanCommonEditCheck(true);
        _CRUDGubun = "I";

        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var auditorGrid = $("#SelfAuditPlanAuditorGrid").dxDataGrid("instance");
        temp_auditor = auditorGrid.getSelectedRowKeys();


        if (grid.totalCount() <= 0) {
            alert("선택된 계획서가 없습니다.");

            PlanCommonEditCheck(false);
            return;
        }

     
        var signGrid = $("#SelfAuditPlanSignGrid").dxDataGrid("instance");
        if (signGrid.totalCount() > 0) {
            if (signGrid.getDataSource().items()[0].sign_yn == "1") {
                sign_seq = "1";
                _signGubun = "Check";

                var popup = $("#SelfAuditPlanSignPopup").dxPopup("instance");
                popup.option("contentTemplate", $("#SelfAuditPlanSignPopupTemplate"));
                popup.show();

                PlanCommonEditCheck(false);
                return;
            }
        }


        var tap_no = $("#SelfAuditPlanMenu2Div > div").not('.display-none').attr("id").slice(-1);

        if (tap_no == 1) {
            memberEditBtn();
        } else if (tap_no == 2) {
            targetEditBtn();
        }

    }


    // 수정버튼 기능
    function SelfAuditPlanEdit() {
        PlanCommonEditCheck(true);
        _CRUDGubun = "U";


        var signGrid = $("#SelfAuditPlanSignGrid").dxDataGrid("instance");
        if (signGrid.totalCount() > 0) {
            if (signGrid.getDataSource().items()[0].sign_yn == "1") {
                sign_seq = "1";
                PlanCommonEditCheck(false);
                _signGubun = "Check";
                _CRUDGubun = "U";

                var popup = $("#SelfAuditPlanSignPopup").dxPopup("instance");
                popup.option("contentTemplate", $("#SelfAuditPlanSignPopupTemplate"));
                popup.show();


                return;
            }
        }

        EditStart();

    }

    // 취소버튼 기능
    function SelfAuditPlanUndo() {
        PlanCommonEditCheck(false);

        var tap_no = $("#SelfAuditPlanMenu2Div > div").not('.display-none').attr("id").slice(-1);

        if (tap_no == 1) {

            $("#teamInsertForm #input_team_cd_Btn").prop("disabled", true);
            $("#teamInsertForm #input_team_role").prop("readonly", true);
            $("#SelfAuditPlanMenu2Div_1 #team_nm").prop("readonly", true);

            $("#teamInsertForm")[0].reset();

            _memberGubun = "";
        } else if (tap_no == 2) {
            $("#targetInfo #targetDept_Btn").prop("disabled", true);
            $("#targetInfo #deptMaster_Btn").prop("disabled", true);
            $("#targetInfo #targetInsert_Date").prop("readonly", true);
            $("#targetInfo #target_content").prop("readonly", true);

            $("#targetInfo")[0].reset();
            $("#targetInfo #targetInsert_Date").val("");

            _targetGubun = "";
        } else if (tap_no == 3) {
            //AuditorSearch();
        }
    }

    // 저장버튼 기능
    function SelfAuditPlanSave() {

        var tap_no = $("#SelfAuditPlanMenu2Div > div").not('.display-none').attr("id").slice(-1);

        if (tap_no == 1) {
            memberInsertBtn();
        } else if (tap_no == 2) {
            targetInsertBtn();
        } else if (tap_no == 3) {
            auditorInsertBtn();
        }
    }

    // 삭제버튼 기능
    function SelfAuditPlanDelete() {

        var tap_no = $("#SelfAuditPlanMenu2Div > div").not('.display-none').attr("id").slice(-1);

        if (tap_no == 1) {
            memberDeleteBtn();
        } else if (tap_no == 2) {
            targetDeleteBtn();
        } else if (tap_no == 3) {
            alert("해당 탭은 수정만 가능합니다.");

            return;
        }
    }

    // 프린트버튼 기능
    function SelfAuditPlanPrint() {
        var btnType;
        btnType = $(event.target).closest('.dx-button').attr('id');


        var mainGrid = $("#SelfAuditPlanGrid").dxDataGrid("instance");

        if (mainGrid.totalCount() > 0) {
            var mainData = getGridRowByKey("SelfAuditPlanGrid", mainGrid.option("focusedRowKey"));
            var subParam = "title=자율 점검 계획서;"
                + "self_audit_plan=수행 계획;"
                + "self_audit_revision_doc=관련 문서 계정 계획;"
                + "para_check1=■ 자율점검계획, □ 조치계획, □ 기타";


            var fileGrid = $("#SelfAuditPlanFileGrid").dxDataGrid("instance");
            if (fileGrid.totalCount() > 0) {

                for (var i = 0; i < fileGrid.getDataSource().items().length; i++) {

                    if (fileGrid.getDataSource().items()[i].upload_step == mainData.self_audit_step) {

                        subParam += ";para_check4=□ 없음, ■ 있음";

                    } else {

                        subParam += ";para_check4=■ 없음, □ 있음";
                    }
                }
            } else {

                subParam += ";para_check4=■ 없음, □ 있음";
            }

            // report 출력
            var report = new ReportHelper();
            report.addParam({
                objFile: { path: "SelfAudit", RptFileName: "SelfAuditRT" },
                objSp: {
                    SpName: "SP_SelfAuditPlan_Y", gubun: "SR",
                    reportParam: "self_audit_year:" + mainData.self_audit_year
                        + ";self_audit_no:" + mainData.self_audit_no
                        + ";self_audit_step:" + mainData.self_audit_step
                },
                objEtcInfo: {
                    subParam: subParam
                }
            });


            // 레포트테스트(생성객체확인)
            //report.testObj();

            if (btnType.indexOf('Preview') > -1) {
                report.preview();
            } else if (btnType.indexOf('Print') > -1) {
                report.print();
            }

        }



    }

    // 엑셀버튼 기능
    function SelfAuditPlanExcel() {

    }

   

    function SelfAuditPlan_CRUDBtn_Reset(check) {
        if (check) {
            $("#SelfAuditPlanInput").dxButton("instance").option("disabled", false);
            $("#SelfAuditPlanEdit").dxButton("instance").option("disabled", false);
            $("#SelfAuditPlanDelete").dxButton("instance").option("disabled", false);

        }
        if (!check) {
            $("#SelfAuditPlanInput").dxButton("instance").option("disabled", true);
            $("#SelfAuditPlanEdit").dxButton("instance").option("disabled", true);
            $("#SelfAuditPlanDelete").dxButton("instance").option("disabled", true);

        }
    }


    function EditStart() {

        var tap_no = $("#SelfAuditPlanMenu2Div > div").not('.display-none').attr("id").slice(-1);

        if (tap_no == 1) {
            var grid = $("#SelfAuditPlanTeamGrid").dxDataGrid("instance");

            if (grid.totalCount() <= 0) {
                alert("수정할 항목이 없습니다");
                PlanCommonEditCheck(false);

                return;
            }

            var data = getGridRowByKey('SelfAuditPlanTeamGrid', grid.option("focusedRowKey"));

            $("#teamInsertForm #input_team_cd").val(data.self_audit_auditor);
            $("#teamInsertForm #input_team_nm").val(data.self_audit_auditor_nm);
            $("#teamInsertForm #input_team_role").val(data.self_audit_auditor_role);

            $("#teamInsertForm #input_team_role").prop("readonly", false);
            $("#SelfAuditPlanMenu2Div_1 #team_nm").prop("readonly", false);

            $("#teamInsertForm #input_team_role").select();

        } else if (tap_no == 2) {
            var grid = $("#SelfAuditPlanTargetGrid").dxDataGrid("instance");

            if (grid.totalCount() <= 0) {
                alert("수정할 항목이 없습니다");
                PlanCommonEditCheck(false);

                return;
            }

            var data = getGridRowByKey('SelfAuditPlanTargetGrid', grid.option("focusedRowKey"));

            $("#targetInfo #targetDept_cd").val(data.self_audit_dept_cd);
            $("#targetInfo #targetDept_nm").val(data.self_audit_dept_nm);
            $("#targetInfo #deptMaster_cd").val(data.self_audit_dept_emp_cd);
            $("#targetInfo #deptMaster_nm").val(data.self_audit_dept_emp_nm);
            $("#targetInfo #targetInsert_Date").val(data.self_audit_plan_date);
            $("#targetInfo #target_content").val(data.self_audit_plan_object);

            $("#targetInfo #deptMaster_Btn").prop("disabled", false);
            $("#targetInfo #targetInsert_Date").prop("readonly", false);
            $("#targetInfo #target_content").prop("readonly", false);

            $("#targetInfo #deptMaster_cd").css("background", "#f6c4db");

            $("#targetInfo #target_content").select();
        } else if (tap_no == 3) {

            PlanCommonEditCheck(true);
        }

    }

    // #endregion

    // #region 그리드 선택 시
    // 그리드 선택 시 처리
    async function PlanSelect() {
        $("#teamInsertForm")[0].reset();
        $("#targetInfo")[0].reset();

        gridReset("SelfAuditPlanAuditorGrid");

        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");

        if (grid.option("focusedRowIndex") >= 0) {

            var data = getGridRowByKey('SelfAuditPlanGrid', grid.option("focusedRowKey"));

            if (data.hasOwnProperty("items")) return;

            $("#team_nm").val(data.self_audit_team_nm);



            // 작성자 서명 정보 조회
            await SelfAuditPlan_DisplayESInfo(data);

            // 자율팀 조회
            await TeamSearch(data);

            // 점검대상 조회
            await TargetSearch(data);

            // 점검대상 조회2
            await TargetSearch2(data);

            // 첨부파일 정보 조회
            await PlanFileSearch(data);

        }

    }


    // 담당자 선택 하단 그리드 선택 시
    function selectAuditorGrid() {

        if (_CRUDGubun) {
            var grid = $("#SelfAuditPlanAuditorGrid").dxDataGrid("instance");

            if (grid.totalCount() > 0) {

                var data = getGridRowByKey("SelfAuditPlanAuditorGrid", grid.option("focusedRowKey"));
                var rowIndex = grid.getRowIndexByKey(grid.option("focusedRowKey"));

                if (data.self_audit_status == "Y") {
                    grid.cellValue(rowIndex, "self_audit_status", "N");
                }
                else if (data.self_audit_status == "N") {
                    grid.cellValue(rowIndex, "self_audit_status", "Y");
                }


                grid.saveEditData();
                grid.repaint();

            }
        } else {

            return;
        }
    }


    // 수행조직 그리드 선택 시
    function TeamSelect() {
        var data;

        if (arguments[0].rowIndex == null) {

            data = arguments[0];
        } else {
            var grid = $("#SelfAuditPlanTeamGrid").dxDataGrid("instance");

            if (grid.totalCount() >= 0) {

                data = getGridRowByKey("SelfAuditPlanTeamGrid", grid.option("focusedRowKey"));
            } else {
                return;
            }
        }


        $("#teamInsertForm #input_team_cd").val(data.self_audit_auditor);
        $("#teamInsertForm #input_team_nm").val(data.self_audit_auditor_nm);
        $("#teamInsertForm #input_team_role").val(data.self_audit_auditor_role);
    }

    // #endregion


    // #region 팝업 관련
    // 사원 팝업 띄우기
    function PlanUserSearchBtn() {
        $("#planUserSearchPopup").dxPopup("instance").show();
    }

    // 수행조직 구성용 사원 팝업 띄우기
    function PlanUserSearchBtn2() {
        $("#planUserSearch2Popup").dxPopup("instance").show();
    }

    // 부서 팝업 띄우기
    function searchTargetDeptBtn() {
        $("#targetDeptSearchPopup").dxPopup("instance").show();
    }

    // 부서장 조회용 사원 팝업 띄우기
    function searchDeptMasterBtn() {
        $("#deptMasterSearchPopup").dxPopup("instance").show();
    }



    // 사원 팝업 로우 더블클릭
    function planUserSearchRowDblClick(selectedItems) {
        $("#SelfAuditPlanSearchForm #audit_writer_cd").val(selectedItems.data.emp_cd);
        $("#SelfAuditPlanSearchForm #audit_writer_nm").val(selectedItems.data.emp_nm);

        var popup = $("#planUserSearchPopup").dxPopup("instance");

        popup.hide();
    }

    // 수행조직 구성용 사원 팝업 로우 더블클릭
    function planUserSearch2RowDblClick(selectedItems) {
        $("#teamInsertForm #input_team_cd").val(selectedItems.data.emp_cd);
        $("#teamInsertForm #input_team_nm").val(selectedItems.data.emp_nm);

        var popup = $("#planUserSearch2Popup").dxPopup("instance");

        popup.hide();
    }

    // 점검대상 선택용 부서 팝업 로우 더블클릭
    function targetDeptSearchRowDblClick(selectedItems) {
        $("#targetInfo #targetDept_cd").val(selectedItems.data.dept_cd);
        $("#targetInfo #targetDept_nm").val(selectedItems.data.dept_nm);

        var popup = $("#targetDeptSearchPopup").dxPopup("instance");

        popup.hide();
    }

    // 점검대상 선택용 부서 팝업 로우 더블클릭
    function deptMasterSearchRowDblClick(selectedItems) {
        $("#targetInfo #deptMaster_cd").val(selectedItems.data.emp_cd);
        $("#targetInfo #deptMaster_nm").val(selectedItems.data.emp_nm);

        var popup = $("#deptMasterSearchPopup").dxPopup("instance");

        popup.hide();
    }
    // #endregion


    // #region 서명 관련
    // 작성자 서명 정보 조회
    function SelfAuditPlan_DisplayESInfo() {
        gridReset("SelfAuditPlanSignGrid");

        var data;

        if (arguments.length > 0) {
            data = arguments[0];
        } else {
            var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");

            if (grid.totalCount() > 0) {
                data = getGridRowByKey('SelfAuditPlanGrid', grid.option("focusedRowKey"));
            } else {
                return;
            }

        }

        $.ajax({
            type: 'POST',
            url: '/Insp/SelfAuditPlanSignInfo',
            data: {
                self_audit_year: data.self_audit_year,
                self_audit_no: data.self_audit_no,
                sign_set_cd: '5203'
            },
            success: function (result) {
                var json = JSON.parse(result);

                if (json == "") {

                    gridReset("SelfAuditPlanSignGrid");
                    return;
                }

                $("#SelfAuditPlanSignGrid").dxDataGrid("option", "dataSource", json);
                $("#SelfAuditPlanCommentDiv #c_comment").val(json[0].sign_comment);
                $("#SelfAuditPlanCommentDiv #m_comment").val(json[1].sign_comment);

            }
        });
    }


    // 서명 확인
    function SelfAuditPlan_Sign_Check(e) {
        if (e.data.sign_set_dt_seq == "1") {
            pc_SelfAuditPlan_Sign_Check(e.data);
        } else {
            p_SelfAuditPlan_Sign_Check(e.data);
        }
    }


    function pc_SelfAuditPlan_Sign_Check(_data) {
        _signGubun = "ES";
        sign_type = "pc";
        sign_seq = "1";

        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var gridData = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));
        var planGrid = $("#SelfAuditPlanTeamGrid").dxDataGrid("instance");
        var targetGrid = $("#SelfAuditPlanTargetGrid").dxDataGrid("instance");
        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var checkAuditor = false;

        if (grid.totalCount() > 0) {
            var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

            $.ajax({
                type: 'POST',
                url: '/Insp/CheckAuditor',
                data: {
                    self_audit_year: data.self_audit_year,
                    audit_no: data.self_audit_no
                },
                success: function (result) {
                    if (result <= 0) {

                        return;
                    }

                    var json = JSON.parse(result);
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (parseInt(json.messege) > 0) {

                    }
                    else {

                        checkAuditor = true;

                    }


                    if (grid.totalCount() <= 0) {
                        alert("전자서명 대상이 없습니다");

                        return;
                    }

                    if (_CRUDGubun) {
                        alert("저장 후 서명하십시오");

                        return;
                    }


                    if (gridData.self_audit_step != "1" || gridData.self_audit_step_status != "3") {
                        alert("진행단계와 진행상태를 확인하세요");

                        return;
                    }

                    if (_data.next_sign_yn == "1") {
                        alert("이미 승인자의 서명이 완료되어 수정이 불가능합니다.");

                        return;
                    }

                    if (_data.sign_yn == "1") {
                        if (confirm("이미 승인 되었습니다. 서명을 삭제하시겠습니까?")) {

                            _signGubun = "DEL_ES";
                        } else {
                            return;
                        }
                    } else {

                        if (planGrid.totalCount() <= 0) {
                            alert("점검팀을 구성하세요");

                            return;
                        } else if (targetGrid.totalCount() <= 0) {
                            alert("점검부서를 선택하세요");

                            return;
                        } else if (checkAuditor) {
                            alert("점검자를 결정하세요");

                            return;
                        }

                    }


                    var popup = $("#SelfAuditPlanSignPopup").dxPopup("instance");
                    popup.option("contentTemplate", $("#SelfAuditPlanSignPopupTemplate"));
                    popup.show();
                }
            });

        }
    }


    function p_SelfAuditPlan_Sign_Check(_data) {

        _signGubun = "ES";
        sign_type = "p";
        sign_seq = "2";

        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var gridData = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));
        var planGrid = $("#SelfAuditPlanTeamGrid").dxDataGrid("instance");
        var targetGrid = $("#SelfAuditPlanTargetGrid").dxDataGrid("instance");
        var checkAuditor = false;


        if (grid.totalCount() > 0) {
            var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

            $.ajax({
                type: 'POST',
                url: '/Insp/CheckAuditor',
                data: {
                    self_audit_year: data.self_audit_year,
                    audit_no: data.self_audit_no
                },
                success: function (result) {
                    if (result <= 0) {

                        return;
                    }

                    var json = JSON.parse(result);
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (parseInt(json.messege) > 0) {

                    }
                    else {

                        checkAuditor = true;
                    }


                    if (grid.totalCount() <= 0) {
                        alert("전자서명 대상이 없습니다");

                        return;
                    }

                    if (_CRUDGubun) {
                        alert("저장 후 서명하십시오");

                        return;
                    }


                    if (_data.prev_sign_yn == "0") {
                        alert("검토자 서명이 되지 않았습니다.");

                        return;
                    }

                    if (gridData.self_audit_step == "2" || gridData.self_audit_step_status == "3") {

                        if (_data.sign_yn == "1") {
                            if (confirm("이미 승인 되었습니다. 서명을 삭제하시겠습니까?")) {

                                _signGubun = "DEL_ES";
                            } else {
                                return;
                            }

                        } else {

                            if (planGrid.totalCount() <= 0) {
                                alert("점검팀을 구성하세요");

                                return;
                            }
                            else if (targetGrid.totalCount() <= 0) {
                                alert("점검부서를 선택하세요");

                                return;

                            } else if (checkAuditor) {
                                alert("점검자를 결정하세요");

                                return;
                            }
                        }

                    } else {
                        alert("진행단계와 진행상태를 확인하세요");

                        return;
                    }


                    var popup = $("#SelfAuditPlanSignPopup").dxPopup("instance");
                    popup.option("contentTemplate", $("#SelfAuditPlanSignPopupTemplate"));
                    popup.show();
                }
            });


        }
    }


    // 서명 권한 체크(id, pw)
    async function SelfAuditPlanSignSubmit(){
        var data = new FormData($('#SelfAuditPlanSignForm')[0]);

        data.set("gubun", "S");

        if (!await SelfAuditPlanValidationCheck(data)) {
            alert("권한이 없는 사용자이거나 잘못된 ID,PW 입니다.");

            var popup = $("#SelfAuditPlanSignPopup").dxPopup("instance");
            popup.hide();

            return;
        } 

        if (!await SelfAuditPlanAuthorityCheck($("input[name='emp_cd']").val())) {
            alert("권한이 없는 사용자이거나 잘못된 ID,PW 입니다.");

            var popup = $("#SelfAuditPlanSignPopup").dxPopup("instance");
            popup.hide();

            return;
        }

        await SelfAuditPlanExecuteSign();


    }


    function SelfAuditPlanValidationCheck(data) {
        var check = false;

        $.ajax({
            type: 'POST',
            url: '/Comm/IDValidation',
            data: data,
            contentType: false,
            processData: false,
            async: false,
            success: function (result) {

                if (result) {
                    $("input[name='dept_nm']").val(JSON.parse(result)[0].dept_nm);
                    $("input[name='emp_nm']").val(JSON.parse(result)[0].emp_nm);
                    $("input[name='emp_cd']").val(JSON.parse(result)[0].emp_cd);

                    check = true;
                }
               
            }
        });

        return check;
    }


    function SelfAuditPlanAuthorityCheck(emp_cd) {
        var check = false;

        $.ajax({
            type: 'GET',
            url: '/Comm/AuthorityCheck',
            data: {
                emp_cd: emp_cd,
                sign_set_cd: "5203",
                sign_set_seq: sign_seq
            },
            async: false,
            success: function (result) {

                if (result) {
                    sign_set_seq = "";

                    check = true;
                }
            }
        });

        return check;
    }


    function SelfAuditPlanExecuteSign() {
        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var gridData = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

        setTimeout(function () {

            var popup = $("#SelfAuditPlanSignPopup").dxPopup("instance");
            popup.hide();

            if (_signGubun == "Check_D") {

                PlanCommonEditCheck(false);

                var tap_no = $("#SelfAuditPlanMenu2Div > div").not('.display-none').attr("id").slice(-1);

                if (tap_no == 1) {
                    MemberDelete();
                } else if (tap_no == 2) {
                    DeptDelete();
                }

            }
            else if (_signGubun == "Check") {

                if (_CRUDGubun == "U") {
                    PlanCommonEditCheck(true);

                    EditStart();

                    return;
                } else {
                    PlanCommonEditCheck(true);

                    var tap_no = $("#SelfAuditPlanMenu2Div > div").not('.display-none').attr("id").slice(-1);

                    if (tap_no == 1) {
                        memberEditBtn();
                    } else if (tap_no == 2) {
                        targetEditBtn();
                    }
                }
            }
            else {

                $.ajax({
                    type: 'POST',
                    url: '/Insp/Plan_SignCRUD',
                    data: {
                        gubun: _signGubun,
                        audit_year: gridData.self_audit_year,
                        audit_no: gridData.self_audit_no,
                        emp_cd: $("input[name='emp_cd']").val(),
                        check_gb: gridData.self_audit_check_gb,
                        audit_date: gridData.self_audit_date,
                        type: sign_type
                    },
                    success: function (result) {

                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }

                        if (json.messege != "") {
                            alert(json.messege);

                            PlanSelect();
                        } else {
                            alert("실패하였습니다.");

                        }

                    }
                });

                _signGubun = "";
                SelfAuditPlanSearch();
            }

        }, 1000)

    }


    // 검토자 의견 입력/수정
    function c_Insert_Comment() {
        if (c_commnt_Gubun == "") {
            $("#SelfAuditPlanCommentDiv #c_comment").attr("readonly", false);
            $("#SelfAuditPlanCommentDiv #c_comment").focus();

            c_commnt_Gubun = "I";

            return;
        }

        if (c_commnt_Gubun == "I") {
            var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
            var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

            $.ajax({
                type: 'POST',
                url: '/Insp/InsertCComment',
                data: {
                    self_audit_year: data.self_audit_year,
                    audit_no: data.self_audit_no,
                    c_comment: $("#SelfAuditPlanCommentDiv #c_comment").val()
                },
                success: function (result) {
                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.messege != "") {
                        alert(json.messege);

                        SelfAuditPlan_DisplayESInfo();
                    } else {
                        alert("실패하였습니다.");
                    }
                }
            });

            $("#SelfAuditPlanCommentDiv #c_comment").attr("readonly", true);

            c_commnt_Gubun = "";

            return;
        }
    }


    // 승인자 의견 입력/수정
    function m_Insert_Comment() {
        if (m_commnt_Gubun == "") {
            $("#SelfAuditPlanCommentDiv #m_comment").attr("readonly", false);
            $("#SelfAuditPlanCommentDiv #m_comment").focus();

            m_commnt_Gubun = "I";

            return;
        }

        if (m_commnt_Gubun == "I") {
            var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
            var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

            $.ajax({
                type: 'POST',
                url: '/Insp/InsertMComment',
                data: {
                    self_audit_year: data.self_audit_year,
                    audit_no: data.self_audit_no,
                    m_comment: $("#SelfAuditPlanCommentDiv #m_comment").val()
                },
                success: function (result) {
                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.messege != "") {
                        alert(json.messege);

                        SelfAuditPlan_DisplayESInfo();
                    } else {
                        alert("실패하였습니다.");
                    }
                }
            });

            $("#SelfAuditPlanCommentDiv #m_comment").attr("readonly", true);

            m_commnt_Gubun = "";

            return;
        }
    }


    function CheckAuditor() {
        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

        $.ajax({
            type: 'POST',
            url: '/Insp/CheckAuditor',
            data: {
                self_audit_year: data.self_audit_year,
                audit_no: data.self_audit_no
            },
            success: function (result) {
                if (result <= 0) {

                    return;
                }

                var json = JSON.parse(result);
                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                if (parseInt(json.messege) > 0) {

                    return true;
                }
                else {

                    return false;
                }

            }
        });
    }

    // #endregion


    // #region 파일첨부 관련
    //파일 조회
    function PlanFileSearch() {
        gridReset("SelfAuditPlanFileGrid");

        var data;

        if (arguments.length > 0) {
            data = arguments[0];
        } else {
            var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");

            if (grid.totalCount() > 0) {
                data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));
            } else {
                return;
            }
        }


        $.ajax({
            type: 'POST',
            url: '/Insp/SelfAuditPlanFileSearch',
            data: {
                self_audit_year: data.self_audit_year,
                audit_no: data.self_audit_no
            },
            success: function (result) {
                if (result <= 0) {

                    return;
                }

                var json = JSON.parse(result);
                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                $("#SelfAuditPlanFileGrid").dxDataGrid("instance").option("dataSource", json);
                $("#SelfAuditPlanFileGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#SelfAuditPlanFileGrid").dxDataGrid("instance").option("focusedRowIndex", 0);

            }
        });
    }


    // 파일 첨부
    function PlanFileAdd() {

        $("#SelfAuditPlanMenu2Div_4 #fileData").click();
    }

    $("#SelfAuditPlanMenu2Div_4 #fileData").change(function () {
        var formData = new FormData($("#SelfAuditPlan #planFileSubmitForm")[0]);
        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

        formData.append("uploadfile", $("#SelfAuditPlanMenu2Div_4 #fileData")[0].files[0]);
        formData.append("audit_no", data.self_audit_no);
        formData.append("audit_step_cd", data.self_audit_step);
        formData.append("self_audit_year", data.self_audit_year);

        $.ajax({
            type: 'POST',
            url: '/Insp/SelfAuditPlanFileAdd',
            contentType: false,
            processData: false,
            data: formData,
            success: function (result) {

                var json = JSON.parse(result)
                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                if (json.messege != "") {

                    $("#SelfAuditPlanMenu2Div_4 #fileData").val("");
                    alert(json.messege);
                } else {
                    alert("저장에 실패하였습니다.");
                }

                PlanSelect();
            }
        });
    })

    // 파일 삭제
    function PlanFileDelete() {
        // 첨부파일 그리드
        var fileGrid = $("#SelfAuditPlanFileGrid").dxDataGrid("instance");
        // 점검 일정 정보 그리드
        var mainGrid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var mainData = getGridRowByKey("SelfAuditPlanGrid", mainGrid.option("focusedRowKey"));

        if (fileGrid.totalCount() <= 0) {
            alert("삭제할 문서가 없습니다.");

            return;
        }

        var fileData = getGridRowByKey("SelfAuditPlanFileGrid", fileGrid.option("focusedRowKey"));

        if (confirm("삭제하시겠습니까?")) {
            $.ajax({
                type: 'POST',
                url: '/Insp/SelfAuditPlanFileDelete',
                data: {
                    audit_year: mainData.self_audit_year,
                    audit_no: mainData.self_audit_no,
                    audit_file: fileData.self_audit_file,
                    file_id: fileData.file_id
                },
                success: function (result) {

                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.messege != "") {
                        alert(json.messege);
                    } else {
                        alert("삭제에 실패하였습니다.");
                    }

                    PlanSelect();
                }
            });
        }
    }

    // 파일열기
    function PlanFileOpen() {
        var fileGrid = $("#SelfAuditPlanFileGrid").dxDataGrid("instance");

        if (fileGrid.totalCount() <= 0) {
            alert("첨부된 문서가 없습니다.")

            return;
        }

        var fileData = getGridRowByKey("SelfAuditPlanFileGrid", fileGrid.option("focusedRowKey"));

        document.location.assign('/Insp/SelfAuditPlanFileOpen?file_id=' + fileData.file_id);
    }


    // #endregion


    function clearSignInput() {
        $('#SelfAuditPlanSignForm')[0].reset();
        $("input[name='dept_nm']").val("");
        $("input[name='emp_nm']").val("");
    }


    // #region 수행조직 구성 관련
    function TeamSearch() {
        $("#SelfAuditPlanMenu2Div_1 #teamInsertForm")[0].reset();
        gridReset("SelfAuditPlanTeamGrid");

        var data;

        if (arguments.length > 0) {
            data = arguments[0];
        } else {
            var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");

            if (grid.totalCount() > 0) {
                data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));
            } else {
                return;
            }
        }

        $.ajax({
            type: 'POST',
            url: '/Insp/teamSearch',
            data: {
                self_audit_year: data.self_audit_year,
                audit_no: data.self_audit_no
            },
            success: function (result) {
                if (result <= 0) {

                    return;
                }

                var json = JSON.parse(result);
                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                $("#SelfAuditPlanTeamGrid").dxDataGrid("instance").option("dataSource", json);
                $("#SelfAuditPlanTeamGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#SelfAuditPlanTeamGrid").dxDataGrid("instance").option("focusedRowIndex", 0);

                TeamSelect(json[0]);
            }
        });
    }


    function memberEditBtn() {
        $("#SelfAuditPlanMenu2Div_1 #teamInsertForm")[0].reset();

        $("#teamInsertForm #input_team_cd_Btn").prop("disabled", false);
        $("#teamInsertForm #input_team_role").prop("readonly", false);
        $("#SelfAuditPlanMenu2Div_1 #team_nm").prop("readonly", false);

    }


    function memberInsertBtn() {
        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");

        if (grid.totalCount() > 0) {

            var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

            $.ajax({
                type: 'POST',
                url: '/Insp/MemberInsert',
                data: {
                    self_audit_year: data.self_audit_year,
                    audit_no: data.self_audit_no,
                    team_nm: $("#SelfAuditPlanMenu2Div_1 #team_nm").val(),
                    input_team_cd: $("#teamInsertForm #input_team_cd").val(),
                    input_team_role: $("#teamInsertForm #input_team_role").val()
                },
                success: function (result) {
                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.messege != "") {
                        alert(json.messege);

                        TeamSearch();
                        SelfAuditPlanSearch();
                        SelfAuditPlanUndo();
                    } else {
                        alert("실패하였습니다.");
                    }
                }
            });
        }
    }


    function memberDeleteBtn() {
        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

        var teamGrid = $("#SelfAuditPlanTeamGrid").dxDataGrid("instance");

        if (teamGrid.totalCount() > 0) {
            var teamData = getGridRowByKey("SelfAuditPlanTeamGrid", teamGrid.option("focusedRowKey"));
        } else if (teamGrid.totalCount() <= 0) {
            alert("선택된 대상이 없습니다.");

            return;
        }


        if (grid.totalCount() > 0) {
            var signGrid = $("#SelfAuditPlanSignGrid").dxDataGrid("instance");
            if (signGrid.totalCount() > 0) {
                if (signGrid.getDataSource().items()[0].sign_yn == "1") {
                    sign_seq = "1";
                    _signGubun = "Check_D";

                    var popup = $("#SelfAuditPlanSignPopup").dxPopup("instance");
                    popup.option("contentTemplate", $("#SelfAuditPlanSignPopupTemplate"));
                    popup.show();
                } else {

                    MemberDelete();
                }
            }
        }
    }


    function MemberDelete() {

        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));
        var teamGrid = $("#SelfAuditPlanTeamGrid").dxDataGrid("instance");
        var teamData = getGridRowByKey("SelfAuditPlanTeamGrid", teamGrid.option("focusedRowKey"));

        if (confirm("팀원을 삭제하시겠습니까?")) {
            $.ajax({
                type: 'POST',
                url: '/Insp/MemberDelete',
                data: {
                    self_audit_year: data.self_audit_year,
                    audit_no: data.self_audit_no,
                    input_team_cd: teamData.self_audit_auditor
                },
                success: function (result) {
                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.messege != "") {
                        alert(json.messege);

                        TeamSearch();
                        SelfAuditPlanUndo();
                    } else {
                        alert("삭제에 실패하였습니다.");
                    }

                }
            });
        }
    }

    // #endregion


    // #region 점검대상 선택 관련
    function TargetSearch() {
        $("#SelfAuditPlanMenu2Div_2 #targetInfo")[0].reset();
        $("#targetInfo #targetInsert_Date").val("");
        gridReset("SelfAuditPlanTargetGrid");

        var data;

        if (arguments.length > 0) {
            data = arguments[0];
        } else {
            var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");

            if (grid.totalCount() > 0) {
                data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));
            } else {
                return;
            }
        }

        $.ajax({
            type: 'POST',
            url: '/Insp/DeptSearch',
            data: {
                self_audit_year: data.self_audit_year,
                audit_no: data.self_audit_no
            },
            success: function (result) {
                if (result <= 0) {

                    return;
                }

                var json = JSON.parse(result);
                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                $("#SelfAuditPlanTargetGrid").dxDataGrid("instance").option("dataSource", json);
                $("#SelfAuditPlanTargetGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#SelfAuditPlanTargetGrid").dxDataGrid("instance").option("focusedRowIndex", 0);

                TargetSelect(json[0]);
            }
        });
    }


    function targetEditBtn() {

        $("#targetInfo")[0].reset();

        $("#targetInfo #targetDept_Btn").prop("disabled", false);
        $("#targetInfo #deptMaster_Btn").prop("disabled", false);
        $("#targetInfo #targetInsert_Date").prop("readonly", false);
        $("#targetInfo #target_content").prop("readonly", false);

        $("#targetInfo #deptMaster_cd").css("background", "#f6c4db");
        $("#targetInfo #targetDept_cd").css("background", "#f6c4db");

        $("#targetInfo #targetInsert_Date").val(getFormatDate(toDay));
    }


    function targetInsertBtn() {
        var input_arr = $("#targetInfo [required]");

        for (var i = 0; i < input_arr.length; i++) {

            if (input_arr[i].value.length <= 0) {

                alert("필수 입력 자료를 모두 입력하십시요!!");

                return;
            }
        }

        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

        if (grid.totalCount() > 0) {
            $.ajax({
                type: 'POST',
                url: '/Insp/DeptInsert',
                data: {
                    self_audit_year: data.self_audit_year,
                    audit_no: data.self_audit_no,
                    dept_cd: $("#targetInfo #targetDept_cd").val(),
                    dept_emp_cd: $("#targetInfo #deptMaster_cd").val(),
                    dept_date: $("#targetInfo #targetInsert_Date").val(),
                    dept_object: $("#targetInfo #target_content").val()
                },
                success: function (result) {
                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.messege != "") {
                        alert(json.messege);

                        TargetSearch();
                        SelfAuditPlanUndo();
                    } else {
                        alert("실패하였습니다.");
                    }
                }
            });
        }
    }


    function targetDeleteBtn() {
        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");

        if (grid.totalCount() > 0) {

            var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

            var deptGrid = $("#SelfAuditPlanTargetGrid").dxDataGrid("instance");
            if (deptGrid.totalCount() > 0) {
                var deptData = getGridRowByKey("SelfAuditPlanTargetGrid", deptGrid.option("focusedRowKey"));
            } else if (deptGrid.totalCount() <= 0) {
                alert("선택된 대상이 없습니다.");

                return;
            }


            var signGrid = $("#SelfAuditPlanSignGrid").dxDataGrid("instance");
            if (signGrid.totalCount() > 0) {
                if (signGrid.getDataSource().items()[0].sign_yn == "1") {
                    sign_seq = "1";
                    _signGubun = "Check_D";

                    var popup = $("#SelfAuditPlanSignPopup").dxPopup("instance");
                    popup.option("contentTemplate", $("#SelfAuditPlanSignPopupTemplate"));
                    popup.show();
                } else {
                    DeptDelete();

                }
            }

        }
    }


    function DeptDelete() {

        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));

        var deptGrid = $("#SelfAuditPlanTargetGrid").dxDataGrid("instance");
        var deptData = getGridRowByKey("SelfAuditPlanTargetGrid", deptGrid.option("focusedRowKey"));

        if (confirm("점검대상을 삭제하시겠습니까?")) {
            $.ajax({
                type: 'POST',
                url: '/Insp/DeptDelete',
                data: {
                    self_audit_year: data.self_audit_year,
                    audit_no: data.self_audit_no,
                    dept_cd: deptData.self_audit_dept_cd
                },
                success: function (result) {
                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.messege != "") {
                        alert(json.messege);

                        TargetSearch();
                        SelfAuditPlanUndo();
                    } else {
                        alert("삭제에 실패하였습니다.");
                    }

                }
            });
        }

    }


    function TargetSelect() {
        var data;

        if (arguments[0].rowIndex == null) {

            data = arguments[0];
        } else {
            var grid = $("#SelfAuditPlanTargetGrid").dxDataGrid("instance");

            if (grid.totalCount() >= 0) {

                data = getGridRowByKey("SelfAuditPlanTargetGrid", grid.option("focusedRowKey"));
            } else {
                return;
            }
        }

        $("#targetInfo #targetDept_cd").val(data.self_audit_dept_cd);
        $("#targetInfo #targetDept_nm").val(data.self_audit_dept_nm);
        $("#targetInfo #deptMaster_cd").val(data.self_audit_dept_emp_cd);
        $("#targetInfo #deptMaster_nm").val(data.self_audit_dept_emp_nm);
        $("#targetInfo #targetInsert_Date").val(data.self_audit_plan_date);
        $("#targetInfo #target_content").val(data.self_audit_plan_object);

    }

    // #endregion


    // #region 담당자 선택 관련
    function TargetSearch2() {
        gridReset("SelfAuditPlanTargetGrid2");

        var data;

        if (arguments.length > 0) {
            data = arguments[0];
        } else {
            var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");

            if (grid.totalCount() > 0) {
                data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));
            } else {
                return;
            }
        }


        $.ajax({
            type: 'POST',
            url: '/Insp/DeptSearch2',
            data: {
                self_audit_year: data.self_audit_year,
                audit_no: data.self_audit_no
            },
            success: function (result) {
                if (result <= 0) {

                    return;
                }

                var json = JSON.parse(result);
                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                $("#SelfAuditPlanTargetGrid2").dxDataGrid("instance").option("dataSource", json);
                $("#SelfAuditPlanTargetGrid2").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#SelfAuditPlanTargetGrid2").dxDataGrid("instance").option("focusedRowIndex", 0);

                toAuditorSearch(data, json[0]);
            }
        });
    }


    function AuditorSearchCheck() {
        if (_searchCheck) _searchCheck = false;

        AuditorSearch();
    }


    function AuditorSearch() {

        if (!_searchCheck) {

            gridReset("SelfAuditPlanAuditorGrid");

            var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");

            if (grid.totalCount() > 0) {
                var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));
            } else {
                return;
            }

            var targetGrid = $("#SelfAuditPlanTargetGrid2").dxDataGrid("instance");

            if (targetGrid.totalCount() > 0) {
                var targetData = getGridRowByKey("SelfAuditPlanTargetGrid2", targetGrid.option("focusedRowKey"));

                $.ajax({
                    type: 'POST',
                    url: '/Insp/AuditorSearch',
                    data: {
                        self_audit_year: data.self_audit_year,
                        audit_no: data.self_audit_no,
                        dept_cd: targetData.self_audit_dept_cd
                    },
                    async: false,
                    success: function (result) {
                        if (result <= 0) {

                            return;
                        }

                        var json = JSON.parse(result);
                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }

                        $("#SelfAuditPlanAuditorGrid").dxDataGrid("instance").option("dataSource", json);
                        $("#SelfAuditPlanAuditorGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                        $("#SelfAuditPlanAuditorGrid").dxDataGrid("instance").option("focusedRowIndex", 0);
                    }
                });
            }
        }


    }


    function toAuditorSearch(mainData, subData) {

        gridReset("SelfAuditPlanAuditorGrid");

        $.ajax({
            type: 'POST',
            url: '/Insp/AuditorSearch',
            data: {
                self_audit_year: mainData.self_audit_year,
                audit_no: mainData.self_audit_no,
                dept_cd: subData.self_audit_dept_cd
            },
            async: false,
            success: function (result) {
                if (result <= 0) {

                    return;
                }

                var json = JSON.parse(result);
                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                $("#SelfAuditPlanAuditorGrid").dxDataGrid("instance").option("dataSource", json);
                $("#SelfAuditPlanAuditorGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#SelfAuditPlanAuditorGrid").dxDataGrid("instance").option("focusedRowIndex", 0);



                $("#SelfAuditPlanTargetGrid2").dxDataGrid({
                    onFocusedRowChanged: AuditorSearchCheck
                });

                _searchCheck = true;
            }
        });

    }


    //function auditorCheck(indexArr) {
    //    var dataGrid = $("#SelfAuditPlanAuditorGrid").dxDataGrid("instance");

    //    dataGrid.clearSelection();
    //    dataGrid.selectRows(indexArr, true);

    //}

    function auditorInsertBtn() {

        var grid = $("#SelfAuditPlanGrid").dxDataGrid("instance");
        var data = getGridRowByKey("SelfAuditPlanGrid", grid.option("focusedRowKey"));
        var targetGrid = $("#SelfAuditPlanTargetGrid2").dxDataGrid("instance");
        var targetData = getGridRowByKey("SelfAuditPlanTargetGrid2", targetGrid.option("focusedRowKey"));
        var auditorGrid = $("#SelfAuditPlanAuditorGrid").dxDataGrid("instance");
        //var auditorData = getGridRowByKey("SelfAuditPlanAuditorGrid", auditorGrid.option("focusedRowKey"));

        var auditor_cd = new Array();
        var auditDataArr = auditorGrid.getDataSource().items();
        var count = 0;
        for (var i in auditDataArr) {
            if (auditDataArr[i].self_audit_status == "Y") {
                auditor_cd[count++] = auditDataArr[i].self_audit_auditor;
            }
        }

        if (targetGrid.totalCount() > 0) {
            $.ajax({
                type: 'POST',
                url: '/Insp/AuditorInsert',
                data: {
                    self_audit_year: data.self_audit_year,
                    audit_no: data.self_audit_no,
                    dept_cd: targetData.self_audit_dept_cd,
                    auditor_cd: auditor_cd
                },
                success: function (result) {
                    var json = JSON.parse(result)
                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.messege != "") {
                        alert(json.messege);

                        TargetSearch();
                        SelfAuditPlanUndo();
                    } else {
                        alert("실패하였습니다.");
                    }
                }
            });
        }

    }
    // #endregion

    /* 수정 history
    *
    * 순번 수정자  수정내용                                                                       수정일자
    * ------------------------------------------------------------------------------------------------------
    * 1.   박가희  focusedRowIndex를 0으로 주게되면,                                              2020.12.16
    *              데이터가 없을 경우에도 포커스 데이터가 남아있어서 해당 로직은 사용하지 않음으로 변경
    */
    function gridReset(gridName) {

        $("#" + gridName).dxDataGrid("instance").option("dataSource", []);
        //$("#" + gridName).dxDataGrid("instance").option("focusedRowIndex", 0);
        $("#" + gridName).dxDataGrid("instance").option("focusedRowEnabled", false);
        $("#" + gridName).dxDataGrid("instance").option("focusedRowKey", "");
    }


    function getFormatDate(date) {
        var year = date.getFullYear();              //yyyy
        var month = (1 + date.getMonth());          //M
        month = month >= 10 ? month : '0' + month;  //month 두자리로 저장
        var day = date.getDate();                   //d
        day = day >= 10 ? day : '0' + day;          //day 두자리로 저장
        return year + '-' + month + '-' + day;       //'-' 추가하여 yyyy-mm-dd 형태 생성 가능
    }


    function SelfAuditPlan_ContentResize() {
        var topPoint1 = document.getElementById("SelfAuditPlan_Top").getBoundingClientRect().bottom;
        var content_max_height = window.innerHeight - (topPoint1 + 1) - 20

        document.getElementById("SelfAuditPlanGrid").style.height = content_max_height + "px";
    }


</script>

<style>
    ul.nav.nav-tabs.box {
        box-shadow: none;
    }

    #SelfAuditPlanCommentDiv div.input-group-append {
        width: 50px;
        height: auto !important;
    }

    #SelfAuditPlanCommentDiv div.input-group-append > button {
        width: 100%;
        height: 100%;
    }

</style>

<div id="SelfAuditPlan">

    <div id="planUserSearchPopup"></div>
    <div id="planUserSearch2Popup"></div>
    <div id="targetDeptSearchPopup"></div>
    <div id="deptMasterSearchPopup"></div>

    @* === 전자 서명 팝업 === *@
    @(Html.DevExtreme().Popup()
            .ID("SelfAuditPlanSignPopup")
            .Width(500)
            .Height(420)
            .ShowTitle(true)
            .Title("작업자 인증")
            .OnHidden("clearSignInput")
            .Visible(false)
            .DragEnabled(true)
            .CloseOnOutsideClick(false)
        )

    @using (Html.DevExtreme().NamedTemplate("SelfAuditPlanSignPopupTemplate"))
    {
        <h6>전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

        <form id="SelfAuditPlanSignForm">

            <div class="input-wrapper">
                <label class="col-3">아이디</label>
                <input type="text" class="col-8 form-control" name="txt_ID">

                <label class="col-3">비밀번호</label>
                <input type="password" class="col-8 form-control" name="txt_Pass">
            </div>

        </form>
        <div class="align-content-end">
            <button class="btn btn-outline-secondary" onclick="SelfAuditPlanSignSubmit()">확인</button>
        </div>

        <br />
        <hr />

        <label class="col-3">부서</label>
        <input type="text" class="col-8 form-control" name="dept_nm" readonly="readonly" />
        <label class="col-3">성명</label>
        <input type="text" class="col-8 form-control" name="emp_nm" readonly="readonly" />
        <input type="hidden" name="emp_cd" />
    }

    <form id="planFileSubmitForm" enctype="multipart/form-data" style="display: none;">
    </form>


    <div id="SelfAuditPlan_Top" class="mainTop row">
        <div class="col-8">
            <form id="SelfAuditPlanSearchForm">
                <div class="input-wrapper">
                    <div class="input-group input-group-sm col-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">점검일자</span>
                        </div>
                        <input type="text" class="form-control col-5 datepicker" name="s_start_date" id="s_start_date" value="@DateTime.Today.AddMonths(-1).ToShortDateString()" />
                        <label class="p-1">~</label>
                        <input type="text" class="form-control col-5 datepicker" name="s_end_date" id="s_end_date" value="@DateTime.Today.ToShortDateString()" />
                    </div>

                    <div class="input-group input-group-sm col-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">점검책임자</span>
                        </div>
                        <input type="text" class="form-control" name="audit_writer_cd" id="audit_writer_cd">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary" type="button" id="plan_user_search_btn" onclick="PlanUserSearchBtn()"><i class="fa fa-search"></i></button>
                        </div>
                        <input type="text" class="form-control" name="audit_writer_nm" id="audit_writer_nm" readonly />
                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">단계</span>
                        </div>
                        <select class="form-control col-10" name="auditStep" id="auditStep">
                            @foreach (DataRow row in ((DataTable)ViewBag.auditStep).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">상태</span>
                        </div>
                        <select class="form-control col-8" name="auditStep_status" id="auditStep_status">
                            @foreach (DataRow row in ((DataTable)ViewBag.auditStep_status).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                </div>
            </form>

        </div>

        <div class="CRUD-btn col-4">
            @* === CRUD 버튼 === *@
            @{Html.SetToolbar(0, true, "*"); }

        </div>

    </div>

    <div class="row">
        <div id="SelfAuditPlanLeftMain" class="col-8 pr-0">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                        .ID("SelfAuditPlanGrid")
                        .ShowBorders(true)
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                        .Height(853)
                        .FocusedRowEnabled(true)
                        .ShowColumnLines(true)
                        .HoverStateEnabled(true)
                        .ColumnAutoWidth(true)
                        .SearchPanel(s => s.Visible(true))
                        .KeyExpr("self_audit_no")
                        .Columns(c =>
                        {
                            c.Add().DataField("self_audit_no").Caption("계획서 번호");
                            c.Add().DataField("self_audiy_check_gb_nm").Caption("점검 구분");
                            c.Add().DataField("self_audit_object").Caption("제목");
                            c.Add().DataField("self_audit_date").Caption("진행시작일");
                            c.Add().DataField("self_audit_step_nm").Caption("단계");
                            c.Add().DataField("self_audit_step_status_nm").Caption("상태");
                            c.Add().DataField("self_audit_director_nm").Caption("점검책임자");

                            c.Add().DataField("self_audit_year").Visible(false);
                            c.Add().DataField("self_audit_step").Visible(false);
                            c.Add().DataField("self_audit_step_status").Visible(false);
                            c.Add().DataField("self_audit_team_nm").Visible(false);
                            c.Add().DataField("self_audit_check_gb").Visible(false);
                        })
                        .OnFocusedRowChanged("PlanSelect")
                    )
            </div>
        </div>

        <div id="SelfAuditPlanRightMain" class="col-4">
            <div class="box mb-0">
                <div class="divName mb-0">
                    <p>계획 승인</p>
                </div>
                <div id="SelfAuditPlanSignDiv">
                    <div>
                        @(Html.DevExtreme().DataGrid()
                                .ID("SelfAuditPlanSignGrid")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .HoverStateEnabled(true)
                                .Scrolling( scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                                .FocusedRowEnabled(true)
                                .Height(137)
                                .OnCellClick("SelfAuditPlan_Sign_Check")
                                .KeyExpr("sign_set_dt_id")
                                .Columns(columns =>
                                {
                                    columns.Add().DataField("displayfield").Caption("구분");
                                    columns.Add().DataField("sign_emp_nm").Caption("서명자");
                                    columns.Add().DataField("sign_time").Width(185).Caption("서명일자");
                                    columns.Add().DataField("sign_image").Caption("서명")
                                    .AllowFiltering(false)
                                    .AllowSorting(false)
                                    .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                })
                            )
                    </div>
                </div>

                <div class="divName mb-0">
                    <p>검토의견</p>
                </div>

                <div id="SelfAuditPlanCommentDiv" class="m-1">
                    <div class="input-wrapper">
                        <label class="col-3">검토자 의견</label>
                        <div class="input-group col-8">
                            <textarea id="c_comment" name="c_comment" class="form-control" cols="100" rows="5" style="height: 50px; resize: vertical;" readonly></textarea>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button" id="cInsertCommnetBtn" onclick="c_Insert_Comment()"><i class="fa fa-pencil-square-o fa-2x"></i></button>
                            </div>
                        </div>
                    </div>

                    <div class="input-wrapper">
                        <label class="col-3">승인자 의견</label>
                        <div class="input-group col-8">
                            <textarea id="m_comment" name="m_comment" class="form-control" cols="100" rows="5" style="height: 50px; resize: vertical;" readonly></textarea>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button" id="mInsertCommnetBtn" onclick="m_Insert_Comment()"><i class="fa fa-pencil-square-o fa-2x"></i></button>
                            </div>
                        </div>
                    </div>
                </div>


                <ul class="nav nav-tabs" id="SelfAuditPlanMenu2Div">
                    <li class="nav-item">
                        <a class="nav-link active" onclick="menutab('SelfAuditPlanMenu2Div', 'SelfAuditPlanMenu2Div', 1); SelfAuditPlanUndo(); TeamSearch(); SelfAuditPlan_CRUDBtn_Reset(true);">수행조직</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" onclick="menutab('SelfAuditPlanMenu2Div', 'SelfAuditPlanMenu2Div', 2); SelfAuditPlanUndo(); TargetSearch(); SelfAuditPlan_CRUDBtn_Reset(true); ">점검대상</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" onclick="menutab('SelfAuditPlanMenu2Div', 'SelfAuditPlanMenu2Div', 3); SelfAuditPlanUndo(); TargetSearch2(); SelfAuditPlan_CRUDBtn_Reset(true); ">담당자</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" onclick="menutab('SelfAuditPlanMenu2Div', 'SelfAuditPlanMenu2Div', 4); SelfAuditPlanUndo(); PlanFileSearch(); SelfAuditPlan_CRUDBtn_Reset(false); ">첨부파일</a>
                    </li>
                </ul>


                <div id="SelfAuditPlanMenu2Div">
                    <div id="SelfAuditPlanMenu2Div_1">
                        <div class="input-wrapper m-1">
                            <label class="col-3">자율팀명</label>
                            <div class="input-group col-5">
                                <input type="text" class="col-12 form-control" name="team_nm" id="team_nm" />
                            </div>
                        </div>
                        <div>
                            @(Html.DevExtreme().DataGrid()
                                    .ID("SelfAuditPlanTeamGrid")
                                    .ShowBorders(true)
                                    .Selection(s => s.Mode(SelectionMode.Single))
                                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                                    .Height(351)
                                    .ShowColumnLines(true)
                                    .HoverStateEnabled(true)
                                    .ColumnAutoWidth(true)
                                    .KeyExpr("self_audit_auditor")
                                    .Columns(c =>
                                    {
                                        c.Add().DataField("self_audit_auditor").Caption("사번").Width("25%");
                                        c.Add().DataField("self_audit_auditor_nm").Caption("성명").Width("25%");
                                        c.Add().DataField("self_audit_auditor_role").Caption("역할").Width("50%");
                                    })
                                    .OnFocusedRowChanged("TeamSelect")
                                )
                        </div>

                        <form id="teamInsertForm" class="m-1">
                            <div class="input-wrapper">
                                <label class="col-3">팀원</label>
                                <div class="input-group col-4">
                                    <input type="text" class="form-control" name="input_team_cd" id="input_team_cd" readonly>
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary" type="button" id="input_team_cd_Btn" onclick="PlanUserSearchBtn2()"><i class="fa fa-search"></i></button>
                                    </div>
                                </div>

                                <div class="input-group col-4">
                                    <input type="text" class="form-control" name="input_team_nm" id="input_team_nm" readonly>
                                </div>
                            </div>

                            <div class="input-wrapper">
                                <label class="col-3">역할</label>
                                <div class="input-group col-8">
                                    <textarea class="form-control" name="input_team_role" id="input_team_role" cols="100" rows="5" style="height: 80px; resize: vertical;" />
                                </div>
                            </div>
                        </form>

                    </div>


                    <div class="display-none" id="SelfAuditPlanMenu2Div_2">
                        <div id="targetDiv">

                            <div>
                                @(Html.DevExtreme().DataGrid()
                                        .ID("SelfAuditPlanTargetGrid")
                                        .ShowBorders(true)
                                        .Selection(s => s.Mode(SelectionMode.Single))
                                        .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                                        .Height(334)
                                        .ShowColumnLines(true)
                                        .HoverStateEnabled(true)
                                        .ColumnAutoWidth(true)
                                        .KeyExpr("self_audit_dept_cd")
                                        .Columns(c =>
                                        {
                                            c.Add().DataField("self_audit_dept_cd").Caption("부서코드");
                                            c.Add().DataField("self_audit_dept_nm").Caption("부서명");
                                            c.Add().DataField("self_audit_plan_date").Caption("점검일자");

                                            c.Add().DataField("self_audit_dept_emp_cd").Visible(false);
                                            c.Add().DataField("self_audit_dept_emp_nm").Visible(false);
                                            c.Add().DataField("self_audit_plan_object").Visible(false);
                                            c.Add().DataField("db_check").Visible(false);
                                        })
                                        .OnFocusedRowChanged("TargetSelect")
                                    )
                            </div>



                            <form id="targetInfo" class="m-1">
                                <div class="input-wrapper">
                                    <label class="col-3">부서</label>
                                    <div class="input-group col-4">
                                        <input type="text" class="form-control" name="targetDept_cd" id="targetDept_cd" readonly required>
                                        <div class="input-group-append">
                                            <button class="btn btn-outline-secondary" type="button" id="targetDept_Btn" onclick="searchTargetDeptBtn()"><i class="fa fa-search"></i></button>
                                        </div>
                                    </div>

                                    <div class="input-group col-4">
                                        <input type="text" class="form-control" name="targetDept_nm" id="targetDept_nm" readonly>
                                    </div>
                                </div>

                                <div class="input-wrapper">
                                    <label class="col-3">부서장<star>*</star></label>
                                    <div class="input-group col-4">
                                        <input type="text" class="form-control" name="deptMaster_cd" id="deptMaster_cd" readonly required>
                                        <div class="input-group-append">
                                            <button class="btn btn-outline-secondary" type="button" id="deptMaster_Btn" onclick="searchDeptMasterBtn()"><i class="fa fa-search"></i></button>
                                        </div>
                                    </div>

                                    <div class="input-group col-4">
                                        <input type="text" class="form-control" name="deptMaster_nm" id="deptMaster_nm" readonly>
                                    </div>
                                </div>

                                <div class="input-wrapper">
                                    <label class="col-3">점검일자<star>*</star></label>
                                    <div class="input-group col-4">
                                        <input type="text" class="form-control datepicker required" name="targetInsert_Date" id="targetInsert_Date" value="@DateTime.Today.ToShortDateString()" required />
                                    </div>
                                </div>

                                <div class="input-wrapper">
                                    <label class="col-3">점검내용</label>
                                    <div class="input-group col-8">
                                        <textarea class="form-control" name="target_content" id="target_content" cols="100" rows="5" style="height: 80px; resize: vertical;" />
                                    </div>
                                </div>
                            </form>

                        </div>
                    </div>


                    <div class="display-none" id="SelfAuditPlanMenu2Div_3">
                        <div id="matchDiv">
                            <div>
                                @(Html.DevExtreme().DataGrid()
                                    .ID("SelfAuditPlanTargetGrid2")
                                    .ShowBorders(true)
                                    .Selection(s => s.Mode(SelectionMode.Single))
                                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                                    .Height(249)
                                    .ShowColumnLines(true)
                                    .HoverStateEnabled(true)
                                    .ColumnAutoWidth(true)
                                    .KeyExpr("self_audit_dept_cd")
                                    .Columns(c =>
                                    {
                                        c.Add().DataField("self_audit_dept_cd").Caption("부서코드").Width("15%");
                                        c.Add().DataField("self_audit_dept_nm").Caption("부서명").Width("20%");
                                        c.Add().DataField("self_audit_plan_date").Caption("점검일자").Width("20%");
                                        c.Add().DataField("self_audit_plan_object").Caption("점검내용").Width("40%");

                                        c.Add().DataField("self_audit_dept_emp_cd").Visible(false);
                                        c.Add().DataField("self_audit_dept_emp_nm").Visible(false);
                                        c.Add().DataField("db_check").Visible(false);
                                    })
                                    //.OnFocusedRowChanged("AuditorSearch")
                                )
                            </div>

                            <div>
                                @(Html.DevExtreme().DataGrid()
                                        .ID("SelfAuditPlanAuditorGrid")
                                        .ShowBorders(true)
                                        .Selection(s => s.Mode(SelectionMode.Single))
                                        .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                                        .Height(250)
                                        .ShowColumnLines(true)
                                        .HoverStateEnabled(true)
                                        .ColumnAutoWidth(true)
                                        .KeyExpr("self_audit_auditor")
                                        .Columns(c =>
                                        {
                                            c.Add().DataField("self_audit_auditor").Caption("사번");
                                            c.Add().DataField("self_audit_auditor_nm").Caption("성명");
                                            c.Add().DataField("self_audit_status").Caption("선택").DataType(GridColumnDataType.Boolean)
                                                .CalculateCellValue(@"function(rowData) { return (rowData.self_audit_status == ""Y"" || rowData.self_audit_status == true); }")
                                                .Width("10%");
                                        })
                                        .OnRowClick("selectAuditorGrid")
                                    )
                            </div>
                        </div>
                    </div>


                    <div class="display-none" id="SelfAuditPlanMenu2Div_4">
                        <div id="fileInfo">
                            <div align="right" id="btnDiv" class="m-1">
                                <button class="btn btn-secondary" id="file_Insert" onclick="PlanFileAdd()">첨부</button>
                                <button class="btn btn-secondary" id="file_Open" onclick="PlanFileOpen()">다운로드</button>
                                <button class="btn btn-secondary" id="file_Delete" onclick="PlanFileDelete()">삭제</button>
                                <input type="file" id="fileData" style="display: none;" />
                            </div>
                            <div>
                                @(Html.DevExtreme().DataGrid()
                                    .ID("SelfAuditPlanFileGrid")
                                    .ShowBorders(true)
                                    .Selection(s => s.Mode(SelectionMode.Single))
                                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                                    .Height(468)
                                    .ShowColumnLines(true)
                                    .HoverStateEnabled(true)
                                    .ColumnAutoWidth(true)
                                    .KeyExpr("file_id")
                                    .Columns(c =>
                                    {
                                        c.Add().DataField("doc_name").Caption("문서명").Width("55%");
                                        c.Add().DataField("upload_step_nm").Caption("첨부단계").Width("25%");
                                        c.Add().DataField("upload_emp_nm").Caption("첨부자").Width("20%");
                                        c.Add().DataField("self_audit_file").Visible(false);
                                        c.Add().DataField("file_id").Visible(false);
                                    })
                                    //.OnFocusedRowChanged("PlanSelect")
                                )
                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

