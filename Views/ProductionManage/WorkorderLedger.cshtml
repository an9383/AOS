@*제조(생산)계획 대장 작성*@
@using System.Data
@using HACCP.Libs.Views

@{
    Layout = null;
    ViewData["Title"] = "WorkorderLedger";

    var itemJson = @Html.Raw(Json.Encode(ViewBag.items.Data));
    var WorkorderLedgerAuth = @Html.Raw(Json.Encode(ViewBag.WorkorderLedgerAuth.Data));
    //var WorkorderLedgerAuth = @Html.Raw(Json.Serialize(@ViewBag.WorkorderLedgerAuth));
}
@{
    var tabs = new[] {
        new { id = 1, text = "제조지시대장작성" },
        new { id = 2, text = "전자서명"}
    };
}

@*제조(생산)계획 대장 작성*@

<script id="WorkorderLedgerJs">

    var tab_num = '1';
    var _workOrderLedgerSignCnt = 0;
    var _workOrderLedgerCellClickEvent;
    var _workOrderLedgerIsEditable = false;
    var _workOrderLedgerChanges = new Array();
    var _workOrderLedgerOrderID = 0;
    var _workorderLedgerSignGubun = "";
    var _workorderLedgerCRUDGubun = "";
    var _workorderLedgerSignData;
    var _workorderLedgerIsValid = false;

    $(function () {
        WorkorderLedge_ContentResize();

        var ds = @itemJson;

        var columns = [
            { dataField: "item_cd", caption: "품목코드" },
            { dataField: "item_nm", caption: "품목명" }
        ];

        createPopup("WorkorderLedgerItem", "품목조회", ds, columns, "item_cd");

        setDatePicker("#WorkorderLedger .datepicker");

        WorkorderLedgerEditing(false);

        WorkorderLedgerSearch();

    });

    function WorkorderLedgerEditing(isEditing) {

        // 수정중일때
        if (isEditing) {
            $("#WorkorderLedgerSearch").dxButton().parent().parent().addClass("display-none");//조회 숨김
            $("#WorkorderLedgerDelete").dxButton().parent().parent().addClass("display-none");//삭제 숨김
            $("#WorkorderLedgerInput").dxButton().parent().parent().addClass("display-none");//입력 숨김
            $("#WorkorderLedgerEdit").dxButton().parent().parent().addClass("display-none");//수정 숨김

            $("#WorkorderLedgerSave").dxButton().parent().parent().removeClass("display-none");//저장 보이기
            $("#WorkorderLedgerUndo").dxButton().parent().parent().removeClass("display-none");//취소 보이기

            $("#workorderLedgerForm :disabled").prop('disabled', false);
            $("#WorkorderLedgerGrid_1").dxDataGrid("option", "disabled", true);
            //$("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "disabled", false);
            //$("#WorkorderLedgerGrid_Tab_2").dxDataGrid("option", "disabled", true);

            $('#WorkorderLedgerDatePicker3').datepicker({
                format: "yyyy-mm-dd",	//데이터 포맷 형식(yyyy : 년 mm : 월 dd : 일 )
                autoclose: true,	//사용자가 날짜를 클릭하면 자동 캘린더가 닫히는 옵션
                templates: {
                    leftArrow: '&laquo;',
                    rightArrow: '&raquo;'
                }, //다음달 이전달로 넘어가는 화살표 모양 커스텀 마이징
                todayHighlight: true,	//오늘 날짜에 하이라이팅 기능 기본값 :false
                toggleActive: false,	//이미 선택된 날짜 선택하면 기본값 : false인경우 그대로 유지 true인 경우 날짜 삭제
                weekStart: 0,//달력 시작 요일 선택하는 것 기본값은 0인 일요일
                language: "ko"	//달력의 언어 선택, 그에 맞는 js로 교체해줘야한다.
            });

        } else {
            $("#WorkorderLedgerSearch").dxButton().parent().parent().removeClass("display-none");//조회 보이기
            $("#WorkorderLedgerDelete").dxButton().parent().parent().removeClass("display-none");//삭제 보이기
            $("#WorkorderLedgerInput").dxButton().parent().parent().removeClass("display-none");//입력 보이기
            $("#WorkorderLedgerEdit").dxButton().parent().parent().removeClass("display-none");//수정 보이기

            $("#WorkorderLedgerSave").dxButton().parent().parent().addClass("display-none");//저장 숨기기
            $("#WorkorderLedgerUndo").dxButton().parent().parent().addClass("display-none");//취소 숨기기

            $("#workorderLedgerForm :enabled").prop('disabled', true);
            $("#WorkorderLedgerGrid_1").dxDataGrid("option", "disabled", false);
            //$("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "disabled", true);
            //$("#WorkorderLedgerGrid_Tab_2").dxDataGrid("option", "disabled", false);

            $('#WorkorderLedgerDatePicker3').datepicker('destroy');
            $('#WorkorderLedgerDatePicker3').attr('readonly', true);

            _workOrderLedgerChanges = new Array();
        }

        $("#workorderLedgerForm select[name=order_dept_2]").readonly(true);


    }

    function WorkorderLedgerSearch() {

        $.ajax({
            type: 'POST',
            async: false,
            url: '/ProductionManage/GetWorkOrder',
            data: {
                pSearchDate: $("#WorkorderLedgerDatePicker1").val(),
                pDeptCd: $("select[id=WorkorderLedgerDept]").val(),//구분(상단 팀)
                pDeptCd_1: $("select[id=WorkorderLedgerDept_3]").val(),//제조부서(상단 제조부서 - 숨김)
                pSignStatus: $("select[id=WorkorderLedgerState]").val(),
                pSearchEndDate: $("#WorkorderLedgerDatePicker2").val(),
                pItemCd: $("#WorkorderLedgerItemCode").val(),
                pChkVisible: $("#order_check_visible").is(":checked") ? "N" : "Y"
            },
            success: function (result) {

                if (result[1] != "") {
                    var jsonResult = JSON.parse(result[1]);
                    $("#WorkorderLedgerGrid_1").dxDataGrid("option", "dataSource", jsonResult); //제조지시 내역
                    //$("#WorkorderLedgerGrid_1").dxDataGrid("option", "focusedRowIndex", 0);
                    
                } else {
                    $("#WorkorderLedgerGrid_1").dxDataGrid("option", "dataSource", []);
                    //$("#WorkorderLedgerGrid_1").dxDataGrid("option", "focusedRowKey", "");
                    $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "dataSource", []);
                    $("#WorkorderLedgerGrid_Tab_2").dxDataGrid("option", "dataSource", []);
                    $("#WorkorderLedgerGrid_Tab_2").dxDataGrid("instance").option("focusedRowEnabled", false);
                }

            }
        })
        UtilView.setGridFocus("G", "WorkorderLedgerGrid_1");

    }

    //메인 CRUD 이벤트 start ///////////////////////////////////
    function WorkorderLedgerInput() {

        WorkorderLedgerEditing(true);
        _workOrderLedgerIsEditable = true;
        _workorderLedgerCRUDGubun = "I";
        $("#dateUpdate_btn_div").addClass("display-none");
        WorkorderLedge_ContentResize();

        $("#workorderLedgerForm select[name=order_dept_2]").readonly(false);

        $("#WorkorderLedgerDatePicker3").prop("readonly", false);
        $("#WorkorderLedgerDatePicker3").datepicker("disabled", false);

        $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "dataSource", []);
        $("#WorkorderLedgerGrid_Tab_2").dxDataGrid("option", "dataSource", []);
        $("#WorkorderLedgerGrid_Tab_2").dxDataGrid("instance").option("focusedRowEnabled", false);

        var today = new Date();

        var year = today.getFullYear();
        var month = ((today.getMonth() + 1) < 10 ? "0" + (today.getMonth() + 1) : (today.getMonth() + 1));
        var date = (today.getDate() < 10 ? "0" + today.getDate() : today.getDate());

        $("#workorderLedgerForm input[name=order_start]").val(year + '-' + month + '-' + date);

        var editing = {
            allowUpdating: true,
            allowAdding: true,
            allowDeleting: true,
            mode: 'batch'
        }

        $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "editing", editing);
    }

    function WorkorderLedgerEdit() {

        _workOrderLedgerIsEditable = true;
        _workorderLedgerCRUDGubun = "U";

        if (_workOrderLedgerSignCnt > 0) {
            alert("서명된 대장은 수정할 수 없습니다.");
            return;
        }
        $("#dateUpdate_btn_div").addClass("display-none");

        var grid = $("#WorkorderLedgerGrid_1").dxDataGrid("instance");
        var data = getGridRowByKey("WorkorderLedgerGrid_1", grid.option("focusedRowKey"));

        _workOrderLedgerOrderID = data.order_id;

        WorkorderLedgerEditing(true);

        var editing = {
            allowUpdating: true,
            allowAdding: true,
            allowDeleting: true,
            mode: 'batch'
        }

        $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "editing", editing);

    }

    async function WorkorderLedgerSave() {

        await $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("instance").saveEditData();

        if (!_workorderLedgerIsValid) {
            return;
        }

        if (_workorderLedgerCRUDGubun === "I") {
            $.ajax({
                type: 'POST',
                url: '/ProductionManage/GetOrderId',
                async: false,
                data: {
                    gubun: _workorderLedgerCRUDGubun,
                    order_date: $("#WorkorderLedgerDatePicker3").val(),
                    making_dept_cd: $("#WorkorderLedgerDept_2").val(),
                    order_id: _workOrderLedgerOrderID
                },
                success: function (result) {
                    _workOrderLedgerOrderID = result;
                }
            })
        }

        $.ajax({
            type: 'POST',
            async: false,
            url: '/ProductionManage/WorkOrderLedgerCRUD',
            data: {
                workOrders: JSON.stringify(_workOrderLedgerChanges),
                order_id: _workOrderLedgerOrderID
            },
            success: function (result) {

            }
        })

        var editing = {
            allowUpdating: false,
            allowAdding: false,
            allowDeleting: false,
        }

        $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "editing", editing);

        WorkorderLedgerSearch();
        WorkorderLedgerEditing(false);
        
        $("input#dateEdit_value").val("false");
    }

    function WorkorderLedgerDelete() {

        _workorderLedgerCRUDGubun = "D";

        if (_workOrderLedgerSignCnt > 0) {
            alert("서명된 대장은 수정할 수 없습니다.");
            return;
        }

        var isOK = confirm("이 제조지시대장을 삭제하시겠습니까?");

        if (!isOK) {
            return;
        }

        var datagrid = $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("instance");

        var gridData = datagrid.option("dataSource");

        var order_id = gridData[0].order_id;

        for (var i = 0; i < gridData.length; i++) {

            var data = gridData[i];

            data.gubun = "D";
        }

        //지시 관련 데이터 삭제
        $.ajax({
            type: 'POST',
            url: '/ProductionManage/WorkOrderLedgerCRUD',
            data: {
                workOrders: JSON.stringify(gridData),
                order_id: order_id
            },
            async: false,
            success: function (result) {

                if (!UtilView.isEmpty(result)) {
                    alert(JSON.parse(result).messege);
                }
               

                //제조대장삭제
                //$.ajax({
                //    type: 'POST',
                //    async: false,
                //    url: '/ProductionManage/ClearOrderId',
                //    data: {
                //        order_id: order_id
                //    },
                //    success: function (result) {

                //        if (JSON.parse(result).messege === "1") {
                //            alert("삭제되었습니다.");
                //        }
                //    }
                //})
            }
        })

        WorkorderLedgerSearch();

        }

    function WorkorderLedgerUndo() {

        WorkorderLedgerEditing(false);
        
        $("input#dateEdit_value").val("false");

        var editing = {
            allowUpdating: false,
            allowAdding: false,
            allowDeleting: false,
            mode: 'batch'
        }

        $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "editing", editing);

        _workorderLedgerCRUDGubun = "";

        workOrderLedgerSelectWorkOrder();
    }

    //메인 CRUD 이벤트 end ///////////////////////////////////

    function updateWorkOrderLedger() {

        $.ajax({
            type: 'POST',
            async: false,
            url: '/ProductionManage/GetOrderId',
            data: {
                gubun: "U",
                order_date: $("#WorkorderLedgerDatePicker3").val(),
                making_dept_cd: $("#WorkorderLedgerDept_2").val(),
                order_id: _workOrderLedgerOrderID
            },
            success: function (result) {
                    
            }
        })
    }

    //제조지시 그리드 CRUD 이벤트 start /////////////////////

    function WorkorderLedgerUpdate(info) {

        var data = info.data;
        data.gubun = "U";
        data.order_date = $("#WorkorderLedgerDatePicker3").val();
        data.making_dept_cd = $("#WorkorderLedgerDept_2").val();
        data.order_id = _workOrderLedgerOrderID;

        var date = new Date(data.lot_date);

        var day = date.getDate();
        var month = date.getMonth() + 1;
        var year = date.getFullYear();

        day = (day < 10) ? ("0" + day) : day;
        month = (month < 10) ? ("0" + month) : month;

        data.lot_date = year + "-" + month + "-" + day;

        _workOrderLedgerChanges.push(data);

        //WorkorderSave(data);
    }

    function WorkorderLedgerInsert(info) {

        var datagrid = $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("instance").option("dataSource");

        var data = info.data;
        data.gubun = "I";
        data.order_date = $("#WorkorderLedgerDatePicker3").val();
        data.making_dept_cd = $("#WorkorderLedgerDept_2").val();
        data.order_id = _workOrderLedgerOrderID;

        var date = new Date(data.lot_date);

        var day = date.getDate();
        var month = date.getMonth() + 1;
        var year = date.getFullYear();

        day = (day < 10) ? ("0" + day) : day;
        month = (month < 10) ? ("0" + month) : month;

        data.lot_date = year + "-" + month + "-" + day;

        _workOrderLedgerChanges.push(data);

        //WorkorderSave(data);
    }

    function WorkorderLedgerDelete2(info) {

        var data = info.data;
        data.gubun = "D";

        _workorderLedgerIsValid = true;
        _workOrderLedgerChanges.push(data);

        //WorkorderSave(data);
    }

    function WorkorderSave(data) {

        $.ajax({
            type: 'POST',
            async: false,
            url: '/ProductionManage/WorkOrderLedgerCRUD',
            data: data,
            success: function (result) {



            }
        })
    }

    function WorkorderLedgerInitNew(e) {
        if (_workOrderLedgerIsEditable) {

            var date = $("#WorkorderLedgerDatePicker3").val();
            var dataGrid = $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("instance");
            var dataSource = dataGrid.getDataSource();
            var seq;

            if (dataSource == null) seq = 0;
            else  seq = dataSource._items.length;

            e.data.workorder_seq = seq;
            //e.data.workorder_seq = (ds.length + 1);
            e.data.lot_date = $("#WorkorderLedgerDatePicker3").val();
        }
    }

    //제조지시 로우 추가(제조지시 작성 그리드)
    function WorkorderLedgerInput_1() {
        if (_workOrderLedgerIsEditable) {
            var date = $("#WorkorderLedgerDatePicker3").val();
            var dataGrid = $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("instance");
            var dataSource = dataGrid.getDataSource();
            var seq;

            if (dataSource == null) {
                seq = 0;
                var data = [
                    { lot_date: date, workorder_seq: seq }
                ];

                $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "dataSource", data);
            }else {
                seq = dataSource.length;
                var data = { lot_date: date, workorder_seq: seq };

                dataSource.store().insert(data).then(function () {
                    dataSource.reload();
                })
            }

            var editing = {
                allowUpdating: true,
                allowAdding: false,
                allowDeleting: false,
                mode: 'row'
            }

            $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "editing", editing);
        }
    }

    //제조지시 그리드 CRUD 이벤트 end /////////////////////

    // 제품 팝업
    function SearchItem() {
        var popup = $("#WorkorderLedgerItemPopup").dxPopup("instance");

        popup.show();
    }

    //제조제품 조회 팝업
    function SearchItem_1(e) {

        if (!_workOrderLedgerIsEditable) {
            return;
        }

        _workOrderLedgerCellClickEvent = e;

        if (e.columnIndex == 2) {
            var popup = $("#WorkorderLedgerItemPopup_1").dxPopup("instance");
            popup.option("contentTemplate", $("#WorkorderLedgerItemPopupTemplate_1"));

            $.ajax({
                type: 'POST',
                async: false,
                url: '/ProductionManage/GetPopupItem',
                success: function (result) {

                    if (result[0] != "") {
                        var jsonResult = JSON.parse(result);

                        $("#WorkorderLedgerItemPopupGrid_1").dxDataGrid("option", "dataSource", jsonResult);
                    }
                }
            })

            popup.show();
        }

    }

    //조회 결과 그리드 포커스 변경시, 원료 재고 상황 그리드 데이터 표시
    function workOrderLedgerSelectWorkOrder() {
        _workOrderLedgerSignCnt = 0;
        _workOrderLedgerOrderID = 0;

        var grid = $("#WorkorderLedgerGrid_1").dxDataGrid("instance");
        var data = getGridRowByKey("WorkorderLedgerGrid_1", grid.option("focusedRowKey"));

        if (UtilView.isEmpty(data)) return;

        // 계획대장의 상태가 승인 상태일 경우 제조일자 변경 버튼 표시
        if (data.sign_status == "3") {
            $("#dateUpdate_btn_div").removeClass("display-none");
        } else {
            $("#dateUpdate_btn_div").addClass("display-none");
        }
        WorkorderLedge_ContentResize();

        $.ajax({
            type: 'POST',
            async: false,
            url: '/ProductionManage/SelectWorkOrderDetail',
            data: {
                order_id: data.order_id,
                item_cd: data.item_cd,
            },
            success: function (result) {

                if (result[0].length > 0) {

                    $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "dataSource", JSON.parse(result[0]));
                    $("#WorkorderLedgerGrid_Tab_2").dxDataGrid("option", "dataSource", JSON.parse(result[1]));
                    $("#WorkorderLedgerGrid_Tab_2").dxDataGrid("instance").option("focusedRowEnabled", true);
                    $("#WorkorderLedgerGrid_Tab_2").dxDataGrid("instance").option("focusedRowIndex", 0);

                    for (var i = 0; i < JSON.parse(result[1]).length; i++) {
                        _workOrderLedgerSignCnt += parseInt(JSON.parse(result[1])[i].sign_yn, 10);
                    }

                    //_workOrderLedgerSignCnt = ;

                    $("#workorderLedgerForm input[name=order_start]").val(data.order_date);
                    $("#workorderLedgerForm select[name=order_dept_2]").val(data.making_dept_cd);
                } else {
                    $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("option", "dataSource", []);
                    $("#WorkorderLedgerGrid_Tab_2").dxDataGrid("option", "dataSource", []);
                    $("#WorkorderLedgerGrid_Tab_2").dxDataGrid("instance").option("focusedRowEnabled", false);
                }
            }
        })
    }

    function setWorkorderData() {

    }

    //조회 결과 그리드 포커스 변경시, 원료 재고 상황 그리드 데이터 표시
    function WorkorderLedgerItemPopupGridFocuseChanged_1(e) {

        var grid = $("#WorkorderLedgerItemPopupGrid_1").dxDataGrid("instance");
        var data = getGridRowByKey("WorkorderLedgerItemPopupGrid_1", grid.option("focusedRowKey"));

        $.ajax({
            type: 'POST',
            async: false,
            url: '/ProductionManage/GetPopupItemDetail',
            data: {
                pItemCd: data.item_cd,
                pRevisionNo: data.revision_no,
                pOrderCnt: $("#WorkorderLedgerItemPopupCnt").val(),
                pBatchSize: $("select[id=WorkorderLedgerItemPopupBatch]").val()
            },
            success: function (result) {

                if (result[0] != "") {
                    var jsonResult = JSON.parse(result);

                    $("#WorkorderLedgerItemPopupGrid_2").dxDataGrid("option", "dataSource", jsonResult);
                }
            }
        })
    }

        //제조제품 조회 팝업 -> 아이템 선택 -> 제조지시대장작성 그리드에 데이터 설정
    function addWorkorderItem() {

        //제조제품 조회 팝업 선택 데이터
        var popGrid = $("#WorkorderLedgerItemPopupGrid_1").dxDataGrid("instance");
        var selData = getGridRowByKey("WorkorderLedgerItemPopupGrid_1", popGrid.option("focusedRowKey"));

        //제조지시대장작성 그리드
        var grid = $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("instance");
        var rowIndex = grid.getRowIndexByKey(grid.option("focusedRowKey"));

        $.ajax({
            type: 'POST',
            async: false,
            url: '/ProductionManage/GetValidDate',
            data: {
                pItemCd: selData.item_cd,
                pOrderDate: $("#WorkorderLedgerDatePicker3").val(),
            },
            success: function (result) {
                if (result != "") {
                    grid.cellValue(_workOrderLedgerCellClickEvent.rowIndex, "valid_date", result);
                }
            }
        })
        var popup = $("#WorkorderLedgerItemPopup_1").dxPopup("instance");
        popup.hide();

        grid.cellValue(_workOrderLedgerCellClickEvent.rowIndex, "item_cd", selData.item_cd);
        grid.cellValue(_workOrderLedgerCellClickEvent.rowIndex, "item_nm", selData.item_nm);
        grid.cellValue(_workOrderLedgerCellClickEvent.rowIndex, "revision_no", selData.revision_no);
        grid.cellValue(_workOrderLedgerCellClickEvent.rowIndex, "order_qty", selData.batch_size);

    }

    // 공정 트리리스트 컬럼 클릭 이벤트 제한
    function workOrderEditableColumn(cellElement, cellInfo) {

        if (cellElement.rowType != "data" || !cellElement.isEditing)
            return;
        if (cellElement.column.dataField === 'revision_no' && !cellElement.row.inserted)
            cellElement.element.find('input').prop('disabled', true);
        if (cellElement.column.dataField === 'order_no' && !cellElement.row.inserted)
            cellElement.element.find('input').prop('disabled', true);
        if (cellElement.column.dataField === 'item_nm' && !cellElement.row.inserted)
            cellElement.element.find('input').prop('disabled', true);
        if (cellElement.column.dataField === 'order_status_nm' && !cellElement.row.inserted)
            cellElement.element.find('input').prop('disabled', true);

    }


    // 제품 팝업 데이터로우 더블클릭
    function WorkorderLedgerItemRowDblClick(selectedItems) {

        var data = selectedItems.data;

        $("#WorkorderLedgerItemName").val(data.item_nm);
        $("#WorkorderLedgerItemCode").val(data.item_cd);

        var popup = $("#WorkorderLedgerItemPopup").dxPopup("instance");

        popup.hide();

        }

    // 탭 클릭 시, 탭 이동
    function Tabs_itemClick(e) {

        var formData = new FormData($("#WorkorderLedger_Form")[0]);

        // 현재 보여지고 있는 Tab 이외의 Tab을 선택 했을 시,
        if (e.itemData.id !== tab_num) {

            // 1.제조지시대장작성
            if (e.itemData.id === 1) {
                // 이전 Tab display-none
                $("#WorkorderLedgerTab_" + tab_num).addClass("display-none");
                tab_num = '1';
                $("#WorkorderLedgerTab_" + tab_num).removeClass("display-none");

                // 2.전자서명
            } else if (e.itemData.id === 2) {
                // 이전 Tab display-none
                $("#WorkorderLedgerTab_" + tab_num).addClass("display-none");
                tab_num = '2';
                $("#WorkorderLedgerTab_" + tab_num).removeClass("display-none");

            }

            // Tab Number
            formData.set("tab_num", tab_num);

        }

    }

    // 전자서명 테이블 클릭
    function WorkorderLedgerSign(e) {

        _workorderLedgerSignData = e.data;

        if (e.columnIndex == 3) {
            _workorderLedgerSignGubun = "UpdateSignature";

            if (e.data.prev_sign_yn == "0") {
                alert("먼저 앞 단계 승인이 필요합니다.");
                return;
            }

            if (e.data.sign_yn == "1") {

                if (e.data.next_sign_yn == "1") {
                    alert("이미 다음 단계가 승인 되어 있습니다.\n먼저 다음 단계 승인을 삭제(취소)해주세요. ");
                    return;
                }

                if (confirm("이미 승인 되었습니다. 서명을 삭제하시겠습니까?")) {
                    _workorderLedgerSignGubun = "DeleteSignature";
                } else {
                    return;
                }

            }

            var popup = $("#WorkorderLedgerSignPopup").dxPopup("instance");
            popup.option("contentTemplate", $("#WorkorderLedgerSignPopupTemplate"));
            popup.show();

        }
    }

    // 서명 권한 체크(id, pw)
    function WorkorderLedgerSignSubmit() {

        var data = new FormData($('#WorkorderLedgerSign_Form')[0]);

        var datagrid1 = $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("instance");
        var datagrid2 = $("#WorkorderLedgerGrid_Tab_2").dxDataGrid("instance");

        data.set("gubun", "S");

        var gridData1 = datagrid1.option("dataSource");
        var gridData2 = getGridRowByKey("WorkorderLedgerGrid_Tab_2", datagrid2.option("focusedRowKey"));

        $.ajax({
            type: 'POST',
            url: '/Comm/IDValidation',
            data: data,
            contentType: false,
            processData: false,
            success: function (result) {
                if (result.length <= 0) {
                    alert("잘못된 ID,PW 입니다.");
                    return;
                }

                var isOK = false;

                if (_workorderLedgerSignData.responsible_emp_cd !== JSON.parse(result)[0].emp_cd) {

                    $.ajax({
                        type: 'GET',
                        url: '/Comm/DelegateCheck',
                        data: {
                            emp_cd: JSON.parse(result)[0].emp_cd,
                            sign_set_cd: "2007",
                            sign_set_seq: gridData2.sign_set_dt_seq
                        },
                        async: false,
                        success: function (result) {

                            if (result.length > 0) {
                                isOK = true;
                            } else {
                                isOK = false;
                            }
                        }
                    });
                } else {
                    isOK = true;
                }

                if (!isOK) {
                    alert("권한이 없는 사용자입니다.");
                    return;
                }

                $("#WorkorderLedgerSignConfirmForm input[name='dept_nm']").val(JSON.parse(result)[0].dept_nm);
                $("#WorkorderLedgerSignConfirmForm input[name='emp_nm']").val(JSON.parse(result)[0].emp_nm);

                setTimeout(function () {
                    $.ajax({
                        type: 'POST',
                        async: false,
                        url: '/ProductionManage/WorkorderSignCRUD',
                        data: {
                            gubun: _workorderLedgerSignGubun,
                            c_seq: gridData2.sign_set_dt_seq,
                            emp_cd: JSON.parse(result)[0].emp_cd,
                            order_id: gridData1[0].order_id,
                            validation_type: "2",
                            sign_status: _workOrderLedgerSignCnt
                        },
                        success: function (result) {

                            alert(JSON.parse(result).messege);

                            WorkorderLedgerSearch();
                            //workOrderLedgerSelectWorkOrder();

                        }
                    });

                    _workorderLedgerSignGubun = "";

                    var popup = $("#WorkorderLedgerSignPopup").dxPopup("instance");
                    popup.hide();
                }, 1000);
            }
        });
    }

    // 서명 인풋 초기화
    function clearSignInput() {
        $('#WorkorderLedgerSign_Form')[0].reset();
        $("#WorkorderLedgerSignConfirmForm input[name='dept_nm']").val("");
        $("#WorkorderLedgerSignConfirmForm input[name='emp_nm']").val("");
    }

    function WorkorderLedgerGridValidation(e) {

        _workorderLedgerIsValid = e.isValid;
    }


    function WorkOrderLedger_DateUpdate() {
        if (confirm("선택한 제조지시의 제조일자를 변경하시겠습니까?")) {
            var editing = {
                allowUpdating: true,
                mode: 'cell'
            }

            var grid = $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("instance");
            grid.option("editing", editing);
            
            $("input#dateEdit_value").val("true");
            WorkorderLedgerEditing(true);
        }
    }


    // 제조일자만 수정 가능
    function CellIndexCheck(e) {
    
        if (!(e.index == "6") && $("input#dateEdit_value").val() == "true") {
            e.editorOptions.disabled = true; 
        }
    }


    function ValidDateCheck(e) {
        if (e.parentType == 'dataRow' && e.dataField == 'lot_date') {
            e.editorElement.dxDateBox('instance').option('onValueChanged', args => {
                var grid = $("#WorkorderLedgerGrid_Tab_1").dxDataGrid("instance");
                var item_cd = grid.cellValue(e.row.rowIndex, "item_cd");
                if (item_cd != "" && item_cd != null) {
                    var date = getFormatDate(args.value);

                    $.ajax({
                        type: 'POST',
                        url: '/ProductionManage/GetValidDate',
                        async: false,
                        data: {
                            pOrderDate: date,
                            pItemCd: item_cd
                        },
                        success: function (result) {
                            e.setValue(args.value);
                            grid.cellValue(e.row.rowIndex, "valid_date", result);
                        }
                    })
                }
            });

        }
    }


    function getFormatDate(date) {
        var year = date.getFullYear();              //yyyy
        var month = (1 + date.getMonth());          //M
        month = month >= 10 ? month : '0' + month;  //month 두자리로 저장

        var day = date.getDate();                   //d
        day = day >= 10 ? day : '0' + day;          //day 두자리로 저장

        return year + '-' + month + '-' + day;       //'-' 추가하여 yyyy-mm-dd 형태 생성 가능
    }


    // 리사이즈
    function WorkorderLedge_ContentResize() {
        var topPoint = document.getElementById("WorkorderLedger_Top").getBoundingClientRect().bottom;
        var content_max_height = window.innerHeight - (topPoint + 1) - 20;

        // 공정 그리드
        document.getElementById("WorkorderLedgerGrid_1").style.height = content_max_height + "px";

        // 우측 하단 div
        var subPoint = document.querySelector("div.box-height-auto.mb-0").getBoundingClientRect().top;
        content_max_height = window.innerHeight - (subPoint - 1) - 20;
        document.querySelector("div.box-height-auto.mb-0").style.height = content_max_height + "px";

    }

</script>

<div id="WorkorderLedger">

    @* === 제품 팝업 === *@
    <div id="WorkorderLedgerItemPopup"></div>

    @* === 제조제품 조회 팝업 === *@
    <div id="WorkorderLedgerItemPopup_1"></div>

    @(Html.DevExtreme().Popup()
            .ID("WorkorderLedgerItemPopup_1")
            .Width(1200)
            .Height(700)
            .ShowTitle(true)
            .Title("제조제품 조회")
            .Visible(false)
            .DragEnabled(true)
            .CloseOnOutsideClick(false)
        )
    <!-- 제조제품 조회 팝업-->
    @using (Html.DevExtreme().NamedTemplate("WorkorderLedgerItemPopupToolbar_1"))
    {
        <div class="col-11">
            @*<label class="col-3">지시수량</label>
                <input type="text" id="WorkorderLedgerItemPopupCnt" class="form-control col-2" name="order_cnt">

                <label class="col-4">생산배치수</label>
                <select class="col-2 form-control" id="WorkorderLedgerItemPopupBatch" name="order_batch">
                    @for (var i = 1; i <= 20; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>*@
        </div>
    }

    @using (Html.DevExtreme().NamedTemplate("WorkorderLedgerItemPopupTemplate_1"))
    {

        @(Html.DevExtreme().Toolbar()
                .ID("WorkorderLedgerItemPopupTemplateToolbar_1")
                .Items(items =>
                {
                    items.Add()
                        .Widget(w => w
                        .Button()
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .ID("addWorkorderItem")
                        .Icon("check")
                        .Text("확인")
                        .OnClick("addWorkorderItem")
                        )
                        .Location(ToolbarItemLocation.After);
                    })
                    .Items(items =>
                    {
                        items.Add()
                        .Template(new TemplateName("WorkorderLedgerItemPopupToolbar_1"))
                        .Location(ToolbarItemLocation.Before);

                    })
            )

        <div class="col-12 row">
            <div class="col-4 box">
                @(Html.DevExtreme().DataGrid()
                    .ID("WorkorderLedgerItemPopupGrid_1")
                    .ShowBorders(true)
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                    .Height(550)
                    .ColumnAutoWidth(true)
                    .HoverStateEnabled(true)
                    .FocusedRowIndex(0)
                    .FocusedRowEnabled(true)
                    .KeyExpr("row_num")
                    .Columns(c =>
                    {
                        c.Add().DataField("item_cd").Caption("제품코드");
                        c.Add().DataField("item_nm").Caption("제품명");
                        c.Add().DataField("batch_size2").Caption("배치사이즈");
                    })
                .OnFocusedRowChanged("WorkorderLedgerItemPopupGridFocuseChanged_1")
                )

            </div>

            <div class="col-8">
                @(Html.DevExtreme().DataGrid()
                    .ID("WorkorderLedgerItemPopupGrid_2")
                    .ShowBorders(true)
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                    .Height(550)
                    .ColumnAutoWidth(true)
                    .HoverStateEnabled(true)
                    .FocusedRowIndex(0)
                    .FocusedRowEnabled(true)
                    .KeyExpr("child_cd")
                    .Columns(c =>
                    {
                        c.Add().DataField("child_cd").Caption("원료 코드");
                        c.Add().DataField("child_nm").Caption("원료 명");
                        c.Add().DataField("standard_qty").Caption("기준량");
                        c.Add().DataField("use_qty").Caption("필요량");
                        c.Add().DataField("remain_qty").Caption("재고량");
                        c.Add().DataField("item_unit").Caption("단위");
                        c.Add().DataField("enable_cnt").Caption("생산가능배치");
                        c.Add().DataField("material_percent").Caption("비율");
                        c.Add().DataField("item_bom_tea_qty").Caption("허가량");

                    })
                )
            </div>
        </div>


    }

    @using (Html.DevExtreme().NamedTemplate("WorkorderLedgerSignPopupTemplate"))
    {
        <h6>전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

        <form id="WorkorderLedgerSign_Form">

            <div class="input-wrapper">
                <label class="col-3">아이디</label>
                <input type="text" class="col-8 form-control" name="txt_ID">

                <label class="col-3">비밀번호</label>
                <input type="password" class="col-8 form-control" name="txt_Pass">
            </div>

        </form>
        <div class="align-content-end">
            <button onclick="WorkorderLedgerSignSubmit()">확인</button>
        </div>

        <br />
        <hr />

        <form id="WorkorderLedgerSignConfirmForm">

            <label class="col-3">부서</label>
            <input type="text" class="col-8 form-control" name="dept_nm" readonly="readonly" />
            <label class="col-3">성명</label>
            <input type="text" class="col-8 form-control" name="emp_nm" readonly="readonly" />

        </form>

    }

    @(Html.DevExtreme().Popup()
            .ID("WorkorderLedgerSignPopup")
            .Width(500)
            .Height(420)
            .ShowTitle(true)
            .Title("작업자 인증")
            .OnHidden("clearSignInput")
            .Visible(false)
            .DragEnabled(true)
            .CloseOnOutsideClick(false)
        )

    <div id="WorkorderLedger_Top" class="mainTop row">

        <div class="col-8">

            <form id="WorkorderLedger_Form">

                <div class="input-wrapper">

                    <div class="input-group input-group-sm col-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">지시일자</span>
                        </div>
                        <input type="text" class="form-control datepicker" name="order_start" id="WorkorderLedgerDatePicker1" value="@DateTime.Today.AddDays(-(DateTime.Today.Day-1)).ToShortDateString()">
                        <input type="text" class="form-control datepicker" name="order_end" id="WorkorderLedgerDatePicker2" value="@DateTime.Today.ToShortDateString()">
                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">구분</span>
                        </div>
                        <select class="form-control" name="order_dept" id="WorkorderLedgerDept">
                            @foreach (DataRow row in ((DataTable)ViewBag.teamGubuns).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <select class="form-control" name="order_dept_3" id="WorkorderLedgerDept_3" style="display:none;">
                        @foreach (DataRow row in ((DataTable)ViewBag.teamGubuns_3).Rows)
                        {
                            <option value="@row["keyfield"]">@row["displayfield"]</option>
                        }
                    </select>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">상태</span>
                        </div>
                        <select class="form-control" name="order_state" id="WorkorderLedgerState">
                            @foreach (DataRow row in ((DataTable)ViewBag.signGubuns).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="input-group input-group-sm col-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">제품</span>
                        </div>
                        <input type="text" class="form-control" name="order_item_nm" id="WorkorderLedgerItemName">
                        <input type="hidden" class="form-control" name="order_item_cd" id="WorkorderLedgerItemCode">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary" type="button" id="searchItemBtn" onclick="SearchItem()">
                                <i class="fa fa-search"></i>
                            </button>
                        </div>
                    </div>

                    <div class="input-group input-group-sm col-1">
                        <div class="input-group-prepend">
                            <span class="input-group-text">결제진행중</span>
                        </div>
                        <input type="checkbox" name="order_check" id="order_check" value="Y" />
                    </div>

                </div>

            </form>
        </div>

        <div class="CRUD-btn col-4">
            @* === CRUD 버튼 === *@
            @{Html.SetToolbar(0, true, "Search;Input;Edit;Delete;Save;Undo"); }
        </div>

    </div>

    <div class="row">

        <div class="col-3 pr-1">

            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("WorkorderLedgerGrid_1")
                    .KeyExpr("order_id")
                    .ShowBorders(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ColumnAutoWidth(true)
                    .FocusedRowEnabled(true)
                    .FocusedRowIndex(0)
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                    .Height(869)
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Columns(columns =>
                    {
                        columns.Add().DataField("order_date").Caption("지시일자");
                        columns.Add().DataField("making_dept_nm").Caption("구분");
                        columns.Add().DataField("sign_status_nm").Caption("상태");
                        columns.Add().DataField("work_order_cnt").Caption("제조지시수");
                    })
                    .OnFocusedRowChanged("workOrderLedgerSelectWorkOrder")
                )
            </div>

        </div>

        <div class="col-9 pl-0">
            <!-- 생산계획 -->
            @*<div class="row">
            <div class="margin-bottom box">
                <div class="divName">
                    <p>생산계획</p>
                </div>
                <div style="text-align:right;">
                    <label>미조회 데이터</label>
                    <input type="checkbox" name="order_check_visible" id="order_check_visible" class="col-1" />

                    <label class="col-2">생산계획 제품</label>
                    <select class="col-1 form-control" name="order_material" id="WorkorderLedger_material">
                    </select>
                </div>

                @(Html.DevExtreme().DataGrid()
                    .ID("WorkorderLedgerGrid_2")
                    .ShowBorders(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ColumnAutoWidth(true)
                    .FocusedRowEnabled(true)
                    .FocusedRowIndex(0)
                    .Height(300)
                    .KeyExpr("order_request_no")
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Columns(columns =>
                    {
                        columns.Add().DataField("m_shortage_cnt").Caption("결품수");
                        columns.Add().DataField("order_request_date").Caption("생산의뢰일자");
                        columns.Add().DataField("order_request_no").Caption("생산의뢰번호");
                        columns.Add().DataField("item_cd").Caption("제품코드");
                        columns.Add().DataField("item_nm").Caption("제품명");
                        columns.Add().DataField("lot_no").Caption("제조번호");
                        columns.Add().DataField("lot_size").Caption("의뢰수량");
                        columns.Add().DataField("order_qty").Caption("지시수량");
                        columns.Add().DataField("remain_order_qty").Caption("잔량");
                        columns.Add().DataField("lot_size_unit_cd").Caption("단위");
                        columns.Add().DataField("require_date").Caption("납기일자");
                    })
                    )

            </div>
        </div>*@

            <div class="box-height-auto mb-1" style="width:100%">

                <div class="divName">
                    <p>제조지시대장</p>
                </div>

                <form id="workorderLedgerForm" style="padding: 25px 0;">

                    <div class="input-wrapper">
                        <label class="col-1">지시일자 <star>*</star></label>
                        <div class="input-group col-3">
                            <input type="text" class="form-control col-12 required" name="order_start" id="WorkorderLedgerDatePicker3" value="@DateTime.Today.ToShortDateString()">
                        </div>

                        <label class="col-1">구분 <star>*</star></label>
                        <div class="input-group col-3">
                            <select class="form-control required" name="order_dept_2" id="WorkorderLedgerDept_2">
                                @foreach (DataRow row in ((DataTable)ViewBag.teamGubuns_2).Rows)
                                {
                                    <option value="@row["keyfield"]">@row["displayfield"]</option>
                                }
                            </select>
                        </div>
                    </div>

                    <!-- visible(false)-->
                    <select class="col-1 form-control" name="order_dept_1" id="WorkorderLedgerDept_1" style="display:none;">
                        @foreach (DataRow row in ((DataTable)ViewBag.teamGubuns_1).Rows)
                        {
                            <option value="@row["keyfield"]">@row["displayfield"]</option>
                        }
                    </select>

                </form>
                
            </div>

            <div id="dateUpdate_btn_div"class="pr-1 display-none" style="height: 25px; text-align: end;">
                <button class="btn btn-secondary" onclick="WorkOrderLedger_DateUpdate()">제조일자 수정</button>
                <input id="dateEdit_value" type="hidden" value="false" />
            </div>

            <div class="box-height-auto mb-0" style="height: 739px;">
                <!-- DevExtreme Tab -->
                <div id="WorkorderLedger_Tab_div">
                    @(Html.DevExtreme().Tabs()
                        .ID("WorkorderLedger_Tab_gap")
                        .DataSource(tabs)
                        .SelectedIndex(0)
                        .OnItemClick("Tabs_itemClick")
                    )
                </div>

                <div id="WorkorderLedgerTab_1">

                    <!-- 제조지시대장작성 -->
                    @(Html.DevExtreme().DataGrid()
                        .ID("WorkorderLedgerGrid_Tab_1")
                        .OnRowUpdated("WorkorderLedgerUpdate")
                        .OnRowInserted("WorkorderLedgerInsert")
                        .OnRowRemoved("WorkorderLedgerDelete2")
                        .OnInitNewRow("WorkorderLedgerInitNew")
                        .AllowColumnResizing(true)
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .ShowRowLines(true)
                        .ColumnAutoWidth(true)
                        .DataSource(new JS("setWorkorderData"))
                        .KeyExpr("order_no")
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .OnCellClick("SearchItem_1")
                        .OnCellPrepared("workOrderEditableColumn")
                        .OnToolbarPreparing("HideToolbarButton")
                        .OnRowValidating("WorkorderLedgerGridValidation")
                        .Columns(columns =>
                        {
                            columns.Add().DataField("revision_no").Caption("개정번호")
                                .ValidationRules(vr =>
                                {
                                    vr.AddRequired().Message("개정번호는 필수 입력사항입니다.");
                                });

                            columns.Add().DataField("order_no").Caption("제조지시번호");

                            columns.Add().DataField("item_cd").Caption("제품코드").CellTemplate(new JS("cellWithButton")).Width(150)
                                .ValidationRules(vr =>
                                {
                                    vr.AddRequired().Message("제품코드는 필수 입력사항입니다.");
                                });

                            columns.Add().DataField("order_qty").DataType(GridColumnDataType.Number).Caption("지시수량");
                            columns.Add().DataField("item_nm").Caption("제품명");

                            columns.Add().DataField("lot_no").DataType(GridColumnDataType.String).Caption("제조번호")
                                .ValidationRules(vr =>
                                {
                                    vr.AddRequired().Message("제조번호는 필수 입력사항입니다.");
                                });
                            columns.Add().DataField("lot_date").DataType(GridColumnDataType.Date).Caption("제조일자");
                            columns.Add().DataField("valid_date").DataType(GridColumnDataType.Date).Caption("사용기한");
                            columns.Add().DataField("order_bigo").DataType(GridColumnDataType.String).Caption("비고");
                            columns.Add().DataField("order_status_nm").Caption("상태");
                        })
                        .OnEditorPreparing("CellIndexCheck")
                        .OnEditorPrepared("ValidDateCheck")
                    )
                </div>

                <div class="display-none" id="WorkorderLedgerTab_2">
                    @(Html.DevExtreme().DataGrid()
                        .ID("WorkorderLedgerGrid_Tab_2")
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .ShowRowLines(true)
                        .OnCellClick("WorkorderLedgerSign")
                        .KeyExpr("displayfield")
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Columns(columns =>
                        {
                            columns.Add().DataField("displayfield").Caption("구분");
                            columns.Add().DataField("sign_emp_nm").Caption("서명자");
                            columns.Add().DataField("sign_time").Width(185).Caption("서명일자");
                            columns.Add().DataField("sign_image").Caption("서명")
                                .AllowFiltering(false)
                                .AllowSorting(false)
                                .CellTemplate(@<text>
                                    <div>
                                        <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                    </div>
                                </text>);
                        })
                    )
                </div>

            </div>

        </div>

    </div>

</div>