@using System.Data
@using HACCP.Libs.Views
@{
    Layout = null;
    ViewBag.Title = "ReleasedOrRejectedLabel";
}

@{
    var ReleasedOrRejectedLabelData = @Html.Raw(Json.Encode(ViewBag.ReleasedOrRejectedLabelData.Data));
    var ReleasedOrRejectedLabelAuth = @Html.Raw(Json.Encode(ViewBag.ReleasedOrRejectedLabelAuth.Data));
}

<script type="text/javascript" id="ReleasedOrRejectedLabelJs">

    // SP 구문, gubun 변수
    var ReleasedOrRejectedLabel_Gubun = "";

    // 메뉴 권한
    var _ReleasedOrRejectedLabelAuth;

    $(function () {

        if (@ReleasedOrRejectedLabelData !== "") {
            $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("dataSource", JSON.parse(@ReleasedOrRejectedLabelData));
            $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
            $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("focusedRowIndex", 0);
        }
        setDatePicker("#ReleasedOrRejectedLabel .datepicker");

    });


    // 조회
    function ReleasedOrRejectedLabelSearch() {

        // 초기화
        $("#ReleasedOrRejectedLabel_RightUpGrid").dxDataGrid("instance").option("dataSource", []);

        var formData = new FormData($("#S_ReleasedOrRejectedLabel_form")[0]);

        // 선택 된 텝 조회
        $.ajax({
            type: 'POST',
            url: '/Aprov/ReleasedOrRejectedLabel_Search',
            data: formData,
            contentType: false,
            processData: false,
            async: false,
            success: function (result) {

                // 검색 결과가 없을 경우
                if (result.length <= 0) {
                    $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("dataSource", []);
                    
                    $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("focusedRowIndex", -1);
                    return;
                }

                var json = JSON.parse(result);

                if (json.hasOwnProperty('sessionLoss')) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }

                $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("focusedRowIndex", -1);
                
                $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("dataSource", JSON.parse(result));
                $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("focusedRowIndex", 0);
            }
        });
    }

    // 엑셀 다운로드
    function ReleasedOrRejectedLabelExcel(gridName, ExcelName) {
        gridExportToExcel("ReleasedOrRejectedLabel_LeftGrid", "적부판정라벨");
    }

    function ReleasedOrRejectedLabel_LeftGrid_changed() {

        // 오른쪽 아래 그리드 초기화
        $("#ReleasedOrRejectedLabel_RightUpGrid").dxDataGrid("instance").option("dataSource", []);

        if ($("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("focusedRowIndex") < 0) {
            
            return;
        }
                      
        var grid = $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance");
        var gridData = getGridRowByKey('ReleasedOrRejectedLabel_LeftGrid', grid.option("focusedRowKey"));

        $.ajax({
            type: 'POST',
            url: '/Aprov/ReleasedOrRejectedLabel_S2',
            data: {
                testcontrol_id: gridData.testcontrol_id
            },
            success: function (result) {

                if (result.length <= 0) {
                    $("#ReleasedOrRejectedLabel_RightUpGrid").dxDataGrid("instance").option("dataSource", []);
                    $("#ReleasedOrRejectedLabel_RightUpGrid").dxDataGrid("instance").option("focusedRowEnabled", false);

                    return;
                }

                if (JSON.parse(result).sessionLoss) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }


                $("#ReleasedOrRejectedLabel_RightUpGrid").dxDataGrid("instance").option("dataSource", JSON.parse(result));
                //$("#StackSearchRightUpGrid_M").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#ReleasedOrRejectedLabel_RightUpGrid").dxDataGrid("instance").option("focusedRowIndex", -1);
            }
        });

    }

    function ReleasedOrRejectedLabel_RightUpGrid_changed() {

        var grid = $("#ReleasedOrRejectedLabel_RightUpGrid").dxDataGrid("instance");
        var gridData = getGridRowByKey('ReleasedOrRejectedLabel_RightUpGrid', grid.option("focusedRowKey"));

        $.ajax({
            type: 'POST',
            url: '/Aprov/ReleasedOrRejectedLabel_S3',
            data: {
                testcontrol_id: gridData.testcontrol_id,
                program_cd: gridData.program_cd
            },
            success: function (result) {

                if (result.length <= 0) {
                    $("#ReleasedOrRejectedLabel_RightDownGrid").dxDataGrid("instance").option("dataSource", []);
                    $("#ReleasedOrRejectedLabel_RightDownGrid").dxDataGrid("instance").option("focusedRowEnabled", false);

                    return;
                }

                if (JSON.parse(result).sessionLoss) {
                    alert("세션이 만료되었습니다.");
                    sessionStorage.clear();
                    location.replace("/Comm/Login");
                }


                $("#ReleasedOrRejectedLabel_RightDownGrid").dxDataGrid("instance").option("dataSource", JSON.parse(result));
                //$("#StackSearchRightUpGrid_M").dxDataGrid("instance").option("focusedRowEnabled", true);
                $("#ReleasedOrRejectedLabel_RightDownGrid").dxDataGrid("instance").option("focusedRowIndex", -1);
            }
        });
    }

    // 적/부 판정 라벨 출력
    function sb_ReleaseOrReject_print() {
        
        if ($("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance").option("focusedRowIndex") < 0) {
            alert("프린트 대상이 없습니다.");
            return;
        }

        // report 선언
        var report = new ReportHelper();
        var subParam = "";

        //var print_num = $("#ReleasedOrRejectedLabel input[name=print_num]").val(); // 인쇄 횟수

        //if (typeof print_num === "undefined" || print_num === null || print === "") {
        //    $("#ReleasedOrRejectedLabel input[name=print_num]").val(1);
        //    print_num = 1;
        //} else if (print_num < 1) {
        //    alert("인쇄 횟수가 1장 이상이여야 합니다.");
        //    return;
        //}

        var grid = $("#ReleasedOrRejectedLabel_LeftGrid").dxDataGrid("instance");
        var gridData = getGridRowByKey('ReleasedOrRejectedLabel_LeftGrid', grid.option("focusedRowKey"));

        $.ajax({
            type: 'POST',
            url: '/Aprov/ReleasedOrRejectedLabel_P',
            data: {
                testcontrol_id: gridData.testcontrol_id,
                test_type: gridData.test_type,
                test_type: gridData.test_result_yn
            },
            success: function (result) {

                if (result.length <= 0) {                    
                    return;
                }

                var data = JSON.parse(result);

                if (typeof data[0].test_result_yn_nm === "undefined" || data[0].test_result_yn_nm === "") {
                    alert("적합/부적합 값이 존재 하지 않습니다.");
                    return;
                }

                // subParam 셋팅
                subParam = "test_result_yn_nm=" + data[0].test_result_yn_nm + ";";
                if (data[0].test_result_yn_nm === "적합") {
                    subParam += "test_result_yn_ap=ReleaseLabel;"
                } else {
                    subParam += "test_result_yn_ap=RejectLabel;"
                }
                
                subParam += "item_nm=" + (data[0].item_nm === null ? "" : data[0].item_nm) + ";";
                subParam += "start_no=" + (data[0].start_no === null ? "" : data[0].start_no) + ";";
                subParam += "picking_qty=" + (data[0].picking_qty === null ? "" : data[0].picking_qty) + ";";
                subParam += "test_judge_no=" + (data[0].test_judge_no === null ? "" : data[0].test_judge_no) + ";";
                subParam += "sign_time=" + (data[0].sign_time === null ? "" : data[0].sign_time) + ";";
                subParam += "emp_nm=" + (data[0].emp_nm === null ? "" : data[0].emp_nm)+ ";";
                subParam += "qc_valid_period=" + (data[0].qc_valid_period === null ? "" : data[0].qc_valid_period);

                report.addParam({
                    objFile: { path: "Aprov", RptFileName: "ReleaseOrReject_Label" },
                    objSp: { SpName: "", gubun: "", reportParam: "" },
                    // objEtcInfo 속성정의
                    //  - viewerNanme => report뷰어명, 기본값: ReportViewer, 별도의 viewer사용시적용(DayOrderWork.cshtml 참조)
                    //  - nCopies     => 프린트할 수량,  기본값:1, 수량지정시 해당수량만큼 프린트함
                    objEtcInfo: { subParam: subParam, viewerName: "", nCopies: 1 },
                });

                report.testObj();
                report.print();
            }
        });
    }

    // 적합 공라벨 출력
    function simpleButton1() {

        // report 선언
        var report = new ReportHelper();
        var subParam = "";

        //var print_num = $("#ReleasedOrRejectedLabel input[name=print_num]").val(); // 인쇄 횟수

        //if (typeof print_num === "undefined" || print_num === null || print === "") {
        //    $("#ReleasedOrRejectedLabel input[name=print_num]").val(1);
        //    print_num = 1;
        //} else if (print_num < 1) {
        //    alert("인쇄 횟수가 1장 이상이여야 합니다.");
        //    return;
        //}

        // subParam 셋팅
        subParam = "test_result_yn_nm=적합;";
        subParam += "test_result_yn_ap=ReleaseLabel"

        report.addParam({
            objFile: { path: "Aprov", RptFileName: "ReleaseLabel_note" },
            objSp: { SpName: "", gubun: "", reportParam: "" },
            // objEtcInfo 속성정의
            //  - viewerNanme => report뷰어명, 기본값: ReportViewer, 별도의 viewer사용시적용(DayOrderWork.cshtml 참조)
            //  - nCopies     => 프린트할 수량,  기본값:1, 수량지정시 해당수량만큼 프린트함
            objEtcInfo: { subParam: subParam, viewerName: "", nCopies: 1 },
        });

        report.testObj();
        report.print();
    }

</script>


<div id="ReleasedOrRejectedLabel" autoresize="Y">

    <div class="mainTop row">

        <!-- $검색폼-->
        <div class="col-8">

            <form id="S_ReleasedOrRejectedLabel_form">

                <div class="input-wrapper">

                    <div class="col-5 input-group input-group-sm">
                        <select class="form-control" name="date_option">
                            <option value="1" selected>의뢰일자</option>
                            <option value="2">승인일자</option>
                        </select>
                        <input type="text" class="form-control datepicker text-center" name="start_date_S" value="@DateTime.Today.AddDays(-1).ToShortDateString()">
                        <label class="p-1">~</label>
                        <input type="text" class="form-control input-sm datepicker text-center" name="end_date_S" value="@DateTime.Today.ToShortDateString()">

                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">시험종류</span>
                        </div>
                        <select class="form-control" name="s_test_type">
                            @foreach (DataRow row in ((DataTable)ViewBag.search_test_type).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">판정</span>
                        </div>
                        <select class="form-control" name="s_yn">
                            <option value="%" selected>전체</option>
                            <option value="Y">적합</option>
                            <option value="N">부적합</option>
                        </select>
                    </div>

                    @*<div class="input-group input-group-sm col-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">인쇄횟수</span>
                        </div>
                        <input type="number" class="form-control text-center" name="print_num" value="1">
                    </div>*@

                </div>

            </form>

        </div>

        <!-- $CRUD버튼-->
        <div class="CRUD-btn col-4">
            @{Html.SetToolbar(0, true, "Search;Excel");}

        </div>

    </div>

    <div class="row">

        <!-- $Contets Left-->
        <div class="col-9 pr-0">

            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                    .ID("ReleasedOrRejectedLabel_LeftGrid")
                    .ShowBorders(true)
                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                    //.Selection(s => s.Mode(SelectionMode.Single))
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .HoverStateEnabled(true)
                    .KeyExpr("testcontrol_id")
                    .Height(900)
                    .ShowColumnLines(true)
                    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
                    .OnToolbarPreparing("HideToolbarButton")
                    .Columns(c =>
                    {
                        c.Add().DataField("test_type_nm").Caption("구분");
                        c.Add().DataField("test_no").Caption("의뢰번호");
                        c.Add().DataField("test_standard_nm_1").Caption("규격");
                        c.Add().DataField("process_nm").Caption("공정");
                        c.Add().DataField("item_cd").Caption("코드");
                        c.Add().DataField("item_nm").Caption("품목");
                        c.Add().DataField("receipt_qty").Caption("총입고량");
                        c.Add().DataField("request_date").Caption("의뢰일자");
                        c.Add().DataField("picking_date").Caption("채취일자");
                        c.Add().DataField("valid_period").Caption("유효기간");
                        c.Add().DataField("test_date").Caption("승인일자");
                        c.Add().DataField("제조번호").Caption("제조번호");
                        c.Add().DataField("pack_cnt").Caption("포장수");
                        c.Add().DataField("test_status_nm").Caption("단계");
                        c.Add().DataField("test_result_yn_nm").Caption("판정");
                        c.Add().DataField("test_judge_no").Caption("시험번호");
                        c.Add().DataField("material_maker_nm").Caption("제조원");
                    })
                    .OnFocusedRowChanged("ReleasedOrRejectedLabel_LeftGrid_changed")
                )


            </div>

        </div>

        <div class="col-3">

            <div class="box mb-0">

                <!-- 우측 위 그리드 -->
                <div class="divName">
                    <p>출력 정보</p>

                    <button type="button" class="btn btn-outline-dark btn-sm" onclick="simpleButton1()" style="float:right; margin-right:10px; margin-top:-5px;">적합 공라벨 출력</button>
                    <button type="button" class="btn btn-outline-dark btn-sm" onclick="sb_ReleaseOrReject_print()" style="float:right; margin-right:2px; margin-top:-5px;">적/부 판정 라벨 출력</button>

                </div>

                @(Html.DevExtreme().DataGrid()
                    .ID("ReleasedOrRejectedLabel_RightUpGrid")
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .Height(400)
                    .ShowColumnLines(true)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .HoverStateEnabled(true)
                    .KeyExpr("testcontrol_id")
                    .Columns(c =>
                    {
                        c.Add().DataField("program_nm").Caption("출력물");
                        c.Add().DataField("default_rpt_cnt").Caption("기본");
                        c.Add().DataField("can_rpt_cnt").Caption("가능");
                    })
                    .ShowBorders(true)
                    .OnFocusedRowChanged("ReleasedOrRejectedLabel_RightUpGrid_changed")
                )

                <!-- 우측 아래 그리드 -->
                <div class="divName">
                    <p>출력 히스토리</p>
                </div>

                @(Html.DevExtreme().DataGrid()
                    .ID("ReleasedOrRejectedLabel_RightDownGrid")
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual).ShowScrollbar(ShowScrollbarMode.Always))
                    .Height(394)
                    .ShowColumnLines(true)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .HoverStateEnabled(true)
                    .KeyExpr("testcontrol_id")
                    .Columns(c =>
                    {
                        c.Add().DataField("program_nm").Caption("출력물");
                        c.Add().DataField("default_rpt_cnt").Caption("기본");
                        c.Add().DataField("can_rpt_cnt").Caption("가능");
                    })
                    .ShowBorders(true)
                )

            </div>

        </div>

    </div>

</div>