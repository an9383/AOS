@using System.Data;
@using HACCP.Libs;
@using HACCP.Libs.Views

@{
    Layout = null;
    ViewData["Title"] = "TestRecognitionE_Temp";

    var TestRecognitionAuth = @Html.Raw(ViewBag.TestRecognitionE_TempAuth.Data);
}
<style>

    #TestRecognitionE_Temp #TestRecognition_FileGrid button {
        background: transparent;
        border: 1px solid #ddd;
        width: 90%;
        text-align: center;
        margin: 0 auto;
        display: block;
        color: #ddd;
    }

    #TestRecognitionE_Temp .padding-right-0 {
        padding-right: 0px;
    }

    /* 그리드 셀 배경*/
    #TestRecognitionE_Temp .limegreen {
        background-color: limegreen;
        color: black;
    }

    #TestRecognitionE_Temp .lightcoral {
        background-color: lightcoral;
        color: black;
    }

    #TestRecognitionE_Temp .lightcyan {
        background-color: lightcyan;
        color: black;
    }

    #TestRecognitionE_Temp .khaki {
        background-color: khaki;
        color: black;
    }

    #TestRecognitionE_Temp .palegreen {
        background-color: palegreen;
        color: black;
    }

    #TestRecognitionE_Temp .lightsalmon {
        background-color: lightsalmon;
        color: black;
    }

    #TestRecognitionE_Temp .lightgoldenrodyellow {
        background-color: lightgoldenrodyellow;
        color: black;
    }

    #TestRecognitionE_Temp .navajowhite {
        background-color: navajowhite;
        color: black;
    }

    #TestRecognitionE_Temp .gray {
        background-color: gray;
        color: black;
    }

    #TestRecognitionE_Temp .darkcyan {
        background-color: darkcyan;
        color: black;
    }

    #TestRecognitionE_Temp .skyblue {
        background-color: skyblue;
        color: black;
    }

    #TestRecognitionE_Temp .white {
        background-color: white;
        color: black;
    }

    #TestRecognitionE_Temp .silver {
        background-color: silver;
        color: black;
    }

    #TestRecognitionE_Temp .paleturquoise {
        background-color: paleturquoise;
        color: black;
    }

    #TestRecognitionE_Temp .thistle {
        background-color: thistle;
        color: black;
    }

    #TestRecognitionE_Temp .cornflowerblue {
        background-color: cornflowerblue;
        color: black;
    }

    #TestRecognitionE_Temp .greenyellow {
        background-color: greenyellow;
        color: black;
    }

    #TestRecognitionE_Temp .tan {
        background-color: tan;
        color: black;
    }

    #TestRecognitionE_Temp .lightslategray {
        background-color: lightslategray;
        color: black;
    }

    #TestRecognitionE_Temp .pink {
        background-color: pink;
        color: black;
    }

    #TestRecognitionE_Temp .goldenrod {
        background-color: goldenrod;
        color: black;
    }

    #TestRecognitionE_Temp .yellowgreen {
        background-color: yellowgreen;
        color: black;
    }

    #TestRecognitionE_Temp .crimson {
        color: crimson;
        color: black;
    }
</style>
<script id="TestRecognitionE_TempJs">
    var TestRecognition_dbState = "init";

    //전자서명 관련 변수
    var process_kind = "1";
    var program_cd = "TestRecognitionE";
    var TestRecognition_pEmp_cd = "";
    var TestRecognition_IsLoginUserCheck = "@ViewBag.IsLoginUserCheck";
    var TestRecognition_signGubun = "";
    var TestRecognition_lastEmp = "";
    var TestRecognition_lastEmpChk = false;

    //그리드 관련 변수
    var TestRecognition_focusedRow = null;
    var TestRecognition_focusedRow_F = null;

    //시험의뢰번호
    var prevTestRequestNo = null;

    //사업장 이름
    var TestRecognition_plantName = "@ViewBag.PlantName";

    $(function () {
        $("#TestRecognitionForm input[name=date_select][value='0']").prop("checked", true);//의뢰
        $("#TestRecognitionForm input[name=test_status][value='%']").prop("checked", true);//진행상태:전체
        $("#TestRecognitionForm select[name=test_typeselc]").val("@ViewBag.InitTestNm"); //시험종류

         var TestRecognitionAuth = (@TestRecognitionAuth)[0];

        if (TestRecognitionAuth.form_query != "Y") {
            $("#TestRecognitionE_TempSearch").remove();
        }
        if (TestRecognitionAuth.form_insert != "Y") {
            $("#TestRecognitionInput").remove();
        }
        if (TestRecognitionAuth.form_edit != "Y") {
            $("#TestRecognitionEdit").remove();
        }
        if (TestRecognitionAuth.form_delete != "Y") {
            $("#TestRecognitionE_TempDelete").remove();
        }

        setDatePicker("#TestRecognitionE_Temp .datepicker");

        TestRecognitionE_TempSearch();


        //#region 적합, 부적합, 조건부적합 변경 이벤트 - LIMS 관련 사용안함
        //$("#TestRecognition_RightForm input[name='test_result_yn']").change(function () {

        //    //확인이 완료된 경우
        //    if (IsCompleteFinish()) {

        //        if ($("#TestRecognition_RightForm input[name='test_result_yn']:checked").val() == "Y") {  //적합일 경우
        //            if (TestRecognition_focusedRow.data.test_type != "반제품") { //반제품 이외의 경우
        //                SetAutoQCValidPeriod();//유효일자 자동설정
        //            }

        //        } else if ($("#TestRecognition_RightForm input[name='test_result_yn']:checked").val() == "C") { //조건부적합일 경우
        //            SetAutoQCValidPeriod();//유효일자 자동설정

        //        } else {
        //            //(QC) 유효기간 지우기
        //            $("#TestRecognition_RightForm input[name='qc_valid_period']").val("");
        //            $("#TestRecognition_RightForm input[name='extend_yn']").prop("checked", false);
        //            ChangeQCControlStatus("qc_valid_period", false);// QC사용기한 비활성화
        //            ChangeQCControlStatus("extend_yn", false);    //체크박스 비활성화
        //        }
        //    }
        //});
        //#endregion


        //#region 부형제 기간연장 변경 이벤트 - LIMS 관련 사용안함
        //$("#TestRecognition_RightForm input[name='extend_yn']").on('click', function () {
        //    //IsApprovalComplete() : True(승인완료), false(승인미완료)
        //    if ($(this).prop('checked') && IsApprovalComplete() == false) {
        //        ChangeQCControlStatus("qc_valid_period", true); //체크의 경우, QC사용기한을 활성화 시킨다.
        //    } else {
        //        ChangeQCControlStatus("qc_valid_period", false);//체크해제의 경우, QC사용기한을 비활성화 시킨다.
        //    }
        //})
        //#endregion


    })


    //조회
    function TestRecognitionE_TempSearch() {
        var form = $('#TestRecognitionForm')[0];
        var data = new FormData(form);

        // 초기화영역
        $('#TestRecognition_Grid').dxDataGrid("option", "dataSource", []);
        $('#TestRecognition_Grid').dxDataGrid("option", "focusedRowKey", "");


        $.ajax({
            type: 'POST',
            async: false,
            contentType: false,
            processData: false,
            url: '/Aprov/TestRecognition_GridSelect',
            data: data,
            success: function (result) {
                //console.log(result);
                if (result != "") {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }
                    if (json.length > 0) {
                        $("#TestRecognition_Grid").dxDataGrid("option", "dataSource", json);
                        $("#TestRecognition_Grid").dxDataGrid("option", "focusedRowEnabled", true);
                        $("#TestRecognition_Grid").dxDataGrid("option", "focusedRowIndex", 0);

                    } else {
                        $("#TestRecognition_Grid").dxDataGrid("option", "focusedRowEnabled", false);
                    }

                } else {
                    $("#TestRecognition_Grid").dxDataGrid("option", "focusedRowEnabled", false);
                }
                TestRecognition_dbState = "search";
            }
        })
    }

    //입력
    function TestRecognitionE_TempInput() {

    }

    //수정
    function TestRecognitionE_TempEdit() {

    }

    //취소
    function TestRecognitionE_TempUndo() {

    }

    //저장
    function TestRecognitionE_TempSave() {

    }

    //삭제
    function TestRecognitionE_TempDelete() {

        if (TestRecognition_focusedRow != null) {
            if (TestRecognition_focusedRow.data.upload_yn == "Y") {
                var ok = confirm("선택한 품목은 시험결과 업로드 취소 후 승인취소가 가능합니다\n업로드를 취소하고 계속 진행하시겠습니까?");
                if (ok) {
                    TestRecognition_Upload();
                }
            }

            if (TestRecognition_focusedRow.data.upload_yn != "Y") {

                //삭제(취소) 가능한 상태인지 체크
                if (ESStatusCheck()) {

                    var ok = confirm("시험성적승인을 취소하시겠습니까?");
                    if (ok) {

                        GetLastSignEmpCheck();//TestRecognition_lastEmp에 값 설정

                        // 서명이 되지 않았을 때
                        if (TestRecognition_lastEmp == "") {
                            TestRecognition_lastEmpChk = true;
                            CancelCheckInfo(); //전자서명 취소

                        } else {
                            //최근 서명자가 있을 때 전자서명으로 서명자 확인
                            TestRecognition_signGubun = "GetLastSignEmpCheck";
                            TestRecognition_DoSign(); //전자서명 창 띄우기 -> TestRecognition_SignSubmit 에서 이후 로직 수행
                        }
                    }
                } else {
                    alert("취소가능한 상태가 아닙니다");
                }
            }
        }
    }

    //프린트
    function TestRecognitionE_TempPrint() {
        //LIMS 없으므로 안보여줘도됨
        //var btnType;
        //btnType = $(event.target).closest('.dx-button').attr('id');

        //var grid = $("#TestRecognition_Grid").dxDataGrid("instance");
        //var data = getGridRowByKey("TestRecognition_Grid", grid.option("focusedRowKey"));

        //// 시험완료(7) 이전 상태인 ---(0), 의뢰(1), 접수(2), 검체채취(5), 시험중(6), 시험지시(12) 인 경우.
        //if (parseInt(data.test_status_no) < 7
        //    || data.test_status_no === "12"){
        //    alert("이전 단계가 완료되지 않았거나, 시험성적 입력이 끝나지 않았습니다\n시험 성적서를 출력 할 수 없습니다");
        //    return;
        //}

        //// report 출력
        //var report = new ReportHelper();
        //report.addParam({
        //    objFile: { path: "Aprov", RptFileName: "TestCertificateCR_GD" },
        //    objSp: { SpName: "SP_TestCertificateReport", gubun: "S", reportParam: "testcontrol_id:" + data.testcontrol_id },
        //    objEtcInfo: { subParam: "set_sign_yn=" }
        //});

        //if (btnType.indexOf('Preview') > -1) {
        //    report.preview();
        //} else if (btnType.indexOf('Print') > -1) {
        //    report.print();
        //}

    }

    //엑셀
    function TestRecognitionE_TempExcel() {
        gridExportToExcel("TestRecognition_Grid", "TestRecognitionData");
    }

    //단일 구매요청
    function TestRecognition_Upload() {

        if (TestRecognition_focusedRow.test_type_cd == "1" || TestRecognition_focusedRow.test_type_cd == "2") {
            var message = "";

            //업로드된 것("Y")이면 취소, 아닌것("N")은 업로드
            if (TestRecognition_focusedRow.data.upload_yn == "Y") {
                message = InterfaceUpload("C");

                if (IsNumber(message)) {
                    $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "upload_yn", "N");
                    $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "upload_dt", "@DateTime.Today.ToShortDateString()");
                    $("#TestRecognition_Grid").dxDataGrid("instance").saveEditData();
                } else {
                    alert("에러가 발생했습니다.");
                }

            } else {
                message = InterfaceUpload("A");

                if (IsNumber(message)) {
                    $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "upload_yn", "Y");
                    $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "upload_dt", "@DateTime.Today.ToShortDateString()");
                    $("#TestRecognition_Grid").dxDataGrid("instance").saveEditData();
                } else {
                    alert("에러가 발생했습니다.");
                }
            }
        }
    }

    //업로드할 키(전체:%, 선택:구매요청번호), 생성구분(A:생성, C:취소)
    function InterfaceUpload(create_type) {

        $.ajax({
            type: 'POST',
            async: false,
            url: '/Aprov/TestRecognition_InterfaceUpload',
            data: {
                testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id,
                test_type: TestRecognition_focusedRow.data.test_type_cd,
                create_type: create_type
            },
            success: function (result) {

                if (result != "") {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                }
            }
        })
    }


    //시험의뢰
    //시험정보 업데이트
    function SaveCheckInfo() {

        var form = $('#TestRecognition_RightForm')[0];
        var data = new FormData(form);

        //var extend_yn = $("#TestRecognition_RightForm input[name='extend_yn']").prop("checked") ? "Y" : "N";
        //data.set("extend_yn", extend_yn);
        var extend_yn = TestRecognition_focusedRow.data.extend_yn ? (null || "") : "N";
        data.set("extend_yn", extend_yn);
        data.set("testcontrol_id", TestRecognition_focusedRow.data.testcontrol_id);

        $.ajax({
            type: 'POST',
            async: false,
            contentType: false,
            processData: false,
            url: '/Aprov/TestRecognition_SaveCheckInfo',
            data: data,
            success: function (result) {

                if (result != "") {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }
                }
            }
        })
    }

    //서명 결과에 따른 변경 내용 설정(그리드)
    function SetTestInfo() {

        var check = false;
        if (TestRecognition_focusedRow != null) {
            var sign_set_cd = GetSignSetCd(TestRecognition_focusedRow.data.test_type_cd);

            $.ajax({
                type: 'POST',
                async: false,
                url: '/Aprov/TestRecognition_SetTestInfo',
                data: {
                    testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id,
                    process_kind: process_kind,
                    program_cd: program_cd,
                    sign_set_cd: sign_set_cd
                },
                success: function (result) {

                    if (result != "") {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }

                        if (json.length > 0) {
                            $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_status_no", json[0].test_status);
                            $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_inform_remark", json[0].test_inform_remark);
                            $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_judge_no", json[0].test_judge_no);
                            $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_result_yn_c", json[0].test_result_yn);//판정코드(Y / N / C)
                            $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_result_yn", json[0].test_result_yn_nm);//판정이름
                            $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_date", json[0].test_date);
                            $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_result_value0", json[0].test_result_value0);
                            $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_result_value", json[0].test_result_value);
                            $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "valid_period", json[0].valid_period);
                            $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "retest_yn", json[0].retest_yn);
                            $("#TestRecognition_Grid").dxDataGrid("instance").saveEditData();
                        }

                        check = true;
                    }
                }
            })
            return check;
        }
    }

    //수정후 그리드 반영 및 판정정보 설정
    function SaveAfterSetting() {
        if (TestRecognition_focusedRow == null) return;

        var test_result_value0 = $("#TestRecognition_RightForm input[name='test_result_value0']").val();//제조처 역가
        var test_result_value = $("#TestRecognition_RightForm input[name='test_result_value']").val();//역가
        var test_result_pollination = $("#TestRecognition_RightForm input[name='test_result_pollination']").val();//수분함량
        var test_result_solvent = $("#TestRecognition_RightForm input[name='test_result_solvent']").val();//용매
        //LIMS 관련 주석
        //var qc_valid_period = $("#TestRecognition_RightForm input[name='qc_valid_period']").val();//QC 유통기한 날짜
        //var extend_yn_enable = ($("#TestRecognition_RightForm input[name='extend_yn']").attr("readonly") == true )? true : false;
        //var extend_yn_checked = ($("#TestRecognition_RightForm input[name='extend_yn']").is(":checked") == true ) ? true : false;

        //$("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "qc_valid_period", qc_valid_period);
        //$("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "extend_yn", (extend_yn_enable && extend_yn_checked) ? "Y" : "N" );
        //$("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "extend_yn_nm", (extend_yn_enable && extend_yn_checked) ? "기간연장" : "" );
        $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_result_pollination", (test_result_pollination == "" || test_result_pollination == null) ? 0 : test_result_pollination );
        $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_result_solvent", (test_result_solvent == "" || test_result_solvent == null) ? 0 : test_result_solvent );
        $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_result_value0", (test_result_value0 == "" || test_result_value0 == null) ? 0 : test_result_value0 );
        $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_result_value", (test_result_value == "" || test_result_value == null) ? 0 : test_result_value );
        $("#TestRecognition_Grid").dxDataGrid("instance").saveEditData();

        //QC판정정보 표시
        SetDetailQcInfo();
    }


    //함량 및 역가 유효일자
    //#region 유효일자 자동설정 - LIMS 관련으로 사용안함
    //function SetAutoQCValidPeriod() {
    //    if (TestRecognition_focusedRow == null) return;

    //    //확인완료된 경우 건너뜀
    //    if (IsApprovalComplete()) return;
    //    var return_value = "";

    //    $.ajax({
    //        type: 'POST',
    //        async: false,
    //        url: '/Aprov/TestRecognition_SetAutoQCValidPeriod',
    //        data: {
    //            testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id
    //        },
    //        success: function (result) {

    //            if (result != "") {
    //                var json = JSON.parse(result);

    //                if (json.hasOwnProperty('sessionLoss')) {
    //                    alert("세션이 만료되었습니다.");
    //                    sessionStorage.clear();
    //                    location.replace("/Comm/Login");
    //                }
    //                return_value = json.messege;
    //            }
    //        }
    //    })
    //    var test_type = TestRecognition_focusedRow.data.test_type_cd;
    //    var item_type3 = TestRecognition_focusedRow.data.item_type3;
    //    var valid_period = TestRecognition_focusedRow.data.valid_period;
    //    var qc_valid_period = valid_period;
    //    var message = "";

    //    //1. 원료시험 (QC)사용기한 산출
    //    if (test_type == "1") {
    //        if (IsValidDateTime(return_value)) {
    //            //  산출된 (QC)사용기한이  사용기한보다 크면, 자동으로 셋팅후 에러메세지 표시
    //            if (StringToDateTime(return_value) > StringToDateTime(valid_period)) {
    //                message = "(QC)사용기한 " + return_value + "은 사용기한 " + valid_period + "을 넘을 수 없기때문에 사용기한으로 자동설정됩니다.";

    //                //부형제의 경우 - 자동으로 설정되는 메세지
    //                if (item_type3 != "1") {
    //                    message += " \n부형제의 기한연장이 필요한 경우 아래의 부형제의 기한연장을 체크하고 조정하세요!.";

    //                    ChangeQCControlStatus("extend_yn", true);
    //                }

    //                alert(message);
    //            } else {
    //                qc_valid_period = return_value;
    //            }
    //        }
    //    } else if (test_type == "2") {
    //    //  자재시험 QC사용기한 의뢰일자로 계산
    //    //2. 자재시험 (QC)사용기한 산출  (의뢰일자 -1) + 사용기간
    //        if (IsValidDateTime(return_value)) {
    //            qc_valid_period = return_value;
    //        } else {
    //            alert("자재 마스터의 자재 사용기간 정보를 확인해주세요.");
    //        }
    //    }

    //    $("#TestRecognition_RightForm input[name='qc_valid_period']").val(qc_valid_period);

    //}
    //#endregion


    //기타 util
    //유효한 날짜값인지(YYYY-MM-DD 포맷 체크)
    function IsValidDateTime(str) {
        var date_pattern = /^(19|20)\d{2}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[0-1])$/;

        return date_pattern.test(str);
    }

    //YYYY-MM-DD 문자열 포맷 날짜객체로 변경
    function StringToDateTime(str) {
        if (str.length != 10) return;

        var YMD = String(str);
        var year = YMD.substring(0, 4);
        var month = YMD.substring(5, 7);
        var day = YMD.substring(8, 10);

        return new Date(Number(year), Number(month) - 1, Number(day));
    }

    //숫자값인지 판단
    function IsNumber(str) {
        var number_pattern = /^[0-9]+(.[0-9]+)?$/;
        return number_pattern.test(str);
    }


    //컨트롤 관련 설정
    //QC판정정보 표시
    function SetDetailQcInfo() {

        InitQcControls();

        if (TestRecognition_focusedRow != null) {
            var test_result_value0 = TestRecognition_focusedRow.data.test_result_value0;
            var test_result_value = TestRecognition_focusedRow.data.test_result_value;
            var test_result_pollination = TestRecognition_focusedRow.data.test_result_pollination;
            var test_result_solvent = TestRecognition_focusedRow.data.test_result_solvent;


            $("#TestRecognition_RightForm input[name='test_result_yn'][value='" + TestRecognition_focusedRow.data.test_result_yn_c + "']").prop("checked", true);//적부판정
            $("#TestRecognition_RightForm input[name='test_result_value0']").val((test_result_value0 == "" || test_result_value0 == null) ? 0 : test_result_value0);//제조처 역가
            $("#TestRecognition_RightForm input[name='test_result_value']").val((test_result_value == "" || test_result_value == null) ? 0 : test_result_value);//역가
            $("#TestRecognition_RightForm input[name='test_result_pollination']").val((test_result_pollination == "" || test_result_pollination == null) ? 0 : test_result_pollination);//수분함량
            $("#TestRecognition_RightForm input[name='test_result_solvent']").val((test_result_solvent == "" || test_result_solvent == null) ? 0 : test_result_solvent);//용매

            var test_date = TestRecognition_focusedRow.data.test_date;//승인일자
            if (test_date == "" || test_date == null) {
                $("#TestRecognition_RightForm input[name='test_date']").val("@DateTime.Today.ToShortDateString()");
            } else {
                $("#TestRecognition_RightForm input[name='test_date']").val(test_date);
            }

            $("#TestRecognition_RightForm input[name='test_inform_remark']").val(TestRecognition_focusedRow.data.test_inform_remark);//비고
            //$("#TestRecognition_RightForm input[name='retest_yn']").val(TestRecognition_focusedRow.data.retest_yn);//유통기한
            $("#TestRecognition_RightForm input[name='retest_yn'][value='" + TestRecognition_focusedRow.data.retest_yn + "']").prop("checked", true);//유통기한

            $("#TestRecognition_RightForm input[name='valid_period']").val(TestRecognition_focusedRow.data.valid_period);//유통기한 날짜
            //$("#TestRecognition_RightForm input[name='qc_valid_period']").val(TestRecognition_focusedRow.data.qc_valid_period);//QC 유통기한 날짜 - LIMS 관련 주석

            //재시험일자 / 유통기한
            if (TestRecognition_focusedRow.data.retest_yn == "Y")
                $("#TestRecognition_RightForm input[name='retest_yn'][value='Y']").prop("checked", true);//재시험일자
            else
                $("#TestRecognition_RightForm input[name='retest_yn'][value='N']").prop("checked", true);//유통기한

            $("#TestRecognitionE_Temp input[name='item_enm']").val(TestRecognition_focusedRow.data.item_enm);//하단 영문명
            $("#TestRecognitionE_Temp input[name='test_judge_no']").val(TestRecognition_focusedRow.data.test_judge_no);//하단 시험번호

            //부형제 기간연장 - LIMS 관련 사용안함
            //if (TestRecognition_focusedRow.data.extend_yn == "Y") {//기간연장
            //    $("#TestRecognition_RightForm input[name='extend_yn']").prop("checked", true);

            //    //활성화
            //    ChangeQCControlStatus("qc_valid_period", true);
            //    ChangeQCControlStatus("extend_yn", true);
            //}

            GetTestSignSet();

        } else {
            $("#TestRecognition_RightForm input[name='test_result_yn']").prop("checked", false);//적부판정
            $("#TestRecognition_RightForm input[name='test_result_value0']").val("");//제조처 역가
            $("#TestRecognition_RightForm input[name='test_result_value']").val("");//역가
            $("#TestRecognition_RightForm input[name='test_result_pollination']").val("");//수분함량
            $("#TestRecognition_RightForm input[name='test_result_solvent']").val("");//용매
            $("#TestRecognition_RightForm input[name='test_date']").val("");
            $("#TestRecognition_RightForm input[name='test_inform_remark']").val("");//비고
            $("#TestRecognition_RightForm input[name='retest_yn']").prop("checked", false);//유통기한
            $("#TestRecognition_RightForm input[name='valid_period']").val("");//유통기한 날짜
            //LIMS 관련 주석
            //$("#TestRecognition_RightForm input[name='qc_valid_period']").val("");//QC 유통기한 날짜
            //$("#TestRecognition_RightForm input[name='extend_yn']").val("checked", false);//부형제 기간연장(Y/N)

            $("#TestRecognitionE_Temp input[name='item_enm']").val("");//하단 영문명
            $("#TestRecognitionE_Temp input[name='test_judge_no']").val("");//하단 시험번호

            ClearTestSignSet();
        }
    }

    //enable, disable 처리
    function ChangeQCControlStatus(name, isEditable) {
        //전자서명이 완료되면 컨트롤의 옵션을 조정
        if (IsApprovalComplete()) isEditable = false;

        document.getElementsByName(name)[0].disabled = !isEditable;

    }

    //QC판정정보 컨트롤을 초기화
    function InitQcControls() {
        $('#TestRecognition_RightForm')[0].reset();
        //LIMS 관련 주석
        //ChangeQCControlStatus("qc_valid_period", false);
        //ChangeQCControlStatus("extend_yn", false);
    }


    //시험의뢰번호 수정은 한풍제약만 적용사항이므로, 로직에서 제외시킴
    // 관련 function : SaveTestRequestNoClick, ModifyTestRequestNoClick, ModifyTestRequestCancel
    //시험의뢰 수정 저장
    function SaveTestRequestNoClick() {
        var input_request_no = TestRecognition_focusedRow.data.test_no;
        if (input_request_no != prevTestRequestNo) {
            if (input_request_no == "" || input_request_no == null) {
                alert("시험 의뢰번호가 입력되지 않았습니다."); return;
            }
        }

        TestRecognition_SetGridColumnsOption(false);
    }

    //시험의뢰 수정 클릭
    function ModifyTestRequestNoClick() {

        //시험의뢰번호 수정 버튼 숨기기
        //수정 내역 저장 버튼 보이기
        //수정 취소 버튼 보이기
        var ok = confirm("선택한 항목의 시험의뢰번호를 변경하시겠습니까?");

        if (ok) {
            prevTestRequestNo = TestRecognition_focusedRow.data.test_no;
            TestRecognition_dbState = "edit";

            TestRecognition_SetGridColumnsOption(true);
        }
    }

    //시험의뢰 수정 취소 클릭
    function ModifyTestRequestCancel() {

        TestRecognition_dbState = "search";

        //시험의뢰번호 수정 버튼 보이기
        //수정 내역 저장 버튼 숨기기
        //수정 취소 버튼 숨기기
        TestRecognition_SetGridColumnsOption(false);

        //시험의뢰번호 기존값으로 되돌리기
        $("#TestRecognition_Grid").dxDataGrid("instance").cellValue(TestRecognition_focusedRow.rowIndex, "test_no", prevTestRequestNo);
        $("#TestRecognition_Grid").dxDataGrid("instance").saveEditData();

    }


    //전자서명
    //최종 서명자 조회
    function GetLastSignEmpCheck() {

        TestRecognition_lastEmp = "XXXXXXXX";

        if (TestRecognition_focusedRow != null) {
            var sign_set_cd = GetSignSetCd(TestRecognition_focusedRow.data.test_type_cd);

            $.ajax({
                type: 'POST',
                async: false,
                url: '/Aprov/TestRecognition_GetLastSignEmpCheck',
                data: {
                    testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id,
                    test_type: TestRecognition_focusedRow.data.test_type_cd,
                    process_kind: process_kind,
                    program_cd: program_cd,
                    sign_set_cd: sign_set_cd
                },
                success: function (result) {

                    if (result != "") {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }
                        TestRecognition_lastEmp = json.messege;
                    }
                }
            })

        }
    }

    //삭제(취소) 가능한 상태인지 체크
    function ESStatusCheck() {
        var check = false;

        var sign_set_cd = GetSignSetCd(TestRecognition_focusedRow.data.test_type_cd);

        $.ajax({
            type: 'POST',
            async: false,
            url: '/Aprov/TestRecognition_ESStatusCheck',
            data: {
                test_type: TestRecognition_focusedRow.data.test_type_cd,
                test_status: TestRecognition_focusedRow.data.test_status_no,
                process_kind: process_kind,
                program_cd: program_cd,
                sign_set_cd: sign_set_cd
            },
            success: function (result) {

                if (result != "") {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    if (json.messege == "ok") check = true;
                }
            }
        })

        return check;
    }

    //전자서명 초기화
    function ClearTestSignSet() {
        $("#TestRecognitionSignGrid").dxDataGrid("instance").option("dataSource", []);
    }

    //전자서명 정보 조회(lookup) - 그리드
    function GetTestSignSet() {

        if (TestRecognition_dbState == "insert") {
            ClearTestSignSet();
            return;
        } else if (TestRecognition_dbState == "edit") {
            return;
        }

        if (TestRecognition_focusedRow != null) {

            var sign_set_cd = GetSignSetCd(TestRecognition_focusedRow.data.test_type_cd);

            $.ajax({
                type: 'POST',
                async: false,
                url: '/Aprov/TestRecognition_GetTestSignset',
                data: {
                    testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id,
                    test_type: TestRecognition_focusedRow.data.test_type_cd,
                    process_kind: process_kind,
                    program_cd: program_cd,
                    sign_set_cd: sign_set_cd
                },
                success: function (result) {

                    if (result != "") {
                        var json = JSON.parse(result);

                        if (json == "") {
                            $("#TestRecognitionSignGrid").dxDataGrid("instance").option("dataSource", []);
                            return;
                        }

                        $("#TestRecognitionSignGrid").dxDataGrid("option", "dataSource", json);
                    }
                }
            })
        }
    }

    //전자서명 취소
    function CancelCheckInfo() {
        var message = "";

        $.ajax({
            type: 'POST',
            async: false,
            url: '/Aprov/TestRecognition_CancelCheckInfo',
            data: {
                testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id,
                test_type: TestRecognition_focusedRow.data.test_type_cd
            },
            success: function (result) {

                if (result != "") {
                    var json = JSON.parse(result);

                    if (json.hasOwnProperty('sessionLoss')) {
                        alert("세션이 만료되었습니다.");
                        sessionStorage.clear();
                        location.replace("/Comm/Login");
                    }

                    message = json.messege;

                    if (IsNumber(message)) {
                        SetTestInfo();
                    } else {
                        alert(message);//취소불가능관련 메시지
                    }

                }
            }
        })

        //return message;
    }

    //시험종류에 따른 sign_set_cd 설정
    function GetSignSetCd(test_type_cd) {
        var sign_set_cd = "";
        switch (test_type_cd) {
            case "1"://원료
                sign_set_cd = "1007"; break;
            case "2"://자재
                sign_set_cd = "1014"; break;
            case "3"://반제품
                sign_set_cd = "1021"; break;
            case "6"://완제품
                sign_set_cd = "1043"; break;
            case "42"://외주 완제품
                sign_set_cd = "1406"; break;
        }
        return sign_set_cd;
    }

    //현재 단계의 모든 필수 서명이 완료되었는지 확인
    function CheckEnd() {
        var check = false;

        if (TestRecognition_focusedRow != null) {
            var sign_set_cd = GetSignSetCd(TestRecognition_focusedRow.data.test_type_cd);

            $.ajax({
                type: 'POST',
                async: false,
                url: '/Aprov/TestRecognition_CheckEnd',
                data: {
                    testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id,
                    test_type: TestRecognition_focusedRow.data.test_type_cd,
                    process_kind: process_kind,
                    program_cd: program_cd,
                    sign_set_cd: sign_set_cd
                },
                success: function (result) {

                    if (result != "") {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }
                        //console.log(json.messege);
                        if (json.messege == "1") check = true;

                    }
                }
            })
        }
        return check;
    }

    //대리자 권한 여부 파악
    function TestRecognition_GetRepresentativeYN() {
        var check = false;

        if (TestRecognition_focusedRow != null) {
            var sign_set_cd = GetSignSetCd(TestRecognition_focusedRow.data.test_type_cd);

            var signGrid = $("#TestRecognitionSignGrid").dxDataGrid("instance");
            var signGridData = getGridRowByKey("TestRecognitionSignGrid", signGrid.option("focusedRowKey"));
            var sign_set_dt_id = signGridData.sign_set_dt_id;

            $.ajax({
                type: 'POST',
                async: false,
                url: '/Aprov/TestRecognition_GetRepresentativeYN',
                data: {
                    testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id,
                    test_type: TestRecognition_focusedRow.data.test_type_cd,
                    //sign_set_dt_id: $("#TestRecognitionSignForm #consider_cd").val(),
                    sign_set_dt_id: sign_set_dt_id,
                    emp_cd: TestRecognition_pEmp_cd,
                    process_kind: process_kind,
                    program_cd: program_cd,
                    sign_set_cd: sign_set_cd
                },
                success: function (result) {

                    if (result != "") {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }

                        if (json.messege.length > 0) check = true;

                    }
                }
            })
        }
        return check;

    }

    //전자서명 저장
    function ElectronicSignature(representative_yn) {
        var check = false;

        if (TestRecognition_focusedRow != null) {
            var sign_set_cd = GetSignSetCd(TestRecognition_focusedRow.data.test_type_cd);

            var signGrid = $("#TestRecognitionSignGrid").dxDataGrid("instance");
            var signGridData = getGridRowByKey("TestRecognitionSignGrid", signGrid.option("focusedRowKey"));
            var sign_set_dt_id = signGridData.sign_set_dt_id;

            $.ajax({
                type: 'POST',
                async: false,
                url: '/Aprov/TestRecognition_ElectronicSignature',
                data: {
                    testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id,
                    test_type: TestRecognition_focusedRow.data.test_type_cd,
                    //sign_set_dt_id: $("#TestRecognitionSignForm #consider_cd").val(),
                    sign_set_dt_id: sign_set_dt_id,
                    emp_cd: TestRecognition_pEmp_cd,
                    representative_yn: representative_yn,
                    validation_type: "2",
                    process_kind: process_kind,
                    program_cd: program_cd,
                    sign_set_cd: sign_set_cd
                },
                success: function (result) {

                    if (result != "") {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }

                        alert("시험의뢰정보 저장되었습니다.");

                        if (json.messege.length > 0) check = true;

                    }
                }
            })
        }
        return check;
    }

    //전자서명 제출
    function TestRecognition_SignSubmit() {

        var checkUser = TestRecognition_IDValidation();

        if (checkUser) {

            //삭제 > 최근 서명자 조회로 전자서명시
            if (TestRecognition_signGubun == "GetLastSignEmpCheck") {
                if (TestRecognition_lastEmp == TestRecognition_pEmp_cd) {
                    CancelCheckInfo();
                    TestRecognition_lastEmpChk = true;
                } else {
                    alert("최근서명자만 취소할 수 있습니다"); return;
                }
            }

            if (TestRecognition_signGubun == "SetPass") {

                //대리자 여부
                var representative_yn = "N";

                if (TestRecognition_IsLoginUserCheck == "Y" && sessionStorage.getItem("loginCD") != TestRecognition_pEmp_cd) {
                    alert("로그인 사용자와 서명자가 일치하지 않습니다."); return;
                }

                var signGrid = $("#TestRecognitionSignGrid").dxDataGrid("instance");
                var signGridData = getGridRowByKey("TestRecognitionSignGrid", signGrid.option("focusedRowKey"));
                //var responsible_emp_nm = signGridData.responsible_emp_nm;
                var responsible_emp_cd = signGridData.responsible_emp_cd;

                if (responsible_emp_cd != TestRecognition_pEmp_cd) { //cd끼리 비교해야하는데, 이름과 cd를 구분해주어 수정
                    if (TestRecognition_GetRepresentativeYN() == false) {
                        alert("서명 권한이 없습니다."); return;
                    }
                    representative_yn = "Y";
                }

                //전자서명 저장
                if (ElectronicSignature(representative_yn)) {
                    //전자서명 결과 조회
                    GetTestSignSet();
                }

                //현재 단계의 모든 필수 서명이 완료되었는지 확인
                if (CheckEnd()) {

                    //시험성적 정보 저장
                    SaveCheckInfo();
                }

                SetTestInfo();//변경된 정보 조회
                SaveAfterSetting();//판정정보 설정
            }
            TestRecognitionE_TempSearch();
        }


    }

    //전자서명 팝업 입력폼 초기화
    function TestRecognition_clearSignInput() {
        $('#TestRecognition_SignForm')[0].reset();
        $("#TestRecognition_ConfirmForm input[name='dept_nm']").val("");
        $("#TestRecognition_ConfirmForm input[name='emp_nm']").val("");
    }

    //전자서명 클릭
    function TestRecognition_SignClick(e) {
        if (TestRecognition_focusedRow == null || e.columnIndex != 3) return;

        if (e.data.sign_yn == "1") {
            alert("이미 서명되었습니다.");
            return;
        }

        if (e.data.prev_sign_yn == "0") {
            alert("앞단계의 서명이 모두 완료된 후 서명할 수 있습니다.");

            return;
        }


        if (UtilView.checkValidForm("TestRecognition_RightForm")) {
         //적합, 부적합 체크 / 유통기한 체크(required 클래스)

            //적합, 부적합 체크
            //if ($("#TestRecognition_RightForm input[name='test_result_yn']:checked").length == 0) {
            //    alert("적합/ 부적합 판정에 체크되어 있지 않습니다.");
            //    $("#TestRecognition_RightForm input[name='test_result_yn']").focus();
            //    return;
            //}

            var test_type_cd = TestRecognition_focusedRow.data.test_type_cd;
            if (test_type_cd != "10" && test_type_cd != "2") {

                //사용기한 체크 -> checkValidForm로 체크
                //if ($("#TestRecognition_RightForm input[name='retest_yn']:checked").length == 0) {
                //    alert("재시험일자 또는 유통기한을 선택해주세요");
                //    $("#TestRecognition_RightForm input[name='retest_yn']").focus();
                //    return;
                //}

                //사용기한 일자 체크
                var valid_period = $("#TestRecognition_RightForm input[name='valid_period']").val();
                if (valid_period == "") {
                    alert("재시험일자 또는 유통기한이 없습니다");
                    $("#TestRecognition_RightForm input[name='valid_period']").focus();
                    return;
                }
            }

            SetPass();//LIMS 없이 승인

        }

    }

    //LIMS 없이 승인
    function SetPass() {

        TestRecognition_signGubun = "SetPass";
        TestRecognition_DoSign();
    }

    //유효 ID 체크
    function TestRecognition_IDValidation() {
        var check = true;

        var data = new FormData($('#TestRecognition_SignForm')[0]);
        data.set("gubun", "S");

        $.ajax({
            type: 'POST',
            async: false,
            url: '/Comm/IDValidation',
            data: data,
            contentType: false,
            processData: false,
            success: function (result) {

                if (result.length <= 0) {
                    alert("권한이 없는 사용자이거나 잘못된 ID,PW 입니다.");
                    check = false;
                    return;
                }

                TestRecognition_pEmp_cd = JSON.parse(result)[0].emp_cd;

                $("#TestRecognition_ConfirmForm input[name='dept_nm']").val(JSON.parse(result)[0].dept_nm);
                $("#TestRecognition_ConfirmForm input[name='emp_nm']").val(JSON.parse(result)[0].emp_nm);
                $("#TestRecognition_ConfirmForm input[name='emp_cd']").val(JSON.parse(result)[0].emp_cd);
            }
        });

        setTimeout(function () {
            var popup = $("#TestRecognition_Popup").dxPopup("instance");
            popup.hide();
        }, 1000);

        return check;
    }

    //전자서명 팝업 띄우기
    function TestRecognition_DoSign() {
        if (TestRecognition_focusedRow != null) {
            var popup = $("#TestRecognition_Popup").dxPopup("instance");
            popup.option("contentTemplate", $("#TestRecognition_checkSignPopupTemplate"));
            popup.show();
        }
    }

    //파일관리
    function TestRecognition_GetFileList() {
        if (TestRecognition_focusedRow != null) {

            $.ajax({
                type: 'POST',
                url: '/Aprov/TestRecognition_GetFileList',
                async: false,
                data: {
                    testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id
                },
                success: function (result) {
                    if (result.length > 0) {
                        var json = JSON.parse(result);

                        if (json.hasOwnProperty('sessionLoss')) {
                            alert("세션이 만료되었습니다.");
                            sessionStorage.clear();
                            location.replace("/Comm/Login");
                        }
                        $("#TestRecognition_FileGrid").dxDataGrid("option", "dataSource", json);
                        $("#TestRecognition_FileGrid").dxDataGrid("option", "focusedRowIndex", -1);
                        $("#TestRecognition_FileGrid").dxDataGrid("option", "focusedRowIndex", 0);

                    } else {
                        $("#TestRecognition_FileGrid").dxDataGrid("option", "dataSource", []);
                        $("#TestRecognition_FileGrid").dxDataGrid("option", "focusedRowIndex", -1);
                    }
                }
            });
        } else {
            $("#TestRecognition_FileGrid").dxDataGrid("option", "dataSource", []);
            $("#TestRecognition_FileGrid").dxDataGrid("option", "focusedRowIndex", -1);
        }
    }

    //파일 삭제
    function TestRecognition_FileDelete() {

        if (TestRecognition_focusedRow != null && TestRecognition_focusedRow_F != null) {
            var ok = confirm("파일을 삭제하시겠습니까?");
            if (ok) {
                $.ajax({
                    type: 'POST',
                    url: '/Aprov/TestRecognition_DeleteFile',
                    async: false,
                    data: {
                        testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id,
                        file_id: TestRecognition_focusedRow_F.data.file_id
                    },
                    success: function (result) {
                        if (result.length > 0) {
                            var json = JSON.parse(result);

                            if (json.hasOwnProperty('sessionLoss')) {
                                alert("세션이 만료되었습니다.");
                                sessionStorage.clear();
                                location.replace("/Comm/Login");
                            }
                            TestRecognition_GetFileList();
                            //alert(json.messege);
                        }
                    }
                });
            }

        }
    }

    //파일 열기
    function TestRecognition_FileOpen() {
        if (TestRecognition_focusedRow != null && TestRecognition_focusedRow_F != null) {

            var file_id = TestRecognition_focusedRow_F.data.file_id;
            if (file_id == "" || file_id == null) return;

            document.location.assign('/Aprov/TestRecognition_OpenFile?testcontrol_id=' + TestRecognition_focusedRow.data.testcontrol_id +'&file_id='+file_id);

            //$.ajax({
            //    type: 'POST',
            //    url: '/Aprov/TestRecognition_OpenFile',
            //    async: false,
            //    data: {
            //        testcontrol_id: TestRecognition_focusedRow.data.testcontrol_id,
            //        file_id: TestRecognition_focusedRow_F.data.file_id
            //    },
            //    success: function (result) {
            //        if (result.length > 0) {
            //            var json = JSON.parse(result);

            //            if (json.hasOwnProperty('sessionLoss')) {
            //                alert("세션이 만료되었습니다.");
            //                sessionStorage.clear();
            //                location.replace("/Comm/Login");
            //            }
            //            //alert(json.messege);
            //        }
            //    }
            //});
        }

    }

    //파일 관리
    function TestRecognition_RaiseFileUploadEvent(id) {
        var fileUploader = $("#" + id).dxFileUploader("instance");

        fileUploader._isCustomClickEvent = true;        //fileuploader 호출하기 위해 설정
        fileUploader._$fileInput.click();               //fileuploader 호출
        fileUploader._uploadedAction = TestRecognition_GetFileList;//fileuploader의 onuploaded 이벤트 발생

    }

    //파일 업로드
    function TestRecognition_UploadAttachedFile(e) {
        if (TestRecognition_focusedRow != null) {
            var name = e.component.option("name");
            var url = e.component.option("uploadUrl");

            url = updateQueryStringParameter(url, "name", name);
            url = updateQueryStringParameter(url, "testcontrol_id", TestRecognition_focusedRow.data.testcontrol_id);

            e.component.option("uploadUrl", url);
        } else {
            alert("대상이 없습니다");
        }
    }


    //기타
    //확인대상여부 체크
    function IsCompleteFinish() {
        if (TestRecognition_focusedRow == null) return false;

        var test_status_no = TestRecognition_focusedRow.data.test_status_no;
        if (parseInt(test_status_no) == 8) {
            return true;
        } else {
            return false;
        }
    }

    //승인완료여부 체크
    function IsApprovalComplete() {

        if (TestRecognition_focusedRow == null) return false;

        var test_status_no = TestRecognition_focusedRow.data.test_status_no;

        if (parseInt(test_status_no) > 8) {
            return true;
        } else {
            return false;
        }
    }


    //그리드 이벤트
    function TestRecognition_OnFocusedRowChanged(e) {
        if (!e.row || !e.row.data) {
            TestRecognition_focusedRow = null;
        } else {
            TestRecognition_focusedRow = e.row;
        }
        SetDetailQcInfo();
        TestRecognition_GetFileList();
    }

    function TestRecognition_OnFocusedRowChanged_File(e) {
        if (!e.row || !e.row.data) {
            TestRecognition_focusedRow_F = null;
        } else {
            TestRecognition_focusedRow_F = e.row;
        }

    }

    //시험의뢰번호 수정 클릭시, 포커스된 로우 인덱스가 아니면 수정불가
    function TestRecognition_OnEditorPreparing(e) {

        if (e.parentType == "searchPanel") return;

        if (e.row.rowIndex != TestRecognition_focusedRow.rowIndex) {
            e.editorOptions.disabled = e.row.data;
        }
    }

    function TestRecognition_SetGridColumnsOption(editable) {
        var editing = {
            allowUpdating: editable,
            mode: 'cell'
        }

        //수정버튼 클릭
        if (editable) {
            //포커스 하고자하는 시험의뢰번호 셀
            var focusCell = $("#TestRecognition_Grid").dxDataGrid("instance").getCellElement(TestRecognition_focusedRow.rowIndex, 4);
            $("#TestRecognition_Grid").dxDataGrid("instance").focus(focusCell);

            $("#SaveTestRequestNoClick").dxButton("option", "visible", true);
            $("#ModifyTestRequestCancel").dxButton("option", "visible", true);
            $("#ModifyTestRequestNoClick").dxButton("option", "visible", false);

        } else {
            $("#SaveTestRequestNoClick").dxButton("option", "visible", false);
            $("#ModifyTestRequestCancel").dxButton("option", "visible", false);
            $("#ModifyTestRequestNoClick").dxButton("option", "visible", true);
        }

        $("#TestRecognition_Grid").dxDataGrid("option", "editing", editing);
        $("#TestRecognition_Grid").dxDataGrid("instance").option("focusedRowEnabled", !editable);
    }

    //값에 따라 그리드 배경색상 변경
    function TestRecognition_OnCellPrepared(cellInfo) {

        //시험종류 컬럼
        if (cellInfo.rowType == "data" && cellInfo.column.dataField === "test_type") {

            //1:원료시험, 2:자재, 3:반제품, 4:용출시험, 5:재포장, 6:포장,
            //7:출하, 8:정제수, 9:청정도
            if (cellInfo.data.test_type_cd === "1") {
                cellInfo.cellElement.addClass('lightcyan');
            } else if (cellInfo.data.test_type_cd === "2") {
                cellInfo.cellElement.addClass('khaki');
            } else if (cellInfo.data.test_type_cd === "3") {
                cellInfo.cellElement.addClass('palegreen');
            } else if (cellInfo.data.test_type_cd === "4") {
                cellInfo.cellElement.addClass('lightsalmon');
            } else if (cellInfo.data.test_type_cd === "5") {
                cellInfo.cellElement.addClass('lightgoldenrodyellow');
            } else if (cellInfo.data.test_type_cd === "6") {
                cellInfo.cellElement.addClass('navajowhite');
            } else if (cellInfo.data.test_type_cd === "7") {
                cellInfo.cellElement.addClass('gray');
            } else if (cellInfo.data.test_type_cd === "8") {
                cellInfo.cellElement.addClass('darkcyan');
            } else if (cellInfo.data.test_type_cd === "9") {
                cellInfo.cellElement.addClass('skyblue');
            }

        }

        //진행상태 컬럼
        if (cellInfo.rowType == "data" && cellInfo.column.dataField === "test_status_no") {

            //0:---, 1:의뢰, 2:접수, 3:채취지시, 4:채취중, 5:검체채취,
            //6: 시험중, 7: 시험완료, 8: 확인, 9: 승인, 10:통보, 11:출하, 12:일정, 13:의뢰취소, 14:미생물시험완료
            if (cellInfo.data.test_status_no === "0") {
                cellInfo.cellElement.addClass('white');
            } else if (cellInfo.data.test_status_no === "1") {
                cellInfo.cellElement.addClass('silver');
            } else if (cellInfo.data.test_status_no === "2") {
                cellInfo.cellElement.addClass('khaki');
            } else if (cellInfo.data.test_status_no === "3") {
                cellInfo.cellElement.addClass('navajowhite');
            } else if (cellInfo.data.test_status_no === "4") {
                cellInfo.cellElement.addClass('gray');
            } else if (cellInfo.data.test_status_no === "5") {
                cellInfo.cellElement.addClass('paleturquoise');
            } else if (cellInfo.data.test_status_no === "6") {
                cellInfo.cellElement.addClass('thistle');
            } else if (cellInfo.data.test_status_no === "7") {
                cellInfo.cellElement.addClass('cornflowerblue');
            } else if (cellInfo.data.test_status_no === "8") {
                cellInfo.cellElement.addClass('palegreen');
            } else if (cellInfo.data.test_status_no === "9") {
                if (cellInfo.data.test_result_yn_c === "Y") {
                    cellInfo.cellElement.addClass('limegreen');
                } else if (cellInfo.data.test_result_yn_c === "N") {
                    cellInfo.cellElement.addClass('lightcoral');
                } else if (cellInfo.data.test_result_yn_c === "C") {
                    cellInfo.cellElement.addClass('greenyellow');
                }
            } else if (cellInfo.data.test_status_no === "10") {
                cellInfo.cellElement.addClass('tan');
            } else if (cellInfo.data.test_status_no === "11") {
                cellInfo.cellElement.addClass('lightslategray');
            } else if (cellInfo.data.test_status_no === "12") {
                cellInfo.cellElement.addClass('pink');
            } else if (cellInfo.data.test_status_no === "13") {
                cellInfo.cellElement.addClass('silver');
                cellInfo.cellElement.addClass('crimson');
            } else if (cellInfo.data.test_status_no === "14") {
                cellInfo.cellElement.addClass('goldenrod');
            }
        }

        //판정 컬럼
        if (cellInfo.rowType == "data" && cellInfo.column.dataField === "test_result_yn") {
            if (cellInfo.data.test_result_yn_c === "Y") {
                cellInfo.cellElement.addClass('limegreen');
            } else if (cellInfo.data.test_result_yn_c === "N") {
                cellInfo.cellElement.addClass('lightcoral');
            } else if (cellInfo.data.test_result_yn_c === "C") {
                cellInfo.cellElement.addClass('yellowgreen');
            }
        }

    }

</script>
<div id="TestRecognitionE_Temp" autoresize="Y">
    @*<h4 class="divTitle">시험성적서 승인2</h4>*@

    @using (Html.DevExtreme().NamedTemplate("TestRecognition_checkSignPopupTemplate"))
    {
        <h6>전자서명은 수기서명과 동일한 효력을 갖습니다.</h6>

        <form id="TestRecognition_SignForm">

            <div class="input-wrapper">
                <label class="col-3">아이디</label>
                <input type="text" class="col-8 form-control" name="txt_ID">

                <label class="col-3">비밀번호</label>
                <input type="password" class="col-8 form-control" name="txt_Pass">
            </div>

        </form>
        <div class="align-content-end">
            <button class="btn btn-secondary" onclick="TestRecognition_SignSubmit()">확인</button>
        </div>

        <br />
        <hr />

        <form id="TestRecognition_ConfirmForm">

            <label class="col-3">부서</label>
            <input type="text" class="col-8 form-control" name="dept_nm" readonly />
            <label class="col-3">성명</label>
            <input type="text" class="col-8 form-control" name="emp_nm" readonly />
            <input type="hidden" name="emp_cd" />
        </form>
    }

    @(Html.DevExtreme().Popup()
            .ID("TestRecognition_Popup")
            .Width(500)
            .Height(420)
            .ShowTitle(true)
            .Title("작업자 인증")
            .OnHidden("TestRecognition_clearSignInput")
            .Visible(false)
            .DragEnabled(true)
            .CloseOnOutsideClick(false)
    )

    <div id="TestRecognitionTop" class="mainTop row">
        <div class="col-8">
            <form id="TestRecognitionForm">
                <div class="input-wrapper">
                    <div class="col-4 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">조회구분</span>
                        </div>

                        <label class="p-1"></label>
                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="0" id="date_select_0" name="date_select" />
                        </div>
                        <span class="form-control-sm"><label for="select_S_1">의뢰</label></span>

                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="1" id="date_select_1" name="date_select" disabled />
                        </div>
                        <span class="form-control-sm"><label for="select_S_2">접수</label></span>


                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="2" id="date_select_2" name="date_select" />
                        </div>
                        <span class="form-control-sm"><label for="select_S_2">승인</label></span>


                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="3" id="date_select_3" name="date_select" />
                        </div>
                        <span class="form-control-sm"><label for="select_S_2">전체</label></span>
                    </div>

                    <div class="col-2 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">시험종류</span>
                        </div>
                        <select class="form-control" name="test_typeselc" id="test_typeselc">
                            @foreach (DataRow row in ((DataTable)ViewBag.testType).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class=" col-3 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">구분</span>
                        </div>
                        <select class="form-control" name="search_gubun">
                            <option value="0">의뢰품목</option>
                            <option value="1">의뢰번호</option>
                            <option value="2">제조(관리)번호</option>
                        </select>
                        <input class="form-control" type="text" name="search_number" />
                    </div>

                    @*@(Html.DevExtreme().Button()
                            .Text("파일 첨부/확인")
                            .Type(ButtonType.Default)
                            .StylingMode(ButtonStylingMode.Outlined)
                            .Width(120)
                            .OnClick("TestRecognitionFilePopup")
                        )*@
                </div>

                <div class="input-wrapper">
                    <div class="col-4 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">일자</span>
                        </div>
                        <input type="text" class="form-control datepicker text-center" name="start_date" value="@DateTime.Today.AddMonths(-1).ToShortDateString()" />
                        <label class="p-1">~</label>
                        <input type="text" class="form-control datepicker text-center" name="end_date" value="@DateTime.Today.ToShortDateString()" />
                    </div>

                    <div class="col-3 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">진행상태</span>
                        </div>

                        <label class="p-1"></label>
                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="%" id="test_status_%" name="test_status" />
                        </div>
                        <span class="form-control-sm"><label for="test_status_%">전체</label></span>

                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="1" id="test_status_1" name="test_status" />
                        </div>
                        <span class="form-control-sm"><label for="test_status_1">대상</label></span>

                        <div class="input-group-prepend">
                            <input class="input-group-append" type="radio" value="2" id="test_status_2" name="test_status" />
                        </div>
                        <span class="form-control-sm"><label for="test_status_2">완료</label></span>
                    </div>

                    <div class="col-2 input-group input-group-sm">
                        <div class="input-group-prepend">
                            <span class="input-group-text">제형</span>
                        </div>
                        <select class="form-control" name="item_form_cd">
                            @foreach (DataRow row in ((DataTable)ViewBag.fomulation).Rows)
                            {
                                <option value="@row["keyfield"]">@row["displayfield"]</option>
                            }
                        </select>
                    </div>

                    <div class="col-2 input-group input-group-sm">
                        <label class="p-1 col-6">승인구분</label>
                        <span class="p-1 limegreen">적합</span>
                        <span class="p-1 lightcoral">부적합</span>
                    </div>

                </div>
            </form>
        </div>
        <div class="CRUD-btn col-4">
            @{Html.SetToolbar(0, true, "Search;Delete;Excel");}

            @*@(Html.DevExtreme().Toolbar()
                        .ID("TestRecognition_Toolbar")
                          .Items(items =>
                          {
                              items.Add()
                                  .Widget(w => w
                                      .Button()
                                      .Type(ButtonType.Default)
                                      .StylingMode(ButtonStylingMode.Contained)
                                      .ID("TestRecognitionE_TempSearch")
                                      .Icon("search")
                                      .Text("조회")
                                      .OnClick("TestRecognitionE_TempSearch")
                                  )
                                  .Location(ToolbarItemLocation.Center);
                          })
                          .Items(items =>
                          {
                              items.Add()
                                  .Widget(w => w
                                  .Button()
                                  .Type(ButtonType.Default)
                                  .StylingMode(ButtonStylingMode.Contained)
                                  .ID("TestRecognitionE_TempDelete")
                                  .Icon("trash")
                                  .Text("삭제")
                                  .OnClick("TestRecognitionE_TempDelete")
                                  )
                                  .Location(ToolbarItemLocation.Center);
                          })
                )*@
        </div>
    </div>

    <div class="row">
        <div class="col-8 pr-0">
            <div class="box mb-0">
                @(Html.DevExtreme().DataGrid()
                        .ID("TestRecognition_Grid")
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                        .SearchPanel(searchPanel => searchPanel.Visible(true))
                        .Export(e => e.Enabled(true).AllowExportSelectedData(true))
                        .Height(600)
                        .ShowBorders(true)
                        .ShowColumnLines(true)
                        .ShowRowLines(true)
                        .ColumnAutoWidth(true)
                        .AllowColumnResizing(true)
                        .FocusedRowEnabled(true)
                        .FocusedRowIndex(0)
                        .KeyExpr("testcontrol_id")
                        .Columns(c =>
                        {
                            c.Add().DataField("test_type").Caption("시험종류").AllowEditing(false);
                            c.Add().DataField("item_cd").Caption("품목코드").AllowEditing(false);
                            c.Add().DataField("item_nm").Caption("품목").AllowEditing(false);
                            c.Add().DataField("start_no").Caption("제조번호").AllowEditing(false);
                            c.Add().DataField("test_no").Caption("시험의뢰번호").AllowEditing(true);
                            c.Add().DataField("test_standard_nm_1").Caption("규격").AllowEditing(false);
                            c.Add().DataField("process_nm").Caption("구분").AllowEditing(false);
                            c.Add().DataField("test_result_yn").Caption("판정").AllowEditing(false);
                            c.Add().DataField("test_status_no").Caption("진행상태").AllowEditing(false)
                            .Lookup(lookup => lookup
                                    .DataSource(d => d.WebApi()
                                    .RouteName("Aprov")
                                    .LoadAction("TestRecognition_GetProgressStatus")
                                    .LoadParams(new{ })
                                        .LoadMethod("GET")
                                        .Key("keyfield"))
                                        .ValueExpr("keyfield")
                                        .DisplayExpr("displayfield")
                                ).DataType(GridColumnDataType.String);
                            c.Add().DataField("request_date").Caption("의뢰일자").AllowEditing(false);
                            c.Add().DataField("receive_date").Caption("접수일자").AllowEditing(false);
                            c.Add().DataField("instruction_date").Caption("지시일자").AllowEditing(false);
                            c.Add().DataField("test_date").Caption("승인일자").AllowEditing(false);
                            c.Add().DataField("require_sign").Caption("서명필요").AllowEditing(false);

                            c.Add().DataField("test_result_yn_c").Visible(false);
                            c.Add().DataField("test_inform_remark").Visible(false);
                            c.Add().DataField("test_judge_no").Visible(false);
                            c.Add().DataField("test_result_value0").Visible(false);
                            c.Add().DataField("test_result_value").Visible(false);
                            c.Add().DataField("valid_period").Visible(false);
                            c.Add().DataField("qc_valid_period").Visible(false);
                            c.Add().DataField("retest_yn").Visible(false);
                            c.Add().DataField("extend_yn").Visible(false);
                            c.Add().DataField("extend_yn_nm").Visible(false);
                            c.Add().DataField("test_result_pollination").Visible(false);
                            c.Add().DataField("test_result_solvent").Visible(false);
                            c.Add().DataField("test_result_value0").Visible(false);
                            c.Add().DataField("test_result_value").Visible(false);
                            c.Add().DataField("upload_yn").Visible(false);
                            c.Add().DataField("upload_dt").Visible(false);
                        })
                        .OnFocusedRowChanged("TestRecognition_OnFocusedRowChanged")
                        .OnCellPrepared("TestRecognition_OnCellPrepared")
                        .OnEditorPreparing("TestRecognition_OnEditorPreparing")
                        .OnToolbarPreparing("HideToolbarButton")
                    )

                <div class="input-wrapper" style="margin-top:10px;">
                    <label class="col-1">영문명</label>
                    <input type="text" class="col-2 form-control" name="item_enm" readonly />

                    <label class="col-1">시험번호</label>
                    <input type="text" class="col-2 form-control" name="test_judge_no" readonly />
                </div>

                <div align="right">
                    @(Html.DevExtreme().FileUploader()
                        .SelectButtonText("등록")
                        .Width("95%")
                        .Height(50)
                        .Name("AttachedFile")
                        .ID("AttachedFile")
                        .LabelText("")
                        .Multiple(false)
                        //.AllowedFileExtensions(new[] { ".hwp", ".doc", ".docx", ".dot" })
                        .InvalidFileExtensionMessage("지원하지 않는 파일형식 입니다.")
                        .InvalidMaxFileSizeMessage("최대파일 사이즈는 10MB입니다.")
                        .UploadUrl(Url.Action("TestRecognition_UploadFile", "Aprov"))
                        .UploadMode(FileUploadMode.Instantly)
                        .MaxFileSize(10000000)
                        .OnValueChanged("TestRecognition_UploadAttachedFile")
                        .OnUploaded("TestRecognition_GetFileList")
                        .Visible(false)
                        )

                    <button type="button" class="btn btn-secondary" onclick="TestRecognition_RaiseFileUploadEvent('AttachedFile')">등록</button>
                    <button type="button" class="btn btn-secondary" onclick="TestRecognition_FileOpen()">열기</button>
                    <button type="button" class="btn btn-secondary" onclick="TestRecognition_FileDelete()">삭제</button>
                </div>

                @(Html.DevExtreme().DataGrid()
                    .ID("TestRecognition_FileGrid")
                    .Selection(s => s.Mode(SelectionMode.Single))
                    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                    .Height(200)
                    .ShowBorders(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .FocusedRowEnabled(true)
                    .FocusedRowIndex(0)
                    //.DataSource(new JS("SetTestRecognitionData"))
                    .KeyExpr("file_id")
                    .Columns(c =>
                    {
                        c.Add().DataField("doc_file_name").Caption("첨부자료");
                        @*c.Add().DataField("delete_button").Caption("삭제")
                        .Width(100)
                        .CellTemplate(
                            @<text>
                                <button type="button" onclick="TestRecognition_FileDelete()">...</button>
                            </text>);

                        c.Add().DataField("open_button").Caption("열기")
                        .Width(100)
                        .CellTemplate(
                            @<text>
                                <button type="button" onclick="TestRecognition_FileOpen()">...</button>
                            </text>);*@
                    })
                    .OnFocusedRowChanged("TestRecognition_OnFocusedRowChanged_File")
                )
            </div>
        </div>

        <div class="col-4">
            <div class="box">
                @*<div class="input-wrapper" style="text-align:right; margin-right:3%; margin-top:1%;">
            @(Html.DevExtreme().Button()
            .ID("SaveTestRequestNoClick")
            .Text("수정 내역 저장")
            .Type(ButtonType.Danger)
            .StylingMode(ButtonStylingMode.Contained)
            .Width(120)
            .OnClick("SaveTestRequestNoClick")
            .Visible(false)
            )
            @(Html.DevExtreme().Button()
            .ID("ModifyTestRequestCancel")
            .Text("수정 취소")
            .Type(ButtonType.Danger)
            .StylingMode(ButtonStylingMode.Contained)
            .Width(120)
            .OnClick("ModifyTestRequestCancel")
            .Visible(false)
            )
            @(Html.DevExtreme().Button()
            .ID("ModifyTestRequestNoClick")
            .Text("시험의뢰번호 수정")
            .Type(ButtonType.Danger)
            .StylingMode(ButtonStylingMode.Contained)
            .Width(140)
            .OnClick("ModifyTestRequestNoClick")
            .Visible(true)
            )
        </div>*@

                <form id="TestRecognition_RightForm">
                    <div class="divName">
                        <p>시험의뢰정보</p>
                    </div>
                    <div class="input-wrapper">
                        <label class="col-3">적부판정</label>
                        <div class="input-group col-7">

                            <div class="radioDiv form-control required">
                                <label class="display-none">적부판정</label><!-- 서명전 유효성 체크 checkValidForm 에서 라벨명 띄우기 위하여 추가-->

                                <label><input type="radio" class="required" name="test_result_yn" value="Y" required />적합</label>
                                <label><input type="radio" class="required" name="test_result_yn" value="N" required/>부적합 </label>
                                <label><input type="radio" class="required" name="test_result_yn" value="C" required/>조건부적합 </label>
                            </div>

                        </div>
                    </div>

                    @*<label class="col-3">적부판정</label>
            <div class="radioDiv form-control col-5">
                <label><input type="radio" name="test_result_yn" value="Y" />적합</label>
                <label><input type="radio" name="test_result_yn" value="N" />부적합</label>
                <label><input type="radio" name="test_result_yn" value="C" />조건부적합</label>
            </div>*@

                    <div class="input-wrapper">
                        <label class="col-3">역가</label>
                        <div class="input-group col-1">
                            <input type="number" class="form-control" name="test_result_value" />
                            <input type="number" class="display-none" name="test_result_value0" />
                        </div>

                        <label class="col-2">수분함량</label>
                        <div class="input-group col-1">
                            <input type="number" class="form-control" name="test_result_pollination" />
                        </div>

                        <label class="col-2">용매</label>
                        <div class="input-group col-1">
                            <input type="number" class="form-control" name="test_result_solvent" />
                        </div>
                    </div>

                    <div class="input-wrapper">
                        <label class="col-3">승인일자</label>
                        <div class="input-group col-3">
                            <input type="text" class="form-control datepicker" name="test_date" />
                        </div>
                    </div>

                    <div class="input-wrapper">
                        <label class="col-3">비고</label>
                        <div class="input-group col-7">
                            <input type="text" class="form-control" name="test_inform_remark" />
                        </div>
                    </div>

                    <div class="input-wrapper">
                        <label class="col-3">유통기한</label>
                        <div class="input-group col-4">
                            <div class="radioDiv form-control">
                                <label class="display-none">유통기한</label><!-- 서명전 유효성 체크 checkValidForm 에서 라벨명 띄우기 위하여 추가-->

                                <label><input type="radio" class="required" name="retest_yn" value="Y" />재시험일자</label>
                                <label><input type="radio" class="required" name="retest_yn" value="N" />유통기한</label>
                            </div>
                        </div>
                        <div class="input-group col-2">
                            <input type="text" class="form-control datepicker" name="valid_period" />
                        </div>
                    </div>

                    <!-- LIMS 관련 조건으로 숨김-->
                    @*<div class="input-wrapper margin-bottom">
                        <label class="col-3">(QC)유통기한</label>
                        <div class="input-group col-3">
                            <input type="text" class="form-control datepicker" name="qc_valid_period" />
                        </div>

                        <label class="col-3">부형제 기한연장</label>
                        <div class="input-group col-1">
                            <input type="checkbox" name="extend_yn" readonly />
                        </div>
                    </div>*@
                </form>

                <div class="divName">
                    <p>전자 서명 정보</p>
                </div>
                <div>
                    @(Html.DevExtreme().DataGrid()
                                .ID("TestRecognitionSignGrid")
                                .ShowBorders(true)
                                .Selection(s => s.Mode(SelectionMode.Single))
                                .HoverStateEnabled(true)
                                .ColumnAutoWidth(true)
                                .AllowColumnResizing(true)
                                .Scrolling( scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                                .FocusedRowEnabled(true)
                                .Height(150)
                                .OnCellClick("TestRecognition_SignClick")
                                .KeyExpr("sign_set_dt_id")
                                .Columns(columns =>
                                {
                                    columns.Add().DataField("displayfield").Caption("구분");
                                    columns.Add().DataField("sign_emp_nm").Caption("서명자");
                                    columns.Add().DataField("sign_time").Width(185).Caption("서명일자");
                                    columns.Add().DataField("sign_image").Caption("서명")
                                    .AllowFiltering(false)
                                    .AllowSorting(false)
                                    .CellTemplate(@<text>
                                            <div>
                                                <img src="<%- value %>" alt="" style="width:80px; height:25px;"/>
                                            </div>
                                        </text>);
                                })
                            )
                </div>

                @*<div class="input-wrapper">
                    <label class="col-3">서명의미</label>
                    <div class="input-group col-5">
                        <input type="text" class="form-control" name="test_sign_set_nm" />
                    </div>
                    <div class="input-group col-3">
                        <select class="form-control" id="consider_cd" name="consider_cd" onchange="TestRecognition_LookupChange()">
                        </select>
                    </div>
                </div>
                <div class="input-wrapper">
                    <label class="col-3">책임자</label>
                    <div class="input-group col-3">
                        <input type="text" class="form-control" name="responsible_nm" readonly />
                    </div>
                    <div class="input-group col-5">
                        <input type="text" class="form-control" name="responsible_authority" readonly />
                    </div>
                </div>
                <div class="input-wrapper">
                    <label class="col-3">서명정보</label>
                    <div class="input-group col-3">
                        <input type="text" class="form-control" name="sign_emp_nm" readonly />
                    </div>
                    <div class="input-group col-5">
                        <input type="text" class="form-control" name="sign_emp_authority" readonly />
                    </div>
                </div>
                <div class="input-wrapper">
                    <label class="col-3"></label>
                    <div class="input-group col-8">
                        <input type="text" class="form-control" name="sign_time" id="sign_time" readonly />
                    </div>
                </div>
                <div class="input-wrapper">
                    <label class="col-3"></label>
                    <div class="input-group form-control col-8" style="height:60px;">
                        <img id="sign_image" />
                    </div>
                </div>
                <div class="input-wrapper">
                    <label class="col-9"></label>
                    <button type="button" class="btn btn-secondary" onclick="TestRecognition_SignClick()">전자서명</button>
                </div>*@

            </div>
        </div>
    </div>

</div>
